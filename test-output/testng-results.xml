<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="320" total="5000" passed="4680">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="97182" started-at="2014-09-14T16:20:09Z" finished-at="2014-09-14T16:21:47Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="97182" started-at="2014-09-14T16:20:09Z" finished-at="2014-09-14T16:21:47Z">
      <class name="com.sprhib.TestService">
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="1065" started-at="2014-09-14T19:20:09Z" finished-at="2014-09-14T19:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="1092" started-at="2014-09-14T19:20:09Z" finished-at="2014-09-14T19:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="1110" started-at="2014-09-14T19:20:09Z" finished-at="2014-09-14T19:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="1001" started-at="2014-09-14T19:20:09Z" finished-at="2014-09-14T19:20:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="1047" started-at="2014-09-14T19:20:10Z" finished-at="2014-09-14T19:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="1047" started-at="2014-09-14T19:20:10Z" finished-at="2014-09-14T19:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="1012" started-at="2014-09-14T19:20:10Z" finished-at="2014-09-14T19:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="1106" started-at="2014-09-14T19:20:10Z" finished-at="2014-09-14T19:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="1054" started-at="2014-09-14T19:20:10Z" finished-at="2014-09-14T19:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="1075" started-at="2014-09-14T19:20:10Z" finished-at="2014-09-14T19:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="573" started-at="2014-09-14T19:20:10Z" finished-at="2014-09-14T19:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="302" started-at="2014-09-14T19:20:11Z" finished-at="2014-09-14T19:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="469" started-at="2014-09-14T19:20:11Z" finished-at="2014-09-14T19:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="171" started-at="2014-09-14T19:20:11Z" finished-at="2014-09-14T19:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="467" started-at="2014-09-14T19:20:11Z" finished-at="2014-09-14T19:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="460" started-at="2014-09-14T19:20:11Z" finished-at="2014-09-14T19:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="345" started-at="2014-09-14T19:20:11Z" finished-at="2014-09-14T19:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="438" started-at="2014-09-14T19:20:11Z" finished-at="2014-09-14T19:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="428" started-at="2014-09-14T19:20:11Z" finished-at="2014-09-14T19:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="415" started-at="2014-09-14T19:20:11Z" finished-at="2014-09-14T19:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="530" started-at="2014-09-14T19:20:11Z" finished-at="2014-09-14T19:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="258" started-at="2014-09-14T19:20:11Z" finished-at="2014-09-14T19:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="266" started-at="2014-09-14T19:20:11Z" finished-at="2014-09-14T19:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="174" started-at="2014-09-14T19:20:11Z" finished-at="2014-09-14T19:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="192" started-at="2014-09-14T19:20:11Z" finished-at="2014-09-14T19:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="139" started-at="2014-09-14T19:20:11Z" finished-at="2014-09-14T19:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="120" started-at="2014-09-14T19:20:11Z" finished-at="2014-09-14T19:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="276" started-at="2014-09-14T19:20:11Z" finished-at="2014-09-14T19:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="174" started-at="2014-09-14T19:20:11Z" finished-at="2014-09-14T19:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="224" started-at="2014-09-14T19:20:11Z" finished-at="2014-09-14T19:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="187" started-at="2014-09-14T19:20:11Z" finished-at="2014-09-14T19:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="243" started-at="2014-09-14T19:20:11Z" finished-at="2014-09-14T19:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="229" started-at="2014-09-14T19:20:11Z" finished-at="2014-09-14T19:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="265" started-at="2014-09-14T19:20:11Z" finished-at="2014-09-14T19:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="182" started-at="2014-09-14T19:20:11Z" finished-at="2014-09-14T19:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="189" started-at="2014-09-14T19:20:11Z" finished-at="2014-09-14T19:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="195" started-at="2014-09-14T19:20:11Z" finished-at="2014-09-14T19:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="145" started-at="2014-09-14T19:20:11Z" finished-at="2014-09-14T19:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="443" started-at="2014-09-14T19:20:11Z" finished-at="2014-09-14T19:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="212" started-at="2014-09-14T19:20:11Z" finished-at="2014-09-14T19:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="156" started-at="2014-09-14T19:20:11Z" finished-at="2014-09-14T19:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="247" started-at="2014-09-14T19:20:11Z" finished-at="2014-09-14T19:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="138" started-at="2014-09-14T19:20:11Z" finished-at="2014-09-14T19:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="118" started-at="2014-09-14T19:20:11Z" finished-at="2014-09-14T19:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="147" started-at="2014-09-14T19:20:11Z" finished-at="2014-09-14T19:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="159" started-at="2014-09-14T19:20:11Z" finished-at="2014-09-14T19:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="181" started-at="2014-09-14T19:20:11Z" finished-at="2014-09-14T19:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="190" started-at="2014-09-14T19:20:11Z" finished-at="2014-09-14T19:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="199" started-at="2014-09-14T19:20:11Z" finished-at="2014-09-14T19:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="122" started-at="2014-09-14T19:20:12Z" finished-at="2014-09-14T19:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="219" started-at="2014-09-14T19:20:12Z" finished-at="2014-09-14T19:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="118" started-at="2014-09-14T19:20:12Z" finished-at="2014-09-14T19:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="153" started-at="2014-09-14T19:20:12Z" finished-at="2014-09-14T19:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="148" started-at="2014-09-14T19:20:12Z" finished-at="2014-09-14T19:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="159" started-at="2014-09-14T19:20:12Z" finished-at="2014-09-14T19:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="211" started-at="2014-09-14T19:20:12Z" finished-at="2014-09-14T19:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="238" started-at="2014-09-14T19:20:12Z" finished-at="2014-09-14T19:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="131" started-at="2014-09-14T19:20:12Z" finished-at="2014-09-14T19:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="207" started-at="2014-09-14T19:20:12Z" finished-at="2014-09-14T19:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="150" started-at="2014-09-14T19:20:12Z" finished-at="2014-09-14T19:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="136" started-at="2014-09-14T19:20:12Z" finished-at="2014-09-14T19:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="106" started-at="2014-09-14T19:20:12Z" finished-at="2014-09-14T19:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="130" started-at="2014-09-14T19:20:12Z" finished-at="2014-09-14T19:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="113" started-at="2014-09-14T19:20:12Z" finished-at="2014-09-14T19:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="159" started-at="2014-09-14T19:20:12Z" finished-at="2014-09-14T19:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="105" started-at="2014-09-14T19:20:12Z" finished-at="2014-09-14T19:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="287" started-at="2014-09-14T19:20:12Z" finished-at="2014-09-14T19:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="349" started-at="2014-09-14T19:20:12Z" finished-at="2014-09-14T19:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="215" started-at="2014-09-14T19:20:12Z" finished-at="2014-09-14T19:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="164" started-at="2014-09-14T19:20:12Z" finished-at="2014-09-14T19:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="256" started-at="2014-09-14T19:20:12Z" finished-at="2014-09-14T19:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="195" started-at="2014-09-14T19:20:12Z" finished-at="2014-09-14T19:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="242" started-at="2014-09-14T19:20:12Z" finished-at="2014-09-14T19:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="169" started-at="2014-09-14T19:20:12Z" finished-at="2014-09-14T19:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="210" started-at="2014-09-14T19:20:12Z" finished-at="2014-09-14T19:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="293" started-at="2014-09-14T19:20:12Z" finished-at="2014-09-14T19:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="244" started-at="2014-09-14T19:20:12Z" finished-at="2014-09-14T19:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="251" started-at="2014-09-14T19:20:12Z" finished-at="2014-09-14T19:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="162" started-at="2014-09-14T19:20:12Z" finished-at="2014-09-14T19:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="276" started-at="2014-09-14T19:20:12Z" finished-at="2014-09-14T19:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="123" started-at="2014-09-14T19:20:12Z" finished-at="2014-09-14T19:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="133" started-at="2014-09-14T19:20:12Z" finished-at="2014-09-14T19:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="123" started-at="2014-09-14T19:20:12Z" finished-at="2014-09-14T19:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="131" started-at="2014-09-14T19:20:12Z" finished-at="2014-09-14T19:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="239" started-at="2014-09-14T19:20:12Z" finished-at="2014-09-14T19:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="130" started-at="2014-09-14T19:20:12Z" finished-at="2014-09-14T19:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="367" started-at="2014-09-14T19:20:12Z" finished-at="2014-09-14T19:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="113" started-at="2014-09-14T19:20:12Z" finished-at="2014-09-14T19:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="159" started-at="2014-09-14T19:20:12Z" finished-at="2014-09-14T19:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="261" started-at="2014-09-14T19:20:12Z" finished-at="2014-09-14T19:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="322" started-at="2014-09-14T19:20:12Z" finished-at="2014-09-14T19:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="162" started-at="2014-09-14T19:20:12Z" finished-at="2014-09-14T19:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="138" started-at="2014-09-14T19:20:12Z" finished-at="2014-09-14T19:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="129" started-at="2014-09-14T19:20:12Z" finished-at="2014-09-14T19:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="131" started-at="2014-09-14T19:20:12Z" finished-at="2014-09-14T19:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="149" started-at="2014-09-14T19:20:12Z" finished-at="2014-09-14T19:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="195" started-at="2014-09-14T19:20:12Z" finished-at="2014-09-14T19:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="114" started-at="2014-09-14T19:20:12Z" finished-at="2014-09-14T19:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="200" started-at="2014-09-14T19:20:12Z" finished-at="2014-09-14T19:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="170" started-at="2014-09-14T19:20:13Z" finished-at="2014-09-14T19:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="126" started-at="2014-09-14T19:20:13Z" finished-at="2014-09-14T19:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="199" started-at="2014-09-14T19:20:13Z" finished-at="2014-09-14T19:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="193" started-at="2014-09-14T19:20:13Z" finished-at="2014-09-14T19:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="207" started-at="2014-09-14T19:20:13Z" finished-at="2014-09-14T19:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="143" started-at="2014-09-14T19:20:13Z" finished-at="2014-09-14T19:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="263" started-at="2014-09-14T19:20:13Z" finished-at="2014-09-14T19:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="223" started-at="2014-09-14T19:20:13Z" finished-at="2014-09-14T19:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="176" started-at="2014-09-14T19:20:13Z" finished-at="2014-09-14T19:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="143" started-at="2014-09-14T19:20:13Z" finished-at="2014-09-14T19:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="152" started-at="2014-09-14T19:20:13Z" finished-at="2014-09-14T19:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="180" started-at="2014-09-14T19:20:13Z" finished-at="2014-09-14T19:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="192" started-at="2014-09-14T19:20:13Z" finished-at="2014-09-14T19:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="238" started-at="2014-09-14T19:20:13Z" finished-at="2014-09-14T19:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="171" started-at="2014-09-14T19:20:13Z" finished-at="2014-09-14T19:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="219" started-at="2014-09-14T19:20:13Z" finished-at="2014-09-14T19:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="225" started-at="2014-09-14T19:20:13Z" finished-at="2014-09-14T19:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="234" started-at="2014-09-14T19:20:13Z" finished-at="2014-09-14T19:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="246" started-at="2014-09-14T19:20:13Z" finished-at="2014-09-14T19:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="196" started-at="2014-09-14T19:20:13Z" finished-at="2014-09-14T19:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="202" started-at="2014-09-14T19:20:13Z" finished-at="2014-09-14T19:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="302" started-at="2014-09-14T19:20:13Z" finished-at="2014-09-14T19:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="291" started-at="2014-09-14T19:20:13Z" finished-at="2014-09-14T19:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="193" started-at="2014-09-14T19:20:13Z" finished-at="2014-09-14T19:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="185" started-at="2014-09-14T19:20:13Z" finished-at="2014-09-14T19:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="275" started-at="2014-09-14T19:20:13Z" finished-at="2014-09-14T19:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="256" started-at="2014-09-14T19:20:13Z" finished-at="2014-09-14T19:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="150" started-at="2014-09-14T19:20:13Z" finished-at="2014-09-14T19:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="201" started-at="2014-09-14T19:20:13Z" finished-at="2014-09-14T19:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="230" started-at="2014-09-14T19:20:13Z" finished-at="2014-09-14T19:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="134" started-at="2014-09-14T19:20:13Z" finished-at="2014-09-14T19:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="250" started-at="2014-09-14T19:20:13Z" finished-at="2014-09-14T19:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="182" started-at="2014-09-14T19:20:13Z" finished-at="2014-09-14T19:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="161" started-at="2014-09-14T19:20:13Z" finished-at="2014-09-14T19:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="204" started-at="2014-09-14T19:20:13Z" finished-at="2014-09-14T19:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="176" started-at="2014-09-14T19:20:13Z" finished-at="2014-09-14T19:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="252" started-at="2014-09-14T19:20:13Z" finished-at="2014-09-14T19:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="296" started-at="2014-09-14T19:20:13Z" finished-at="2014-09-14T19:20:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="225" started-at="2014-09-14T19:20:13Z" finished-at="2014-09-14T19:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="223" started-at="2014-09-14T19:20:13Z" finished-at="2014-09-14T19:20:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="376" started-at="2014-09-14T19:20:13Z" finished-at="2014-09-14T19:20:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="203" started-at="2014-09-14T19:20:13Z" finished-at="2014-09-14T19:20:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="150" started-at="2014-09-14T19:20:13Z" finished-at="2014-09-14T19:20:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="165" started-at="2014-09-14T19:20:13Z" finished-at="2014-09-14T19:20:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="331" started-at="2014-09-14T19:20:13Z" finished-at="2014-09-14T19:20:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="211" started-at="2014-09-14T19:20:13Z" finished-at="2014-09-14T19:20:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="147" started-at="2014-09-14T19:20:13Z" finished-at="2014-09-14T19:20:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="186" started-at="2014-09-14T19:20:13Z" finished-at="2014-09-14T19:20:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="146" started-at="2014-09-14T19:20:13Z" finished-at="2014-09-14T19:20:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="130" started-at="2014-09-14T19:20:14Z" finished-at="2014-09-14T19:20:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="211" started-at="2014-09-14T19:20:14Z" finished-at="2014-09-14T19:20:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="132" started-at="2014-09-14T19:20:14Z" finished-at="2014-09-14T19:20:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="173" started-at="2014-09-14T19:20:14Z" finished-at="2014-09-14T19:20:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="173" started-at="2014-09-14T19:20:14Z" finished-at="2014-09-14T19:20:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="240" started-at="2014-09-14T19:20:14Z" finished-at="2014-09-14T19:20:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="246" started-at="2014-09-14T19:20:14Z" finished-at="2014-09-14T19:20:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="214" started-at="2014-09-14T19:20:14Z" finished-at="2014-09-14T19:20:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="182" started-at="2014-09-14T19:20:14Z" finished-at="2014-09-14T19:20:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="155" started-at="2014-09-14T19:20:14Z" finished-at="2014-09-14T19:20:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="266" started-at="2014-09-14T19:20:14Z" finished-at="2014-09-14T19:20:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="228" started-at="2014-09-14T19:20:14Z" finished-at="2014-09-14T19:20:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="156" started-at="2014-09-14T19:20:14Z" finished-at="2014-09-14T19:20:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="242" started-at="2014-09-14T19:20:14Z" finished-at="2014-09-14T19:20:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="188" started-at="2014-09-14T19:20:14Z" finished-at="2014-09-14T19:20:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="152" started-at="2014-09-14T19:20:14Z" finished-at="2014-09-14T19:20:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="363" started-at="2014-09-14T19:20:14Z" finished-at="2014-09-14T19:20:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="202" started-at="2014-09-14T19:20:14Z" finished-at="2014-09-14T19:20:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="314" started-at="2014-09-14T19:20:14Z" finished-at="2014-09-14T19:20:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="198" started-at="2014-09-14T19:20:14Z" finished-at="2014-09-14T19:20:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="297" started-at="2014-09-14T19:20:14Z" finished-at="2014-09-14T19:20:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="253" started-at="2014-09-14T19:20:14Z" finished-at="2014-09-14T19:20:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="234" started-at="2014-09-14T19:20:14Z" finished-at="2014-09-14T19:20:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="184" started-at="2014-09-14T19:20:14Z" finished-at="2014-09-14T19:20:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="241" started-at="2014-09-14T19:20:14Z" finished-at="2014-09-14T19:20:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="266" started-at="2014-09-14T19:20:14Z" finished-at="2014-09-14T19:20:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="127" started-at="2014-09-14T19:20:14Z" finished-at="2014-09-14T19:20:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="163" started-at="2014-09-14T19:20:14Z" finished-at="2014-09-14T19:20:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="175" started-at="2014-09-14T19:20:14Z" finished-at="2014-09-14T19:20:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="214" started-at="2014-09-14T19:20:14Z" finished-at="2014-09-14T19:20:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="151" started-at="2014-09-14T19:20:14Z" finished-at="2014-09-14T19:20:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="128" started-at="2014-09-14T19:20:14Z" finished-at="2014-09-14T19:20:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="192" started-at="2014-09-14T19:20:14Z" finished-at="2014-09-14T19:20:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="168" started-at="2014-09-14T19:20:14Z" finished-at="2014-09-14T19:20:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="195" started-at="2014-09-14T19:20:14Z" finished-at="2014-09-14T19:20:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="155" started-at="2014-09-14T19:20:14Z" finished-at="2014-09-14T19:20:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="198" started-at="2014-09-14T19:20:14Z" finished-at="2014-09-14T19:20:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="227" started-at="2014-09-14T19:20:14Z" finished-at="2014-09-14T19:20:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="195" started-at="2014-09-14T19:20:14Z" finished-at="2014-09-14T19:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="177" started-at="2014-09-14T19:20:14Z" finished-at="2014-09-14T19:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="191" started-at="2014-09-14T19:20:14Z" finished-at="2014-09-14T19:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="353" started-at="2014-09-14T19:20:14Z" finished-at="2014-09-14T19:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="360" started-at="2014-09-14T19:20:14Z" finished-at="2014-09-14T19:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="164" started-at="2014-09-14T19:20:14Z" finished-at="2014-09-14T19:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="307" started-at="2014-09-14T19:20:14Z" finished-at="2014-09-14T19:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="297" started-at="2014-09-14T19:20:14Z" finished-at="2014-09-14T19:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="398" started-at="2014-09-14T19:20:14Z" finished-at="2014-09-14T19:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="340" started-at="2014-09-14T19:20:14Z" finished-at="2014-09-14T19:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="285" started-at="2014-09-14T19:20:15Z" finished-at="2014-09-14T19:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="288" started-at="2014-09-14T19:20:15Z" finished-at="2014-09-14T19:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="336" started-at="2014-09-14T19:20:15Z" finished-at="2014-09-14T19:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="330" started-at="2014-09-14T19:20:15Z" finished-at="2014-09-14T19:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="286" started-at="2014-09-14T19:20:15Z" finished-at="2014-09-14T19:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="243" started-at="2014-09-14T19:20:15Z" finished-at="2014-09-14T19:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="166" started-at="2014-09-14T19:20:15Z" finished-at="2014-09-14T19:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="160" started-at="2014-09-14T19:20:15Z" finished-at="2014-09-14T19:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="156" started-at="2014-09-14T19:20:15Z" finished-at="2014-09-14T19:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="167" started-at="2014-09-14T19:20:15Z" finished-at="2014-09-14T19:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="187" started-at="2014-09-14T19:20:15Z" finished-at="2014-09-14T19:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="218" started-at="2014-09-14T19:20:15Z" finished-at="2014-09-14T19:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="162" started-at="2014-09-14T19:20:15Z" finished-at="2014-09-14T19:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="332" started-at="2014-09-14T19:20:15Z" finished-at="2014-09-14T19:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="391" started-at="2014-09-14T19:20:15Z" finished-at="2014-09-14T19:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="176" started-at="2014-09-14T19:20:15Z" finished-at="2014-09-14T19:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="139" started-at="2014-09-14T19:20:15Z" finished-at="2014-09-14T19:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="135" started-at="2014-09-14T19:20:15Z" finished-at="2014-09-14T19:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="234" started-at="2014-09-14T19:20:15Z" finished-at="2014-09-14T19:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="230" started-at="2014-09-14T19:20:15Z" finished-at="2014-09-14T19:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="183" started-at="2014-09-14T19:20:15Z" finished-at="2014-09-14T19:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="206" started-at="2014-09-14T19:20:15Z" finished-at="2014-09-14T19:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="148" started-at="2014-09-14T19:20:15Z" finished-at="2014-09-14T19:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="194" started-at="2014-09-14T19:20:15Z" finished-at="2014-09-14T19:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="179" started-at="2014-09-14T19:20:15Z" finished-at="2014-09-14T19:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="163" started-at="2014-09-14T19:20:15Z" finished-at="2014-09-14T19:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="185" started-at="2014-09-14T19:20:15Z" finished-at="2014-09-14T19:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="190" started-at="2014-09-14T19:20:15Z" finished-at="2014-09-14T19:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="137" started-at="2014-09-14T19:20:15Z" finished-at="2014-09-14T19:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="233" started-at="2014-09-14T19:20:15Z" finished-at="2014-09-14T19:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="242" started-at="2014-09-14T19:20:15Z" finished-at="2014-09-14T19:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="130" started-at="2014-09-14T19:20:15Z" finished-at="2014-09-14T19:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="198" started-at="2014-09-14T19:20:15Z" finished-at="2014-09-14T19:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="131" started-at="2014-09-14T19:20:15Z" finished-at="2014-09-14T19:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="98" started-at="2014-09-14T19:20:15Z" finished-at="2014-09-14T19:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="156" started-at="2014-09-14T19:20:15Z" finished-at="2014-09-14T19:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="195" started-at="2014-09-14T19:20:15Z" finished-at="2014-09-14T19:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="121" started-at="2014-09-14T19:20:15Z" finished-at="2014-09-14T19:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="154" started-at="2014-09-14T19:20:15Z" finished-at="2014-09-14T19:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="142" started-at="2014-09-14T19:20:15Z" finished-at="2014-09-14T19:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="190" started-at="2014-09-14T19:20:15Z" finished-at="2014-09-14T19:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="164" started-at="2014-09-14T19:20:15Z" finished-at="2014-09-14T19:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="128" started-at="2014-09-14T19:20:15Z" finished-at="2014-09-14T19:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="168" started-at="2014-09-14T19:20:15Z" finished-at="2014-09-14T19:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="147" started-at="2014-09-14T19:20:15Z" finished-at="2014-09-14T19:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="169" started-at="2014-09-14T19:20:15Z" finished-at="2014-09-14T19:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="153" started-at="2014-09-14T19:20:15Z" finished-at="2014-09-14T19:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="141" started-at="2014-09-14T19:20:16Z" finished-at="2014-09-14T19:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="290" started-at="2014-09-14T19:20:16Z" finished-at="2014-09-14T19:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="224" started-at="2014-09-14T19:20:16Z" finished-at="2014-09-14T19:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="193" started-at="2014-09-14T19:20:16Z" finished-at="2014-09-14T19:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="165" started-at="2014-09-14T19:20:16Z" finished-at="2014-09-14T19:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="126" started-at="2014-09-14T19:20:16Z" finished-at="2014-09-14T19:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="131" started-at="2014-09-14T19:20:16Z" finished-at="2014-09-14T19:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="141" started-at="2014-09-14T19:20:16Z" finished-at="2014-09-14T19:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="243" started-at="2014-09-14T19:20:16Z" finished-at="2014-09-14T19:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="138" started-at="2014-09-14T19:20:16Z" finished-at="2014-09-14T19:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="124" started-at="2014-09-14T19:20:16Z" finished-at="2014-09-14T19:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="294" started-at="2014-09-14T19:20:16Z" finished-at="2014-09-14T19:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="115" started-at="2014-09-14T19:20:16Z" finished-at="2014-09-14T19:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="260" started-at="2014-09-14T19:20:16Z" finished-at="2014-09-14T19:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="132" started-at="2014-09-14T19:20:16Z" finished-at="2014-09-14T19:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="141" started-at="2014-09-14T19:20:16Z" finished-at="2014-09-14T19:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="114" started-at="2014-09-14T19:20:16Z" finished-at="2014-09-14T19:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="140" started-at="2014-09-14T19:20:16Z" finished-at="2014-09-14T19:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="349" started-at="2014-09-14T19:20:16Z" finished-at="2014-09-14T19:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="145" started-at="2014-09-14T19:20:16Z" finished-at="2014-09-14T19:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="130" started-at="2014-09-14T19:20:16Z" finished-at="2014-09-14T19:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="204" started-at="2014-09-14T19:20:16Z" finished-at="2014-09-14T19:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="133" started-at="2014-09-14T19:20:16Z" finished-at="2014-09-14T19:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="181" started-at="2014-09-14T19:20:16Z" finished-at="2014-09-14T19:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="178" started-at="2014-09-14T19:20:16Z" finished-at="2014-09-14T19:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="212" started-at="2014-09-14T19:20:16Z" finished-at="2014-09-14T19:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="156" started-at="2014-09-14T19:20:16Z" finished-at="2014-09-14T19:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="208" started-at="2014-09-14T19:20:16Z" finished-at="2014-09-14T19:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="231" started-at="2014-09-14T19:20:16Z" finished-at="2014-09-14T19:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="163" started-at="2014-09-14T19:20:16Z" finished-at="2014-09-14T19:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="194" started-at="2014-09-14T19:20:16Z" finished-at="2014-09-14T19:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="157" started-at="2014-09-14T19:20:16Z" finished-at="2014-09-14T19:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="135" started-at="2014-09-14T19:20:16Z" finished-at="2014-09-14T19:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="174" started-at="2014-09-14T19:20:16Z" finished-at="2014-09-14T19:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="220" started-at="2014-09-14T19:20:16Z" finished-at="2014-09-14T19:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="143" started-at="2014-09-14T19:20:16Z" finished-at="2014-09-14T19:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="302" started-at="2014-09-14T19:20:16Z" finished-at="2014-09-14T19:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="146" started-at="2014-09-14T19:20:16Z" finished-at="2014-09-14T19:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="216" started-at="2014-09-14T19:20:16Z" finished-at="2014-09-14T19:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="238" started-at="2014-09-14T19:20:16Z" finished-at="2014-09-14T19:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="178" started-at="2014-09-14T19:20:16Z" finished-at="2014-09-14T19:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="113" started-at="2014-09-14T19:20:16Z" finished-at="2014-09-14T19:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="109" started-at="2014-09-14T19:20:16Z" finished-at="2014-09-14T19:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="154" started-at="2014-09-14T19:20:16Z" finished-at="2014-09-14T19:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="145" started-at="2014-09-14T19:20:16Z" finished-at="2014-09-14T19:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="192" started-at="2014-09-14T19:20:16Z" finished-at="2014-09-14T19:20:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="185" started-at="2014-09-14T19:20:16Z" finished-at="2014-09-14T19:20:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="104" started-at="2014-09-14T19:20:16Z" finished-at="2014-09-14T19:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="174" started-at="2014-09-14T19:20:16Z" finished-at="2014-09-14T19:20:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="190" started-at="2014-09-14T19:20:16Z" finished-at="2014-09-14T19:20:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="147" started-at="2014-09-14T19:20:16Z" finished-at="2014-09-14T19:20:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="208" started-at="2014-09-14T19:20:16Z" finished-at="2014-09-14T19:20:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="118" started-at="2014-09-14T19:20:16Z" finished-at="2014-09-14T19:20:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="294" started-at="2014-09-14T19:20:16Z" finished-at="2014-09-14T19:20:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="132" started-at="2014-09-14T19:20:16Z" finished-at="2014-09-14T19:20:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="146" started-at="2014-09-14T19:20:16Z" finished-at="2014-09-14T19:20:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="196" started-at="2014-09-14T19:20:17Z" finished-at="2014-09-14T19:20:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="124" started-at="2014-09-14T19:20:17Z" finished-at="2014-09-14T19:20:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="184" started-at="2014-09-14T19:20:17Z" finished-at="2014-09-14T19:20:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="185" started-at="2014-09-14T19:20:17Z" finished-at="2014-09-14T19:20:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="165" started-at="2014-09-14T19:20:17Z" finished-at="2014-09-14T19:20:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="177" started-at="2014-09-14T19:20:17Z" finished-at="2014-09-14T19:20:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="153" started-at="2014-09-14T19:20:17Z" finished-at="2014-09-14T19:20:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="218" started-at="2014-09-14T19:20:17Z" finished-at="2014-09-14T19:20:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="147" started-at="2014-09-14T19:20:17Z" finished-at="2014-09-14T19:20:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="290" started-at="2014-09-14T19:20:17Z" finished-at="2014-09-14T19:20:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="255" started-at="2014-09-14T19:20:17Z" finished-at="2014-09-14T19:20:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="178" started-at="2014-09-14T19:20:17Z" finished-at="2014-09-14T19:20:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="120" started-at="2014-09-14T19:20:17Z" finished-at="2014-09-14T19:20:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="272" started-at="2014-09-14T19:20:17Z" finished-at="2014-09-14T19:20:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="170" started-at="2014-09-14T19:20:17Z" finished-at="2014-09-14T19:20:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="212" started-at="2014-09-14T19:20:17Z" finished-at="2014-09-14T19:20:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="163" started-at="2014-09-14T19:20:17Z" finished-at="2014-09-14T19:20:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="222" started-at="2014-09-14T19:20:17Z" finished-at="2014-09-14T19:20:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="212" started-at="2014-09-14T19:20:17Z" finished-at="2014-09-14T19:20:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="298" started-at="2014-09-14T19:20:17Z" finished-at="2014-09-14T19:20:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="179" started-at="2014-09-14T19:20:17Z" finished-at="2014-09-14T19:20:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="265" started-at="2014-09-14T19:20:17Z" finished-at="2014-09-14T19:20:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="179" started-at="2014-09-14T19:20:17Z" finished-at="2014-09-14T19:20:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="236" started-at="2014-09-14T19:20:17Z" finished-at="2014-09-14T19:20:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="178" started-at="2014-09-14T19:20:17Z" finished-at="2014-09-14T19:20:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="204" started-at="2014-09-14T19:20:17Z" finished-at="2014-09-14T19:20:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="227" started-at="2014-09-14T19:20:17Z" finished-at="2014-09-14T19:20:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="284" started-at="2014-09-14T19:20:17Z" finished-at="2014-09-14T19:20:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="139" started-at="2014-09-14T19:20:17Z" finished-at="2014-09-14T19:20:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="246" started-at="2014-09-14T19:20:17Z" finished-at="2014-09-14T19:20:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="137" started-at="2014-09-14T19:20:17Z" finished-at="2014-09-14T19:20:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="231" started-at="2014-09-14T19:20:17Z" finished-at="2014-09-14T19:20:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="136" started-at="2014-09-14T19:20:17Z" finished-at="2014-09-14T19:20:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="319" started-at="2014-09-14T19:20:17Z" finished-at="2014-09-14T19:20:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="371" started-at="2014-09-14T19:20:17Z" finished-at="2014-09-14T19:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="169" started-at="2014-09-14T19:20:17Z" finished-at="2014-09-14T19:20:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="152" started-at="2014-09-14T19:20:17Z" finished-at="2014-09-14T19:20:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="140" started-at="2014-09-14T19:20:17Z" finished-at="2014-09-14T19:20:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="136" started-at="2014-09-14T19:20:17Z" finished-at="2014-09-14T19:20:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="154" started-at="2014-09-14T19:20:17Z" finished-at="2014-09-14T19:20:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="167" started-at="2014-09-14T19:20:17Z" finished-at="2014-09-14T19:20:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="239" started-at="2014-09-14T19:20:17Z" finished-at="2014-09-14T19:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="162" started-at="2014-09-14T19:20:17Z" finished-at="2014-09-14T19:20:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="89" started-at="2014-09-14T19:20:17Z" finished-at="2014-09-14T19:20:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="110" started-at="2014-09-14T19:20:17Z" finished-at="2014-09-14T19:20:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="138" started-at="2014-09-14T19:20:17Z" finished-at="2014-09-14T19:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="147" started-at="2014-09-14T19:20:17Z" finished-at="2014-09-14T19:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="175" started-at="2014-09-14T19:20:17Z" finished-at="2014-09-14T19:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="254" started-at="2014-09-14T19:20:17Z" finished-at="2014-09-14T19:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="152" started-at="2014-09-14T19:20:17Z" finished-at="2014-09-14T19:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="305" started-at="2014-09-14T19:20:17Z" finished-at="2014-09-14T19:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="131" started-at="2014-09-14T19:20:17Z" finished-at="2014-09-14T19:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="141" started-at="2014-09-14T19:20:17Z" finished-at="2014-09-14T19:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="161" started-at="2014-09-14T19:20:18Z" finished-at="2014-09-14T19:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="242" started-at="2014-09-14T19:20:18Z" finished-at="2014-09-14T19:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="264" started-at="2014-09-14T19:20:18Z" finished-at="2014-09-14T19:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="192" started-at="2014-09-14T19:20:18Z" finished-at="2014-09-14T19:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="115" started-at="2014-09-14T19:20:18Z" finished-at="2014-09-14T19:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="105" started-at="2014-09-14T19:20:18Z" finished-at="2014-09-14T19:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="131" started-at="2014-09-14T19:20:18Z" finished-at="2014-09-14T19:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="237" started-at="2014-09-14T19:20:18Z" finished-at="2014-09-14T19:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="194" started-at="2014-09-14T19:20:18Z" finished-at="2014-09-14T19:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="282" started-at="2014-09-14T19:20:18Z" finished-at="2014-09-14T19:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="159" started-at="2014-09-14T19:20:18Z" finished-at="2014-09-14T19:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="175" started-at="2014-09-14T19:20:18Z" finished-at="2014-09-14T19:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="219" started-at="2014-09-14T19:20:18Z" finished-at="2014-09-14T19:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="257" started-at="2014-09-14T19:20:18Z" finished-at="2014-09-14T19:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="147" started-at="2014-09-14T19:20:18Z" finished-at="2014-09-14T19:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="234" started-at="2014-09-14T19:20:18Z" finished-at="2014-09-14T19:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="190" started-at="2014-09-14T19:20:18Z" finished-at="2014-09-14T19:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="333" started-at="2014-09-14T19:20:18Z" finished-at="2014-09-14T19:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="423" started-at="2014-09-14T19:20:18Z" finished-at="2014-09-14T19:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="182" started-at="2014-09-14T19:20:18Z" finished-at="2014-09-14T19:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="240" started-at="2014-09-14T19:20:18Z" finished-at="2014-09-14T19:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="179" started-at="2014-09-14T19:20:18Z" finished-at="2014-09-14T19:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="202" started-at="2014-09-14T19:20:18Z" finished-at="2014-09-14T19:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="249" started-at="2014-09-14T19:20:18Z" finished-at="2014-09-14T19:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="317" started-at="2014-09-14T19:20:18Z" finished-at="2014-09-14T19:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="200" started-at="2014-09-14T19:20:18Z" finished-at="2014-09-14T19:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="244" started-at="2014-09-14T19:20:18Z" finished-at="2014-09-14T19:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="213" started-at="2014-09-14T19:20:18Z" finished-at="2014-09-14T19:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="315" started-at="2014-09-14T19:20:18Z" finished-at="2014-09-14T19:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="224" started-at="2014-09-14T19:20:18Z" finished-at="2014-09-14T19:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="169" started-at="2014-09-14T19:20:18Z" finished-at="2014-09-14T19:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="266" started-at="2014-09-14T19:20:18Z" finished-at="2014-09-14T19:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="168" started-at="2014-09-14T19:20:18Z" finished-at="2014-09-14T19:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="168" started-at="2014-09-14T19:20:18Z" finished-at="2014-09-14T19:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="175" started-at="2014-09-14T19:20:18Z" finished-at="2014-09-14T19:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="141" started-at="2014-09-14T19:20:18Z" finished-at="2014-09-14T19:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="169" started-at="2014-09-14T19:20:18Z" finished-at="2014-09-14T19:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="244" started-at="2014-09-14T19:20:18Z" finished-at="2014-09-14T19:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="187" started-at="2014-09-14T19:20:18Z" finished-at="2014-09-14T19:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="275" started-at="2014-09-14T19:20:18Z" finished-at="2014-09-14T19:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="171" started-at="2014-09-14T19:20:18Z" finished-at="2014-09-14T19:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="112" started-at="2014-09-14T19:20:18Z" finished-at="2014-09-14T19:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="124" started-at="2014-09-14T19:20:18Z" finished-at="2014-09-14T19:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="178" started-at="2014-09-14T19:20:18Z" finished-at="2014-09-14T19:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="250" started-at="2014-09-14T19:20:18Z" finished-at="2014-09-14T19:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="176" started-at="2014-09-14T19:20:18Z" finished-at="2014-09-14T19:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="217" started-at="2014-09-14T19:20:18Z" finished-at="2014-09-14T19:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="199" started-at="2014-09-14T19:20:19Z" finished-at="2014-09-14T19:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="196" started-at="2014-09-14T19:20:19Z" finished-at="2014-09-14T19:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="127" started-at="2014-09-14T19:20:19Z" finished-at="2014-09-14T19:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="188" started-at="2014-09-14T19:20:19Z" finished-at="2014-09-14T19:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="336" started-at="2014-09-14T19:20:19Z" finished-at="2014-09-14T19:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="183" started-at="2014-09-14T19:20:19Z" finished-at="2014-09-14T19:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="204" started-at="2014-09-14T19:20:19Z" finished-at="2014-09-14T19:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="85" started-at="2014-09-14T19:20:19Z" finished-at="2014-09-14T19:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="156" started-at="2014-09-14T19:20:19Z" finished-at="2014-09-14T19:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="216" started-at="2014-09-14T19:20:19Z" finished-at="2014-09-14T19:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="157" started-at="2014-09-14T19:20:19Z" finished-at="2014-09-14T19:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="180" started-at="2014-09-14T19:20:19Z" finished-at="2014-09-14T19:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="175" started-at="2014-09-14T19:20:19Z" finished-at="2014-09-14T19:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="152" started-at="2014-09-14T19:20:19Z" finished-at="2014-09-14T19:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="170" started-at="2014-09-14T19:20:19Z" finished-at="2014-09-14T19:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="221" started-at="2014-09-14T19:20:19Z" finished-at="2014-09-14T19:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="124" started-at="2014-09-14T19:20:19Z" finished-at="2014-09-14T19:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="171" started-at="2014-09-14T19:20:19Z" finished-at="2014-09-14T19:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="202" started-at="2014-09-14T19:20:19Z" finished-at="2014-09-14T19:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="229" started-at="2014-09-14T19:20:19Z" finished-at="2014-09-14T19:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="312" started-at="2014-09-14T19:20:19Z" finished-at="2014-09-14T19:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="150" started-at="2014-09-14T19:20:19Z" finished-at="2014-09-14T19:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="213" started-at="2014-09-14T19:20:19Z" finished-at="2014-09-14T19:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="218" started-at="2014-09-14T19:20:19Z" finished-at="2014-09-14T19:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="173" started-at="2014-09-14T19:20:19Z" finished-at="2014-09-14T19:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="254" started-at="2014-09-14T19:20:19Z" finished-at="2014-09-14T19:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="202" started-at="2014-09-14T19:20:19Z" finished-at="2014-09-14T19:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="155" started-at="2014-09-14T19:20:19Z" finished-at="2014-09-14T19:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="206" started-at="2014-09-14T19:20:19Z" finished-at="2014-09-14T19:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="154" started-at="2014-09-14T19:20:19Z" finished-at="2014-09-14T19:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="156" started-at="2014-09-14T19:20:19Z" finished-at="2014-09-14T19:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="242" started-at="2014-09-14T19:20:19Z" finished-at="2014-09-14T19:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="174" started-at="2014-09-14T19:20:19Z" finished-at="2014-09-14T19:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="214" started-at="2014-09-14T19:20:19Z" finished-at="2014-09-14T19:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="153" started-at="2014-09-14T19:20:19Z" finished-at="2014-09-14T19:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="136" started-at="2014-09-14T19:20:19Z" finished-at="2014-09-14T19:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="229" started-at="2014-09-14T19:20:19Z" finished-at="2014-09-14T19:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="207" started-at="2014-09-14T19:20:19Z" finished-at="2014-09-14T19:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="163" started-at="2014-09-14T19:20:19Z" finished-at="2014-09-14T19:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="316" started-at="2014-09-14T19:20:19Z" finished-at="2014-09-14T19:20:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="199" started-at="2014-09-14T19:20:19Z" finished-at="2014-09-14T19:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="187" started-at="2014-09-14T19:20:19Z" finished-at="2014-09-14T19:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="192" started-at="2014-09-14T19:20:19Z" finished-at="2014-09-14T19:20:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="141" started-at="2014-09-14T19:20:19Z" finished-at="2014-09-14T19:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="128" started-at="2014-09-14T19:20:19Z" finished-at="2014-09-14T19:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="256" started-at="2014-09-14T19:20:19Z" finished-at="2014-09-14T19:20:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="181" started-at="2014-09-14T19:20:19Z" finished-at="2014-09-14T19:20:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="172" started-at="2014-09-14T19:20:19Z" finished-at="2014-09-14T19:20:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="153" started-at="2014-09-14T19:20:19Z" finished-at="2014-09-14T19:20:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="197" started-at="2014-09-14T19:20:19Z" finished-at="2014-09-14T19:20:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="218" started-at="2014-09-14T19:20:19Z" finished-at="2014-09-14T19:20:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="226" started-at="2014-09-14T19:20:19Z" finished-at="2014-09-14T19:20:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="111" started-at="2014-09-14T19:20:19Z" finished-at="2014-09-14T19:20:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="155" started-at="2014-09-14T19:20:20Z" finished-at="2014-09-14T19:20:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="235" started-at="2014-09-14T19:20:20Z" finished-at="2014-09-14T19:20:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="297" started-at="2014-09-14T19:20:20Z" finished-at="2014-09-14T19:20:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="166" started-at="2014-09-14T19:20:20Z" finished-at="2014-09-14T19:20:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="469" started-at="2014-09-14T19:20:20Z" finished-at="2014-09-14T19:20:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="141" started-at="2014-09-14T19:20:20Z" finished-at="2014-09-14T19:20:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="159" started-at="2014-09-14T19:20:20Z" finished-at="2014-09-14T19:20:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="122" started-at="2014-09-14T19:20:20Z" finished-at="2014-09-14T19:20:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="255" started-at="2014-09-14T19:20:20Z" finished-at="2014-09-14T19:20:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="136" started-at="2014-09-14T19:20:20Z" finished-at="2014-09-14T19:20:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="150" started-at="2014-09-14T19:20:20Z" finished-at="2014-09-14T19:20:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="168" started-at="2014-09-14T19:20:20Z" finished-at="2014-09-14T19:20:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="267" started-at="2014-09-14T19:20:20Z" finished-at="2014-09-14T19:20:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="173" started-at="2014-09-14T19:20:20Z" finished-at="2014-09-14T19:20:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="278" started-at="2014-09-14T19:20:20Z" finished-at="2014-09-14T19:20:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="131" started-at="2014-09-14T19:20:20Z" finished-at="2014-09-14T19:20:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="112" started-at="2014-09-14T19:20:20Z" finished-at="2014-09-14T19:20:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="295" started-at="2014-09-14T19:20:20Z" finished-at="2014-09-14T19:20:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="176" started-at="2014-09-14T19:20:20Z" finished-at="2014-09-14T19:20:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="238" started-at="2014-09-14T19:20:20Z" finished-at="2014-09-14T19:20:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="167" started-at="2014-09-14T19:20:20Z" finished-at="2014-09-14T19:20:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="144" started-at="2014-09-14T19:20:20Z" finished-at="2014-09-14T19:20:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="176" started-at="2014-09-14T19:20:20Z" finished-at="2014-09-14T19:20:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="151" started-at="2014-09-14T19:20:20Z" finished-at="2014-09-14T19:20:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="122" started-at="2014-09-14T19:20:20Z" finished-at="2014-09-14T19:20:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="354" started-at="2014-09-14T19:20:20Z" finished-at="2014-09-14T19:20:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="163" started-at="2014-09-14T19:20:20Z" finished-at="2014-09-14T19:20:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="150" started-at="2014-09-14T19:20:20Z" finished-at="2014-09-14T19:20:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="129" started-at="2014-09-14T19:20:20Z" finished-at="2014-09-14T19:20:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="148" started-at="2014-09-14T19:20:20Z" finished-at="2014-09-14T19:20:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="207" started-at="2014-09-14T19:20:20Z" finished-at="2014-09-14T19:20:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="132" started-at="2014-09-14T19:20:20Z" finished-at="2014-09-14T19:20:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="133" started-at="2014-09-14T19:20:20Z" finished-at="2014-09-14T19:20:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="142" started-at="2014-09-14T19:20:20Z" finished-at="2014-09-14T19:20:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="190" started-at="2014-09-14T19:20:20Z" finished-at="2014-09-14T19:20:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="131" started-at="2014-09-14T19:20:20Z" finished-at="2014-09-14T19:20:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="121" started-at="2014-09-14T19:20:20Z" finished-at="2014-09-14T19:20:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="164" started-at="2014-09-14T19:20:20Z" finished-at="2014-09-14T19:20:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="178" started-at="2014-09-14T19:20:20Z" finished-at="2014-09-14T19:20:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="332" started-at="2014-09-14T19:20:20Z" finished-at="2014-09-14T19:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="135" started-at="2014-09-14T19:20:20Z" finished-at="2014-09-14T19:20:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="154" started-at="2014-09-14T19:20:20Z" finished-at="2014-09-14T19:20:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="190" started-at="2014-09-14T19:20:20Z" finished-at="2014-09-14T19:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="224" started-at="2014-09-14T19:20:20Z" finished-at="2014-09-14T19:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="141" started-at="2014-09-14T19:20:20Z" finished-at="2014-09-14T19:20:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="180" started-at="2014-09-14T19:20:20Z" finished-at="2014-09-14T19:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="151" started-at="2014-09-14T19:20:20Z" finished-at="2014-09-14T19:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="180" started-at="2014-09-14T19:20:20Z" finished-at="2014-09-14T19:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="193" started-at="2014-09-14T19:20:20Z" finished-at="2014-09-14T19:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="163" started-at="2014-09-14T19:20:20Z" finished-at="2014-09-14T19:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="139" started-at="2014-09-14T19:20:20Z" finished-at="2014-09-14T19:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="246" started-at="2014-09-14T19:20:20Z" finished-at="2014-09-14T19:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="198" started-at="2014-09-14T19:20:21Z" finished-at="2014-09-14T19:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="134" started-at="2014-09-14T19:20:21Z" finished-at="2014-09-14T19:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="248" started-at="2014-09-14T19:20:21Z" finished-at="2014-09-14T19:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="123" started-at="2014-09-14T19:20:21Z" finished-at="2014-09-14T19:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="145" started-at="2014-09-14T19:20:21Z" finished-at="2014-09-14T19:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="169" started-at="2014-09-14T19:20:21Z" finished-at="2014-09-14T19:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="475" started-at="2014-09-14T19:20:21Z" finished-at="2014-09-14T19:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="128" started-at="2014-09-14T19:20:21Z" finished-at="2014-09-14T19:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="171" started-at="2014-09-14T19:20:21Z" finished-at="2014-09-14T19:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="145" started-at="2014-09-14T19:20:21Z" finished-at="2014-09-14T19:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="134" started-at="2014-09-14T19:20:21Z" finished-at="2014-09-14T19:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="237" started-at="2014-09-14T19:20:21Z" finished-at="2014-09-14T19:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="109" started-at="2014-09-14T19:20:21Z" finished-at="2014-09-14T19:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="132" started-at="2014-09-14T19:20:21Z" finished-at="2014-09-14T19:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="268" started-at="2014-09-14T19:20:21Z" finished-at="2014-09-14T19:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="161" started-at="2014-09-14T19:20:21Z" finished-at="2014-09-14T19:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="178" started-at="2014-09-14T19:20:21Z" finished-at="2014-09-14T19:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="201" started-at="2014-09-14T19:20:21Z" finished-at="2014-09-14T19:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="212" started-at="2014-09-14T19:20:21Z" finished-at="2014-09-14T19:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="210" started-at="2014-09-14T19:20:21Z" finished-at="2014-09-14T19:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="169" started-at="2014-09-14T19:20:21Z" finished-at="2014-09-14T19:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="159" started-at="2014-09-14T19:20:21Z" finished-at="2014-09-14T19:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="129" started-at="2014-09-14T19:20:21Z" finished-at="2014-09-14T19:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="147" started-at="2014-09-14T19:20:21Z" finished-at="2014-09-14T19:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="248" started-at="2014-09-14T19:20:21Z" finished-at="2014-09-14T19:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="204" started-at="2014-09-14T19:20:21Z" finished-at="2014-09-14T19:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="142" started-at="2014-09-14T19:20:21Z" finished-at="2014-09-14T19:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="174" started-at="2014-09-14T19:20:21Z" finished-at="2014-09-14T19:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="243" started-at="2014-09-14T19:20:21Z" finished-at="2014-09-14T19:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="112" started-at="2014-09-14T19:20:21Z" finished-at="2014-09-14T19:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="174" started-at="2014-09-14T19:20:21Z" finished-at="2014-09-14T19:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="181" started-at="2014-09-14T19:20:21Z" finished-at="2014-09-14T19:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="170" started-at="2014-09-14T19:20:21Z" finished-at="2014-09-14T19:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="262" started-at="2014-09-14T19:20:21Z" finished-at="2014-09-14T19:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="135" started-at="2014-09-14T19:20:21Z" finished-at="2014-09-14T19:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="143" started-at="2014-09-14T19:20:21Z" finished-at="2014-09-14T19:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="124" started-at="2014-09-14T19:20:21Z" finished-at="2014-09-14T19:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="123" started-at="2014-09-14T19:20:21Z" finished-at="2014-09-14T19:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="137" started-at="2014-09-14T19:20:21Z" finished-at="2014-09-14T19:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="209" started-at="2014-09-14T19:20:21Z" finished-at="2014-09-14T19:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="111" started-at="2014-09-14T19:20:21Z" finished-at="2014-09-14T19:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="215" started-at="2014-09-14T19:20:21Z" finished-at="2014-09-14T19:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="183" started-at="2014-09-14T19:20:21Z" finished-at="2014-09-14T19:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="163" started-at="2014-09-14T19:20:21Z" finished-at="2014-09-14T19:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="172" started-at="2014-09-14T19:20:21Z" finished-at="2014-09-14T19:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="152" started-at="2014-09-14T19:20:21Z" finished-at="2014-09-14T19:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="172" started-at="2014-09-14T19:20:21Z" finished-at="2014-09-14T19:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="180" started-at="2014-09-14T19:20:21Z" finished-at="2014-09-14T19:20:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="127" started-at="2014-09-14T19:20:21Z" finished-at="2014-09-14T19:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="147" started-at="2014-09-14T19:20:21Z" finished-at="2014-09-14T19:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="161" started-at="2014-09-14T19:20:21Z" finished-at="2014-09-14T19:20:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="236" started-at="2014-09-14T19:20:21Z" finished-at="2014-09-14T19:20:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="147" started-at="2014-09-14T19:20:21Z" finished-at="2014-09-14T19:20:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="185" started-at="2014-09-14T19:20:21Z" finished-at="2014-09-14T19:20:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="121" started-at="2014-09-14T19:20:21Z" finished-at="2014-09-14T19:20:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="177" started-at="2014-09-14T19:20:21Z" finished-at="2014-09-14T19:20:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="145" started-at="2014-09-14T19:20:21Z" finished-at="2014-09-14T19:20:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="135" started-at="2014-09-14T19:20:21Z" finished-at="2014-09-14T19:20:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="167" started-at="2014-09-14T19:20:22Z" finished-at="2014-09-14T19:20:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="146" started-at="2014-09-14T19:20:22Z" finished-at="2014-09-14T19:20:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="141" started-at="2014-09-14T19:20:22Z" finished-at="2014-09-14T19:20:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="640" started-at="2014-09-14T19:20:22Z" finished-at="2014-09-14T19:20:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="140" started-at="2014-09-14T19:20:22Z" finished-at="2014-09-14T19:20:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="125" started-at="2014-09-14T19:20:22Z" finished-at="2014-09-14T19:20:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="572" started-at="2014-09-14T19:20:22Z" finished-at="2014-09-14T19:20:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="571" started-at="2014-09-14T19:20:22Z" finished-at="2014-09-14T19:20:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="528" started-at="2014-09-14T19:20:22Z" finished-at="2014-09-14T19:20:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="558" started-at="2014-09-14T19:20:22Z" finished-at="2014-09-14T19:20:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="580" started-at="2014-09-14T19:20:22Z" finished-at="2014-09-14T19:20:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="617" started-at="2014-09-14T19:20:22Z" finished-at="2014-09-14T19:20:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="543" started-at="2014-09-14T19:20:22Z" finished-at="2014-09-14T19:20:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="542" started-at="2014-09-14T19:20:22Z" finished-at="2014-09-14T19:20:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="527" started-at="2014-09-14T19:20:22Z" finished-at="2014-09-14T19:20:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="185" started-at="2014-09-14T19:20:22Z" finished-at="2014-09-14T19:20:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="242" started-at="2014-09-14T19:20:22Z" finished-at="2014-09-14T19:20:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="152" started-at="2014-09-14T19:20:22Z" finished-at="2014-09-14T19:20:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="163" started-at="2014-09-14T19:20:22Z" finished-at="2014-09-14T19:20:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="219" started-at="2014-09-14T19:20:22Z" finished-at="2014-09-14T19:20:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="189" started-at="2014-09-14T19:20:22Z" finished-at="2014-09-14T19:20:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="162" started-at="2014-09-14T19:20:22Z" finished-at="2014-09-14T19:20:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="146" started-at="2014-09-14T19:20:22Z" finished-at="2014-09-14T19:20:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="157" started-at="2014-09-14T19:20:22Z" finished-at="2014-09-14T19:20:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="117" started-at="2014-09-14T19:20:22Z" finished-at="2014-09-14T19:20:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="140" started-at="2014-09-14T19:20:22Z" finished-at="2014-09-14T19:20:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="242" started-at="2014-09-14T19:20:22Z" finished-at="2014-09-14T19:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="161" started-at="2014-09-14T19:20:22Z" finished-at="2014-09-14T19:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="184" started-at="2014-09-14T19:20:22Z" finished-at="2014-09-14T19:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="145" started-at="2014-09-14T19:20:22Z" finished-at="2014-09-14T19:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="249" started-at="2014-09-14T19:20:22Z" finished-at="2014-09-14T19:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="159" started-at="2014-09-14T19:20:22Z" finished-at="2014-09-14T19:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="90" started-at="2014-09-14T19:20:22Z" finished-at="2014-09-14T19:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="102" started-at="2014-09-14T19:20:22Z" finished-at="2014-09-14T19:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="144" started-at="2014-09-14T19:20:22Z" finished-at="2014-09-14T19:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="133" started-at="2014-09-14T19:20:22Z" finished-at="2014-09-14T19:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="140" started-at="2014-09-14T19:20:23Z" finished-at="2014-09-14T19:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="135" started-at="2014-09-14T19:20:23Z" finished-at="2014-09-14T19:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="160" started-at="2014-09-14T19:20:23Z" finished-at="2014-09-14T19:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="144" started-at="2014-09-14T19:20:23Z" finished-at="2014-09-14T19:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="174" started-at="2014-09-14T19:20:23Z" finished-at="2014-09-14T19:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="209" started-at="2014-09-14T19:20:23Z" finished-at="2014-09-14T19:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="231" started-at="2014-09-14T19:20:23Z" finished-at="2014-09-14T19:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="156" started-at="2014-09-14T19:20:23Z" finished-at="2014-09-14T19:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="170" started-at="2014-09-14T19:20:23Z" finished-at="2014-09-14T19:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="205" started-at="2014-09-14T19:20:23Z" finished-at="2014-09-14T19:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="204" started-at="2014-09-14T19:20:23Z" finished-at="2014-09-14T19:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="114" started-at="2014-09-14T19:20:23Z" finished-at="2014-09-14T19:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="159" started-at="2014-09-14T19:20:23Z" finished-at="2014-09-14T19:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="115" started-at="2014-09-14T19:20:23Z" finished-at="2014-09-14T19:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="158" started-at="2014-09-14T19:20:23Z" finished-at="2014-09-14T19:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="113" started-at="2014-09-14T19:20:23Z" finished-at="2014-09-14T19:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="155" started-at="2014-09-14T19:20:23Z" finished-at="2014-09-14T19:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="223" started-at="2014-09-14T19:20:23Z" finished-at="2014-09-14T19:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="241" started-at="2014-09-14T19:20:23Z" finished-at="2014-09-14T19:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="172" started-at="2014-09-14T19:20:23Z" finished-at="2014-09-14T19:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="170" started-at="2014-09-14T19:20:23Z" finished-at="2014-09-14T19:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="162" started-at="2014-09-14T19:20:23Z" finished-at="2014-09-14T19:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="179" started-at="2014-09-14T19:20:23Z" finished-at="2014-09-14T19:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="198" started-at="2014-09-14T19:20:23Z" finished-at="2014-09-14T19:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="187" started-at="2014-09-14T19:20:23Z" finished-at="2014-09-14T19:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="176" started-at="2014-09-14T19:20:23Z" finished-at="2014-09-14T19:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="163" started-at="2014-09-14T19:20:23Z" finished-at="2014-09-14T19:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="273" started-at="2014-09-14T19:20:23Z" finished-at="2014-09-14T19:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="128" started-at="2014-09-14T19:20:23Z" finished-at="2014-09-14T19:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="177" started-at="2014-09-14T19:20:23Z" finished-at="2014-09-14T19:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="312" started-at="2014-09-14T19:20:23Z" finished-at="2014-09-14T19:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="157" started-at="2014-09-14T19:20:23Z" finished-at="2014-09-14T19:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="99" started-at="2014-09-14T19:20:23Z" finished-at="2014-09-14T19:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="188" started-at="2014-09-14T19:20:23Z" finished-at="2014-09-14T19:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="167" started-at="2014-09-14T19:20:23Z" finished-at="2014-09-14T19:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="243" started-at="2014-09-14T19:20:23Z" finished-at="2014-09-14T19:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="194" started-at="2014-09-14T19:20:23Z" finished-at="2014-09-14T19:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="193" started-at="2014-09-14T19:20:23Z" finished-at="2014-09-14T19:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="199" started-at="2014-09-14T19:20:23Z" finished-at="2014-09-14T19:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="208" started-at="2014-09-14T19:20:23Z" finished-at="2014-09-14T19:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="236" started-at="2014-09-14T19:20:23Z" finished-at="2014-09-14T19:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="177" started-at="2014-09-14T19:20:23Z" finished-at="2014-09-14T19:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="187" started-at="2014-09-14T19:20:23Z" finished-at="2014-09-14T19:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="250" started-at="2014-09-14T19:20:23Z" finished-at="2014-09-14T19:20:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="146" started-at="2014-09-14T19:20:23Z" finished-at="2014-09-14T19:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="168" started-at="2014-09-14T19:20:23Z" finished-at="2014-09-14T19:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="152" started-at="2014-09-14T19:20:23Z" finished-at="2014-09-14T19:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="158" started-at="2014-09-14T19:20:23Z" finished-at="2014-09-14T19:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="119" started-at="2014-09-14T19:20:23Z" finished-at="2014-09-14T19:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="176" started-at="2014-09-14T19:20:23Z" finished-at="2014-09-14T19:20:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="215" started-at="2014-09-14T19:20:23Z" finished-at="2014-09-14T19:20:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="163" started-at="2014-09-14T19:20:23Z" finished-at="2014-09-14T19:20:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="119" started-at="2014-09-14T19:20:23Z" finished-at="2014-09-14T19:20:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="111" started-at="2014-09-14T19:20:23Z" finished-at="2014-09-14T19:20:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="225" started-at="2014-09-14T19:20:23Z" finished-at="2014-09-14T19:20:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="167" started-at="2014-09-14T19:20:23Z" finished-at="2014-09-14T19:20:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="247" started-at="2014-09-14T19:20:23Z" finished-at="2014-09-14T19:20:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="144" started-at="2014-09-14T19:20:24Z" finished-at="2014-09-14T19:20:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="132" started-at="2014-09-14T19:20:24Z" finished-at="2014-09-14T19:20:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="142" started-at="2014-09-14T19:20:24Z" finished-at="2014-09-14T19:20:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="162" started-at="2014-09-14T19:20:24Z" finished-at="2014-09-14T19:20:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="146" started-at="2014-09-14T19:20:24Z" finished-at="2014-09-14T19:20:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="181" started-at="2014-09-14T19:20:24Z" finished-at="2014-09-14T19:20:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="125" started-at="2014-09-14T19:20:24Z" finished-at="2014-09-14T19:20:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="121" started-at="2014-09-14T19:20:24Z" finished-at="2014-09-14T19:20:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="131" started-at="2014-09-14T19:20:24Z" finished-at="2014-09-14T19:20:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="165" started-at="2014-09-14T19:20:24Z" finished-at="2014-09-14T19:20:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="109" started-at="2014-09-14T19:20:24Z" finished-at="2014-09-14T19:20:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="122" started-at="2014-09-14T19:20:24Z" finished-at="2014-09-14T19:20:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="116" started-at="2014-09-14T19:20:24Z" finished-at="2014-09-14T19:20:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="287" started-at="2014-09-14T19:20:24Z" finished-at="2014-09-14T19:20:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="296" started-at="2014-09-14T19:20:24Z" finished-at="2014-09-14T19:20:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="142" started-at="2014-09-14T19:20:24Z" finished-at="2014-09-14T19:20:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="231" started-at="2014-09-14T19:20:24Z" finished-at="2014-09-14T19:20:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="175" started-at="2014-09-14T19:20:24Z" finished-at="2014-09-14T19:20:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="176" started-at="2014-09-14T19:20:24Z" finished-at="2014-09-14T19:20:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="191" started-at="2014-09-14T19:20:24Z" finished-at="2014-09-14T19:20:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="139" started-at="2014-09-14T19:20:24Z" finished-at="2014-09-14T19:20:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="208" started-at="2014-09-14T19:20:24Z" finished-at="2014-09-14T19:20:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="184" started-at="2014-09-14T19:20:24Z" finished-at="2014-09-14T19:20:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="159" started-at="2014-09-14T19:20:24Z" finished-at="2014-09-14T19:20:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="113" started-at="2014-09-14T19:20:24Z" finished-at="2014-09-14T19:20:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="247" started-at="2014-09-14T19:20:24Z" finished-at="2014-09-14T19:20:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="138" started-at="2014-09-14T19:20:24Z" finished-at="2014-09-14T19:20:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="213" started-at="2014-09-14T19:20:24Z" finished-at="2014-09-14T19:20:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="199" started-at="2014-09-14T19:20:24Z" finished-at="2014-09-14T19:20:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="216" started-at="2014-09-14T19:20:24Z" finished-at="2014-09-14T19:20:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="137" started-at="2014-09-14T19:20:24Z" finished-at="2014-09-14T19:20:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="166" started-at="2014-09-14T19:20:24Z" finished-at="2014-09-14T19:20:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="132" started-at="2014-09-14T19:20:24Z" finished-at="2014-09-14T19:20:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="229" started-at="2014-09-14T19:20:24Z" finished-at="2014-09-14T19:20:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="123" started-at="2014-09-14T19:20:24Z" finished-at="2014-09-14T19:20:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="158" started-at="2014-09-14T19:20:24Z" finished-at="2014-09-14T19:20:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="276" started-at="2014-09-14T19:20:24Z" finished-at="2014-09-14T19:20:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="161" started-at="2014-09-14T19:20:24Z" finished-at="2014-09-14T19:20:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="124" started-at="2014-09-14T19:20:24Z" finished-at="2014-09-14T19:20:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="292" started-at="2014-09-14T19:20:24Z" finished-at="2014-09-14T19:20:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="158" started-at="2014-09-14T19:20:24Z" finished-at="2014-09-14T19:20:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="213" started-at="2014-09-14T19:20:24Z" finished-at="2014-09-14T19:20:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="124" started-at="2014-09-14T19:20:24Z" finished-at="2014-09-14T19:20:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="206" started-at="2014-09-14T19:20:24Z" finished-at="2014-09-14T19:20:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="120" started-at="2014-09-14T19:20:24Z" finished-at="2014-09-14T19:20:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="139" started-at="2014-09-14T19:20:24Z" finished-at="2014-09-14T19:20:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="167" started-at="2014-09-14T19:20:24Z" finished-at="2014-09-14T19:20:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="245" started-at="2014-09-14T19:20:24Z" finished-at="2014-09-14T19:20:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="120" started-at="2014-09-14T19:20:24Z" finished-at="2014-09-14T19:20:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="128" started-at="2014-09-14T19:20:24Z" finished-at="2014-09-14T19:20:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="244" started-at="2014-09-14T19:20:24Z" finished-at="2014-09-14T19:20:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="163" started-at="2014-09-14T19:20:24Z" finished-at="2014-09-14T19:20:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="128" started-at="2014-09-14T19:20:24Z" finished-at="2014-09-14T19:20:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="124" started-at="2014-09-14T19:20:25Z" finished-at="2014-09-14T19:20:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="239" started-at="2014-09-14T19:20:25Z" finished-at="2014-09-14T19:20:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="190" started-at="2014-09-14T19:20:25Z" finished-at="2014-09-14T19:20:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="216" started-at="2014-09-14T19:20:25Z" finished-at="2014-09-14T19:20:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="128" started-at="2014-09-14T19:20:25Z" finished-at="2014-09-14T19:20:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="96" started-at="2014-09-14T19:20:25Z" finished-at="2014-09-14T19:20:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="248" started-at="2014-09-14T19:20:25Z" finished-at="2014-09-14T19:20:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="141" started-at="2014-09-14T19:20:25Z" finished-at="2014-09-14T19:20:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="164" started-at="2014-09-14T19:20:25Z" finished-at="2014-09-14T19:20:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="135" started-at="2014-09-14T19:20:25Z" finished-at="2014-09-14T19:20:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="211" started-at="2014-09-14T19:20:25Z" finished-at="2014-09-14T19:20:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="190" started-at="2014-09-14T19:20:25Z" finished-at="2014-09-14T19:20:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="250" started-at="2014-09-14T19:20:25Z" finished-at="2014-09-14T19:20:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="181" started-at="2014-09-14T19:20:25Z" finished-at="2014-09-14T19:20:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="161" started-at="2014-09-14T19:20:25Z" finished-at="2014-09-14T19:20:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="278" started-at="2014-09-14T19:20:25Z" finished-at="2014-09-14T19:20:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="202" started-at="2014-09-14T19:20:25Z" finished-at="2014-09-14T19:20:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="165" started-at="2014-09-14T19:20:25Z" finished-at="2014-09-14T19:20:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="217" started-at="2014-09-14T19:20:25Z" finished-at="2014-09-14T19:20:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="123" started-at="2014-09-14T19:20:25Z" finished-at="2014-09-14T19:20:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="143" started-at="2014-09-14T19:20:25Z" finished-at="2014-09-14T19:20:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="138" started-at="2014-09-14T19:20:25Z" finished-at="2014-09-14T19:20:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="174" started-at="2014-09-14T19:20:25Z" finished-at="2014-09-14T19:20:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="170" started-at="2014-09-14T19:20:25Z" finished-at="2014-09-14T19:20:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="164" started-at="2014-09-14T19:20:25Z" finished-at="2014-09-14T19:20:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="147" started-at="2014-09-14T19:20:25Z" finished-at="2014-09-14T19:20:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="182" started-at="2014-09-14T19:20:25Z" finished-at="2014-09-14T19:20:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="191" started-at="2014-09-14T19:20:25Z" finished-at="2014-09-14T19:20:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="106" started-at="2014-09-14T19:20:25Z" finished-at="2014-09-14T19:20:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="216" started-at="2014-09-14T19:20:25Z" finished-at="2014-09-14T19:20:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="140" started-at="2014-09-14T19:20:25Z" finished-at="2014-09-14T19:20:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="170" started-at="2014-09-14T19:20:25Z" finished-at="2014-09-14T19:20:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="204" started-at="2014-09-14T19:20:25Z" finished-at="2014-09-14T19:20:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="223" started-at="2014-09-14T19:20:25Z" finished-at="2014-09-14T19:20:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="159" started-at="2014-09-14T19:20:25Z" finished-at="2014-09-14T19:20:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="156" started-at="2014-09-14T19:20:25Z" finished-at="2014-09-14T19:20:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="230" started-at="2014-09-14T19:20:25Z" finished-at="2014-09-14T19:20:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="242" started-at="2014-09-14T19:20:25Z" finished-at="2014-09-14T19:20:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="203" started-at="2014-09-14T19:20:25Z" finished-at="2014-09-14T19:20:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="255" started-at="2014-09-14T19:20:25Z" finished-at="2014-09-14T19:20:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="221" started-at="2014-09-14T19:20:25Z" finished-at="2014-09-14T19:20:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="218" started-at="2014-09-14T19:20:25Z" finished-at="2014-09-14T19:20:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="209" started-at="2014-09-14T19:20:25Z" finished-at="2014-09-14T19:20:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="146" started-at="2014-09-14T19:20:25Z" finished-at="2014-09-14T19:20:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="123" started-at="2014-09-14T19:20:25Z" finished-at="2014-09-14T19:20:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="152" started-at="2014-09-14T19:20:25Z" finished-at="2014-09-14T19:20:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="188" started-at="2014-09-14T19:20:25Z" finished-at="2014-09-14T19:20:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="181" started-at="2014-09-14T19:20:25Z" finished-at="2014-09-14T19:20:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="161" started-at="2014-09-14T19:20:25Z" finished-at="2014-09-14T19:20:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="211" started-at="2014-09-14T19:20:25Z" finished-at="2014-09-14T19:20:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="104" started-at="2014-09-14T19:20:25Z" finished-at="2014-09-14T19:20:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="201" started-at="2014-09-14T19:20:25Z" finished-at="2014-09-14T19:20:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="140" started-at="2014-09-14T19:20:25Z" finished-at="2014-09-14T19:20:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="205" started-at="2014-09-14T19:20:25Z" finished-at="2014-09-14T19:20:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="179" started-at="2014-09-14T19:20:25Z" finished-at="2014-09-14T19:20:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="212" started-at="2014-09-14T19:20:25Z" finished-at="2014-09-14T19:20:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="161" started-at="2014-09-14T19:20:26Z" finished-at="2014-09-14T19:20:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="125" started-at="2014-09-14T19:20:26Z" finished-at="2014-09-14T19:20:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="171" started-at="2014-09-14T19:20:26Z" finished-at="2014-09-14T19:20:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="143" started-at="2014-09-14T19:20:26Z" finished-at="2014-09-14T19:20:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="258" started-at="2014-09-14T19:20:26Z" finished-at="2014-09-14T19:20:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="194" started-at="2014-09-14T19:20:26Z" finished-at="2014-09-14T19:20:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="180" started-at="2014-09-14T19:20:26Z" finished-at="2014-09-14T19:20:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="153" started-at="2014-09-14T19:20:26Z" finished-at="2014-09-14T19:20:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="202" started-at="2014-09-14T19:20:26Z" finished-at="2014-09-14T19:20:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="271" started-at="2014-09-14T19:20:26Z" finished-at="2014-09-14T19:20:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="206" started-at="2014-09-14T19:20:26Z" finished-at="2014-09-14T19:20:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="164" started-at="2014-09-14T19:20:26Z" finished-at="2014-09-14T19:20:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="179" started-at="2014-09-14T19:20:26Z" finished-at="2014-09-14T19:20:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="167" started-at="2014-09-14T19:20:26Z" finished-at="2014-09-14T19:20:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="153" started-at="2014-09-14T19:20:26Z" finished-at="2014-09-14T19:20:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="241" started-at="2014-09-14T19:20:26Z" finished-at="2014-09-14T19:20:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="226" started-at="2014-09-14T19:20:26Z" finished-at="2014-09-14T19:20:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="171" started-at="2014-09-14T19:20:26Z" finished-at="2014-09-14T19:20:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="184" started-at="2014-09-14T19:20:26Z" finished-at="2014-09-14T19:20:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="202" started-at="2014-09-14T19:20:26Z" finished-at="2014-09-14T19:20:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="168" started-at="2014-09-14T19:20:26Z" finished-at="2014-09-14T19:20:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="144" started-at="2014-09-14T19:20:26Z" finished-at="2014-09-14T19:20:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="173" started-at="2014-09-14T19:20:26Z" finished-at="2014-09-14T19:20:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="135" started-at="2014-09-14T19:20:26Z" finished-at="2014-09-14T19:20:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="142" started-at="2014-09-14T19:20:26Z" finished-at="2014-09-14T19:20:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="200" started-at="2014-09-14T19:20:26Z" finished-at="2014-09-14T19:20:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="257" started-at="2014-09-14T19:20:26Z" finished-at="2014-09-14T19:20:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="218" started-at="2014-09-14T19:20:26Z" finished-at="2014-09-14T19:20:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="163" started-at="2014-09-14T19:20:26Z" finished-at="2014-09-14T19:20:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="135" started-at="2014-09-14T19:20:26Z" finished-at="2014-09-14T19:20:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="162" started-at="2014-09-14T19:20:26Z" finished-at="2014-09-14T19:20:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="104" started-at="2014-09-14T19:20:26Z" finished-at="2014-09-14T19:20:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="123" started-at="2014-09-14T19:20:26Z" finished-at="2014-09-14T19:20:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="165" started-at="2014-09-14T19:20:26Z" finished-at="2014-09-14T19:20:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="178" started-at="2014-09-14T19:20:26Z" finished-at="2014-09-14T19:20:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="344" started-at="2014-09-14T19:20:26Z" finished-at="2014-09-14T19:20:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="176" started-at="2014-09-14T19:20:26Z" finished-at="2014-09-14T19:20:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="126" started-at="2014-09-14T19:20:26Z" finished-at="2014-09-14T19:20:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="177" started-at="2014-09-14T19:20:26Z" finished-at="2014-09-14T19:20:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="130" started-at="2014-09-14T19:20:26Z" finished-at="2014-09-14T19:20:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="163" started-at="2014-09-14T19:20:26Z" finished-at="2014-09-14T19:20:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="225" started-at="2014-09-14T19:20:26Z" finished-at="2014-09-14T19:20:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="182" started-at="2014-09-14T19:20:26Z" finished-at="2014-09-14T19:20:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="141" started-at="2014-09-14T19:20:26Z" finished-at="2014-09-14T19:20:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="126" started-at="2014-09-14T19:20:26Z" finished-at="2014-09-14T19:20:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="150" started-at="2014-09-14T19:20:26Z" finished-at="2014-09-14T19:20:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="253" started-at="2014-09-14T19:20:26Z" finished-at="2014-09-14T19:20:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="156" started-at="2014-09-14T19:20:26Z" finished-at="2014-09-14T19:20:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="163" started-at="2014-09-14T19:20:26Z" finished-at="2014-09-14T19:20:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="150" started-at="2014-09-14T19:20:26Z" finished-at="2014-09-14T19:20:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="158" started-at="2014-09-14T19:20:26Z" finished-at="2014-09-14T19:20:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="158" started-at="2014-09-14T19:20:26Z" finished-at="2014-09-14T19:20:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="126" started-at="2014-09-14T19:20:26Z" finished-at="2014-09-14T19:20:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="301" started-at="2014-09-14T19:20:26Z" finished-at="2014-09-14T19:20:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="155" started-at="2014-09-14T19:20:26Z" finished-at="2014-09-14T19:20:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="231" started-at="2014-09-14T19:20:27Z" finished-at="2014-09-14T19:20:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="185" started-at="2014-09-14T19:20:27Z" finished-at="2014-09-14T19:20:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="188" started-at="2014-09-14T19:20:27Z" finished-at="2014-09-14T19:20:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="159" started-at="2014-09-14T19:20:27Z" finished-at="2014-09-14T19:20:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="238" started-at="2014-09-14T19:20:27Z" finished-at="2014-09-14T19:20:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="244" started-at="2014-09-14T19:20:27Z" finished-at="2014-09-14T19:20:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="145" started-at="2014-09-14T19:20:27Z" finished-at="2014-09-14T19:20:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="148" started-at="2014-09-14T19:20:27Z" finished-at="2014-09-14T19:20:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="162" started-at="2014-09-14T19:20:27Z" finished-at="2014-09-14T19:20:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="168" started-at="2014-09-14T19:20:27Z" finished-at="2014-09-14T19:20:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="189" started-at="2014-09-14T19:20:27Z" finished-at="2014-09-14T19:20:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="233" started-at="2014-09-14T19:20:27Z" finished-at="2014-09-14T19:20:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="126" started-at="2014-09-14T19:20:27Z" finished-at="2014-09-14T19:20:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="109" started-at="2014-09-14T19:20:27Z" finished-at="2014-09-14T19:20:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="207" started-at="2014-09-14T19:20:27Z" finished-at="2014-09-14T19:20:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="167" started-at="2014-09-14T19:20:27Z" finished-at="2014-09-14T19:20:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="138" started-at="2014-09-14T19:20:27Z" finished-at="2014-09-14T19:20:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="192" started-at="2014-09-14T19:20:27Z" finished-at="2014-09-14T19:20:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="176" started-at="2014-09-14T19:20:27Z" finished-at="2014-09-14T19:20:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="184" started-at="2014-09-14T19:20:27Z" finished-at="2014-09-14T19:20:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="204" started-at="2014-09-14T19:20:27Z" finished-at="2014-09-14T19:20:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="142" started-at="2014-09-14T19:20:27Z" finished-at="2014-09-14T19:20:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="148" started-at="2014-09-14T19:20:27Z" finished-at="2014-09-14T19:20:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="205" started-at="2014-09-14T19:20:27Z" finished-at="2014-09-14T19:20:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="177" started-at="2014-09-14T19:20:27Z" finished-at="2014-09-14T19:20:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="209" started-at="2014-09-14T19:20:27Z" finished-at="2014-09-14T19:20:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="184" started-at="2014-09-14T19:20:27Z" finished-at="2014-09-14T19:20:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="213" started-at="2014-09-14T19:20:27Z" finished-at="2014-09-14T19:20:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="175" started-at="2014-09-14T19:20:27Z" finished-at="2014-09-14T19:20:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="134" started-at="2014-09-14T19:20:27Z" finished-at="2014-09-14T19:20:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="185" started-at="2014-09-14T19:20:27Z" finished-at="2014-09-14T19:20:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="153" started-at="2014-09-14T19:20:27Z" finished-at="2014-09-14T19:20:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="178" started-at="2014-09-14T19:20:27Z" finished-at="2014-09-14T19:20:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="236" started-at="2014-09-14T19:20:27Z" finished-at="2014-09-14T19:20:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="203" started-at="2014-09-14T19:20:27Z" finished-at="2014-09-14T19:20:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="157" started-at="2014-09-14T19:20:27Z" finished-at="2014-09-14T19:20:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="180" started-at="2014-09-14T19:20:27Z" finished-at="2014-09-14T19:20:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="124" started-at="2014-09-14T19:20:27Z" finished-at="2014-09-14T19:20:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="131" started-at="2014-09-14T19:20:27Z" finished-at="2014-09-14T19:20:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="362" started-at="2014-09-14T19:20:27Z" finished-at="2014-09-14T19:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="209" started-at="2014-09-14T19:20:27Z" finished-at="2014-09-14T19:20:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="162" started-at="2014-09-14T19:20:27Z" finished-at="2014-09-14T19:20:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="139" started-at="2014-09-14T19:20:27Z" finished-at="2014-09-14T19:20:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="132" started-at="2014-09-14T19:20:27Z" finished-at="2014-09-14T19:20:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="226" started-at="2014-09-14T19:20:27Z" finished-at="2014-09-14T19:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="153" started-at="2014-09-14T19:20:27Z" finished-at="2014-09-14T19:20:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="198" started-at="2014-09-14T19:20:27Z" finished-at="2014-09-14T19:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="150" started-at="2014-09-14T19:20:27Z" finished-at="2014-09-14T19:20:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="155" started-at="2014-09-14T19:20:27Z" finished-at="2014-09-14T19:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="159" started-at="2014-09-14T19:20:27Z" finished-at="2014-09-14T19:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="229" started-at="2014-09-14T19:20:27Z" finished-at="2014-09-14T19:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="225" started-at="2014-09-14T19:20:27Z" finished-at="2014-09-14T19:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="217" started-at="2014-09-14T19:20:27Z" finished-at="2014-09-14T19:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="297" started-at="2014-09-14T19:20:27Z" finished-at="2014-09-14T19:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="269" started-at="2014-09-14T19:20:27Z" finished-at="2014-09-14T19:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="283" started-at="2014-09-14T19:20:28Z" finished-at="2014-09-14T19:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="185" started-at="2014-09-14T19:20:28Z" finished-at="2014-09-14T19:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="184" started-at="2014-09-14T19:20:28Z" finished-at="2014-09-14T19:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="221" started-at="2014-09-14T19:20:28Z" finished-at="2014-09-14T19:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="192" started-at="2014-09-14T19:20:28Z" finished-at="2014-09-14T19:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="187" started-at="2014-09-14T19:20:28Z" finished-at="2014-09-14T19:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="240" started-at="2014-09-14T19:20:28Z" finished-at="2014-09-14T19:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="236" started-at="2014-09-14T19:20:28Z" finished-at="2014-09-14T19:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="192" started-at="2014-09-14T19:20:28Z" finished-at="2014-09-14T19:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="169" started-at="2014-09-14T19:20:28Z" finished-at="2014-09-14T19:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="130" started-at="2014-09-14T19:20:28Z" finished-at="2014-09-14T19:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="151" started-at="2014-09-14T19:20:28Z" finished-at="2014-09-14T19:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="440" started-at="2014-09-14T19:20:28Z" finished-at="2014-09-14T19:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="125" started-at="2014-09-14T19:20:28Z" finished-at="2014-09-14T19:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="216" started-at="2014-09-14T19:20:28Z" finished-at="2014-09-14T19:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="216" started-at="2014-09-14T19:20:28Z" finished-at="2014-09-14T19:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="281" started-at="2014-09-14T19:20:28Z" finished-at="2014-09-14T19:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="273" started-at="2014-09-14T19:20:28Z" finished-at="2014-09-14T19:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="339" started-at="2014-09-14T19:20:28Z" finished-at="2014-09-14T19:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="174" started-at="2014-09-14T19:20:28Z" finished-at="2014-09-14T19:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="256" started-at="2014-09-14T19:20:28Z" finished-at="2014-09-14T19:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="192" started-at="2014-09-14T19:20:28Z" finished-at="2014-09-14T19:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="204" started-at="2014-09-14T19:20:28Z" finished-at="2014-09-14T19:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="292" started-at="2014-09-14T19:20:28Z" finished-at="2014-09-14T19:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="219" started-at="2014-09-14T19:20:28Z" finished-at="2014-09-14T19:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="197" started-at="2014-09-14T19:20:28Z" finished-at="2014-09-14T19:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="120" started-at="2014-09-14T19:20:28Z" finished-at="2014-09-14T19:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="208" started-at="2014-09-14T19:20:28Z" finished-at="2014-09-14T19:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="176" started-at="2014-09-14T19:20:28Z" finished-at="2014-09-14T19:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="240" started-at="2014-09-14T19:20:28Z" finished-at="2014-09-14T19:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="152" started-at="2014-09-14T19:20:28Z" finished-at="2014-09-14T19:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="339" started-at="2014-09-14T19:20:28Z" finished-at="2014-09-14T19:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="129" started-at="2014-09-14T19:20:28Z" finished-at="2014-09-14T19:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="146" started-at="2014-09-14T19:20:28Z" finished-at="2014-09-14T19:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="196" started-at="2014-09-14T19:20:28Z" finished-at="2014-09-14T19:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="243" started-at="2014-09-14T19:20:28Z" finished-at="2014-09-14T19:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="142" started-at="2014-09-14T19:20:28Z" finished-at="2014-09-14T19:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="218" started-at="2014-09-14T19:20:28Z" finished-at="2014-09-14T19:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="202" started-at="2014-09-14T19:20:28Z" finished-at="2014-09-14T19:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="201" started-at="2014-09-14T19:20:28Z" finished-at="2014-09-14T19:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="125" started-at="2014-09-14T19:20:28Z" finished-at="2014-09-14T19:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="199" started-at="2014-09-14T19:20:28Z" finished-at="2014-09-14T19:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="328" started-at="2014-09-14T19:20:28Z" finished-at="2014-09-14T19:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="140" started-at="2014-09-14T19:20:29Z" finished-at="2014-09-14T19:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="161" started-at="2014-09-14T19:20:29Z" finished-at="2014-09-14T19:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="153" started-at="2014-09-14T19:20:29Z" finished-at="2014-09-14T19:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="189" started-at="2014-09-14T19:20:29Z" finished-at="2014-09-14T19:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="226" started-at="2014-09-14T19:20:29Z" finished-at="2014-09-14T19:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="174" started-at="2014-09-14T19:20:29Z" finished-at="2014-09-14T19:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="275" started-at="2014-09-14T19:20:29Z" finished-at="2014-09-14T19:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="181" started-at="2014-09-14T19:20:29Z" finished-at="2014-09-14T19:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="333" started-at="2014-09-14T19:20:29Z" finished-at="2014-09-14T19:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="252" started-at="2014-09-14T19:20:29Z" finished-at="2014-09-14T19:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="168" started-at="2014-09-14T19:20:29Z" finished-at="2014-09-14T19:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="195" started-at="2014-09-14T19:20:29Z" finished-at="2014-09-14T19:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="143" started-at="2014-09-14T19:20:29Z" finished-at="2014-09-14T19:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="142" started-at="2014-09-14T19:20:29Z" finished-at="2014-09-14T19:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="201" started-at="2014-09-14T19:20:29Z" finished-at="2014-09-14T19:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="213" started-at="2014-09-14T19:20:29Z" finished-at="2014-09-14T19:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="178" started-at="2014-09-14T19:20:29Z" finished-at="2014-09-14T19:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="180" started-at="2014-09-14T19:20:29Z" finished-at="2014-09-14T19:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="215" started-at="2014-09-14T19:20:29Z" finished-at="2014-09-14T19:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="182" started-at="2014-09-14T19:20:29Z" finished-at="2014-09-14T19:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="116" started-at="2014-09-14T19:20:29Z" finished-at="2014-09-14T19:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="195" started-at="2014-09-14T19:20:29Z" finished-at="2014-09-14T19:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="147" started-at="2014-09-14T19:20:29Z" finished-at="2014-09-14T19:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="172" started-at="2014-09-14T19:20:29Z" finished-at="2014-09-14T19:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="223" started-at="2014-09-14T19:20:29Z" finished-at="2014-09-14T19:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="213" started-at="2014-09-14T19:20:29Z" finished-at="2014-09-14T19:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="215" started-at="2014-09-14T19:20:29Z" finished-at="2014-09-14T19:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="230" started-at="2014-09-14T19:20:29Z" finished-at="2014-09-14T19:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="128" started-at="2014-09-14T19:20:29Z" finished-at="2014-09-14T19:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="118" started-at="2014-09-14T19:20:29Z" finished-at="2014-09-14T19:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="389" started-at="2014-09-14T19:20:29Z" finished-at="2014-09-14T19:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="138" started-at="2014-09-14T19:20:29Z" finished-at="2014-09-14T19:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="175" started-at="2014-09-14T19:20:29Z" finished-at="2014-09-14T19:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="295" started-at="2014-09-14T19:20:29Z" finished-at="2014-09-14T19:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="171" started-at="2014-09-14T19:20:29Z" finished-at="2014-09-14T19:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="133" started-at="2014-09-14T19:20:29Z" finished-at="2014-09-14T19:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="219" started-at="2014-09-14T19:20:29Z" finished-at="2014-09-14T19:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="126" started-at="2014-09-14T19:20:29Z" finished-at="2014-09-14T19:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="177" started-at="2014-09-14T19:20:29Z" finished-at="2014-09-14T19:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="139" started-at="2014-09-14T19:20:29Z" finished-at="2014-09-14T19:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="213" started-at="2014-09-14T19:20:29Z" finished-at="2014-09-14T19:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="184" started-at="2014-09-14T19:20:29Z" finished-at="2014-09-14T19:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="155" started-at="2014-09-14T19:20:29Z" finished-at="2014-09-14T19:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="117" started-at="2014-09-14T19:20:29Z" finished-at="2014-09-14T19:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="119" started-at="2014-09-14T19:20:29Z" finished-at="2014-09-14T19:20:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="147" started-at="2014-09-14T19:20:29Z" finished-at="2014-09-14T19:20:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="250" started-at="2014-09-14T19:20:29Z" finished-at="2014-09-14T19:20:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="130" started-at="2014-09-14T19:20:29Z" finished-at="2014-09-14T19:20:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="170" started-at="2014-09-14T19:20:29Z" finished-at="2014-09-14T19:20:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="159" started-at="2014-09-14T19:20:29Z" finished-at="2014-09-14T19:20:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="147" started-at="2014-09-14T19:20:29Z" finished-at="2014-09-14T19:20:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="182" started-at="2014-09-14T19:20:29Z" finished-at="2014-09-14T19:20:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="140" started-at="2014-09-14T19:20:29Z" finished-at="2014-09-14T19:20:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="277" started-at="2014-09-14T19:20:29Z" finished-at="2014-09-14T19:20:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="162" started-at="2014-09-14T19:20:29Z" finished-at="2014-09-14T19:20:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="257" started-at="2014-09-14T19:20:30Z" finished-at="2014-09-14T19:20:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="235" started-at="2014-09-14T19:20:30Z" finished-at="2014-09-14T19:20:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="235" started-at="2014-09-14T19:20:30Z" finished-at="2014-09-14T19:20:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="138" started-at="2014-09-14T19:20:30Z" finished-at="2014-09-14T19:20:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="210" started-at="2014-09-14T19:20:30Z" finished-at="2014-09-14T19:20:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="261" started-at="2014-09-14T19:20:30Z" finished-at="2014-09-14T19:20:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="183" started-at="2014-09-14T19:20:30Z" finished-at="2014-09-14T19:20:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="162" started-at="2014-09-14T19:20:30Z" finished-at="2014-09-14T19:20:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="230" started-at="2014-09-14T19:20:30Z" finished-at="2014-09-14T19:20:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="200" started-at="2014-09-14T19:20:30Z" finished-at="2014-09-14T19:20:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="110" started-at="2014-09-14T19:20:30Z" finished-at="2014-09-14T19:20:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="195" started-at="2014-09-14T19:20:30Z" finished-at="2014-09-14T19:20:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="159" started-at="2014-09-14T19:20:30Z" finished-at="2014-09-14T19:20:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="149" started-at="2014-09-14T19:20:30Z" finished-at="2014-09-14T19:20:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="159" started-at="2014-09-14T19:20:30Z" finished-at="2014-09-14T19:20:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="229" started-at="2014-09-14T19:20:30Z" finished-at="2014-09-14T19:20:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="170" started-at="2014-09-14T19:20:30Z" finished-at="2014-09-14T19:20:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="168" started-at="2014-09-14T19:20:30Z" finished-at="2014-09-14T19:20:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="124" started-at="2014-09-14T19:20:30Z" finished-at="2014-09-14T19:20:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="188" started-at="2014-09-14T19:20:30Z" finished-at="2014-09-14T19:20:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="139" started-at="2014-09-14T19:20:30Z" finished-at="2014-09-14T19:20:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="247" started-at="2014-09-14T19:20:30Z" finished-at="2014-09-14T19:20:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="215" started-at="2014-09-14T19:20:30Z" finished-at="2014-09-14T19:20:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="163" started-at="2014-09-14T19:20:30Z" finished-at="2014-09-14T19:20:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="215" started-at="2014-09-14T19:20:30Z" finished-at="2014-09-14T19:20:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="126" started-at="2014-09-14T19:20:30Z" finished-at="2014-09-14T19:20:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="125" started-at="2014-09-14T19:20:30Z" finished-at="2014-09-14T19:20:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="218" started-at="2014-09-14T19:20:30Z" finished-at="2014-09-14T19:20:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="165" started-at="2014-09-14T19:20:30Z" finished-at="2014-09-14T19:20:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="211" started-at="2014-09-14T19:20:30Z" finished-at="2014-09-14T19:20:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="188" started-at="2014-09-14T19:20:30Z" finished-at="2014-09-14T19:20:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="161" started-at="2014-09-14T19:20:30Z" finished-at="2014-09-14T19:20:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="154" started-at="2014-09-14T19:20:30Z" finished-at="2014-09-14T19:20:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="173" started-at="2014-09-14T19:20:30Z" finished-at="2014-09-14T19:20:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="181" started-at="2014-09-14T19:20:30Z" finished-at="2014-09-14T19:20:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="169" started-at="2014-09-14T19:20:30Z" finished-at="2014-09-14T19:20:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="192" started-at="2014-09-14T19:20:30Z" finished-at="2014-09-14T19:20:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="168" started-at="2014-09-14T19:20:30Z" finished-at="2014-09-14T19:20:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="168" started-at="2014-09-14T19:20:30Z" finished-at="2014-09-14T19:20:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="153" started-at="2014-09-14T19:20:30Z" finished-at="2014-09-14T19:20:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="207" started-at="2014-09-14T19:20:30Z" finished-at="2014-09-14T19:20:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="216" started-at="2014-09-14T19:20:30Z" finished-at="2014-09-14T19:20:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="265" started-at="2014-09-14T19:20:30Z" finished-at="2014-09-14T19:20:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="142" started-at="2014-09-14T19:20:30Z" finished-at="2014-09-14T19:20:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="120" started-at="2014-09-14T19:20:30Z" finished-at="2014-09-14T19:20:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="186" started-at="2014-09-14T19:20:30Z" finished-at="2014-09-14T19:20:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="154" started-at="2014-09-14T19:20:30Z" finished-at="2014-09-14T19:20:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="190" started-at="2014-09-14T19:20:30Z" finished-at="2014-09-14T19:20:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="125" started-at="2014-09-14T19:20:30Z" finished-at="2014-09-14T19:20:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="198" started-at="2014-09-14T19:20:30Z" finished-at="2014-09-14T19:20:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="200" started-at="2014-09-14T19:20:30Z" finished-at="2014-09-14T19:20:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="247" started-at="2014-09-14T19:20:31Z" finished-at="2014-09-14T19:20:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="210" started-at="2014-09-14T19:20:31Z" finished-at="2014-09-14T19:20:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="195" started-at="2014-09-14T19:20:31Z" finished-at="2014-09-14T19:20:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="179" started-at="2014-09-14T19:20:31Z" finished-at="2014-09-14T19:20:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="239" started-at="2014-09-14T19:20:31Z" finished-at="2014-09-14T19:20:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="182" started-at="2014-09-14T19:20:31Z" finished-at="2014-09-14T19:20:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="230" started-at="2014-09-14T19:20:31Z" finished-at="2014-09-14T19:20:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="204" started-at="2014-09-14T19:20:31Z" finished-at="2014-09-14T19:20:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="114" started-at="2014-09-14T19:20:31Z" finished-at="2014-09-14T19:20:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="161" started-at="2014-09-14T19:20:31Z" finished-at="2014-09-14T19:20:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="194" started-at="2014-09-14T19:20:31Z" finished-at="2014-09-14T19:20:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="160" started-at="2014-09-14T19:20:31Z" finished-at="2014-09-14T19:20:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="203" started-at="2014-09-14T19:20:31Z" finished-at="2014-09-14T19:20:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="203" started-at="2014-09-14T19:20:31Z" finished-at="2014-09-14T19:20:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="249" started-at="2014-09-14T19:20:31Z" finished-at="2014-09-14T19:20:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="162" started-at="2014-09-14T19:20:31Z" finished-at="2014-09-14T19:20:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="163" started-at="2014-09-14T19:20:31Z" finished-at="2014-09-14T19:20:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="144" started-at="2014-09-14T19:20:31Z" finished-at="2014-09-14T19:20:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="162" started-at="2014-09-14T19:20:31Z" finished-at="2014-09-14T19:20:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="152" started-at="2014-09-14T19:20:31Z" finished-at="2014-09-14T19:20:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="179" started-at="2014-09-14T19:20:31Z" finished-at="2014-09-14T19:20:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="264" started-at="2014-09-14T19:20:31Z" finished-at="2014-09-14T19:20:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="247" started-at="2014-09-14T19:20:31Z" finished-at="2014-09-14T19:20:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="161" started-at="2014-09-14T19:20:31Z" finished-at="2014-09-14T19:20:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="150" started-at="2014-09-14T19:20:31Z" finished-at="2014-09-14T19:20:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="124" started-at="2014-09-14T19:20:31Z" finished-at="2014-09-14T19:20:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="156" started-at="2014-09-14T19:20:31Z" finished-at="2014-09-14T19:20:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="177" started-at="2014-09-14T19:20:31Z" finished-at="2014-09-14T19:20:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="227" started-at="2014-09-14T19:20:31Z" finished-at="2014-09-14T19:20:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="157" started-at="2014-09-14T19:20:31Z" finished-at="2014-09-14T19:20:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="141" started-at="2014-09-14T19:20:31Z" finished-at="2014-09-14T19:20:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="178" started-at="2014-09-14T19:20:31Z" finished-at="2014-09-14T19:20:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="157" started-at="2014-09-14T19:20:31Z" finished-at="2014-09-14T19:20:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="401" started-at="2014-09-14T19:20:31Z" finished-at="2014-09-14T19:20:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="150" started-at="2014-09-14T19:20:31Z" finished-at="2014-09-14T19:20:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="153" started-at="2014-09-14T19:20:31Z" finished-at="2014-09-14T19:20:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="231" started-at="2014-09-14T19:20:31Z" finished-at="2014-09-14T19:20:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="163" started-at="2014-09-14T19:20:31Z" finished-at="2014-09-14T19:20:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="148" started-at="2014-09-14T19:20:31Z" finished-at="2014-09-14T19:20:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="362" started-at="2014-09-14T19:20:31Z" finished-at="2014-09-14T19:20:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="142" started-at="2014-09-14T19:20:31Z" finished-at="2014-09-14T19:20:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="149" started-at="2014-09-14T19:20:31Z" finished-at="2014-09-14T19:20:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="270" started-at="2014-09-14T19:20:31Z" finished-at="2014-09-14T19:20:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="183" started-at="2014-09-14T19:20:31Z" finished-at="2014-09-14T19:20:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="158" started-at="2014-09-14T19:20:31Z" finished-at="2014-09-14T19:20:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="151" started-at="2014-09-14T19:20:31Z" finished-at="2014-09-14T19:20:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="176" started-at="2014-09-14T19:20:31Z" finished-at="2014-09-14T19:20:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="141" started-at="2014-09-14T19:20:31Z" finished-at="2014-09-14T19:20:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="240" started-at="2014-09-14T19:20:31Z" finished-at="2014-09-14T19:20:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="219" started-at="2014-09-14T19:20:31Z" finished-at="2014-09-14T19:20:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="174" started-at="2014-09-14T19:20:31Z" finished-at="2014-09-14T19:20:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="197" started-at="2014-09-14T19:20:31Z" finished-at="2014-09-14T19:20:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="204" started-at="2014-09-14T19:20:31Z" finished-at="2014-09-14T19:20:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="230" started-at="2014-09-14T19:20:31Z" finished-at="2014-09-14T19:20:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="241" started-at="2014-09-14T19:20:32Z" finished-at="2014-09-14T19:20:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="172" started-at="2014-09-14T19:20:32Z" finished-at="2014-09-14T19:20:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="231" started-at="2014-09-14T19:20:32Z" finished-at="2014-09-14T19:20:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="207" started-at="2014-09-14T19:20:32Z" finished-at="2014-09-14T19:20:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="117" started-at="2014-09-14T19:20:32Z" finished-at="2014-09-14T19:20:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="229" started-at="2014-09-14T19:20:32Z" finished-at="2014-09-14T19:20:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="200" started-at="2014-09-14T19:20:32Z" finished-at="2014-09-14T19:20:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="202" started-at="2014-09-14T19:20:32Z" finished-at="2014-09-14T19:20:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="207" started-at="2014-09-14T19:20:32Z" finished-at="2014-09-14T19:20:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="230" started-at="2014-09-14T19:20:32Z" finished-at="2014-09-14T19:20:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="241" started-at="2014-09-14T19:20:32Z" finished-at="2014-09-14T19:20:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="176" started-at="2014-09-14T19:20:32Z" finished-at="2014-09-14T19:20:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="119" started-at="2014-09-14T19:20:32Z" finished-at="2014-09-14T19:20:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="157" started-at="2014-09-14T19:20:32Z" finished-at="2014-09-14T19:20:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="176" started-at="2014-09-14T19:20:32Z" finished-at="2014-09-14T19:20:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="222" started-at="2014-09-14T19:20:32Z" finished-at="2014-09-14T19:20:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="262" started-at="2014-09-14T19:20:32Z" finished-at="2014-09-14T19:20:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="170" started-at="2014-09-14T19:20:32Z" finished-at="2014-09-14T19:20:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="145" started-at="2014-09-14T19:20:32Z" finished-at="2014-09-14T19:20:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="166" started-at="2014-09-14T19:20:32Z" finished-at="2014-09-14T19:20:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="150" started-at="2014-09-14T19:20:32Z" finished-at="2014-09-14T19:20:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="153" started-at="2014-09-14T19:20:32Z" finished-at="2014-09-14T19:20:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="174" started-at="2014-09-14T19:20:32Z" finished-at="2014-09-14T19:20:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="324" started-at="2014-09-14T19:20:32Z" finished-at="2014-09-14T19:20:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="172" started-at="2014-09-14T19:20:32Z" finished-at="2014-09-14T19:20:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="143" started-at="2014-09-14T19:20:32Z" finished-at="2014-09-14T19:20:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="133" started-at="2014-09-14T19:20:32Z" finished-at="2014-09-14T19:20:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="280" started-at="2014-09-14T19:20:32Z" finished-at="2014-09-14T19:20:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="314" started-at="2014-09-14T19:20:32Z" finished-at="2014-09-14T19:20:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="178" started-at="2014-09-14T19:20:32Z" finished-at="2014-09-14T19:20:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="149" started-at="2014-09-14T19:20:32Z" finished-at="2014-09-14T19:20:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="151" started-at="2014-09-14T19:20:32Z" finished-at="2014-09-14T19:20:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="139" started-at="2014-09-14T19:20:32Z" finished-at="2014-09-14T19:20:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="157" started-at="2014-09-14T19:20:32Z" finished-at="2014-09-14T19:20:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="190" started-at="2014-09-14T19:20:32Z" finished-at="2014-09-14T19:20:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="148" started-at="2014-09-14T19:20:32Z" finished-at="2014-09-14T19:20:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="313" started-at="2014-09-14T19:20:32Z" finished-at="2014-09-14T19:20:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="153" started-at="2014-09-14T19:20:32Z" finished-at="2014-09-14T19:20:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="254" started-at="2014-09-14T19:20:32Z" finished-at="2014-09-14T19:20:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="119" started-at="2014-09-14T19:20:32Z" finished-at="2014-09-14T19:20:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="169" started-at="2014-09-14T19:20:32Z" finished-at="2014-09-14T19:20:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="201" started-at="2014-09-14T19:20:32Z" finished-at="2014-09-14T19:20:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="235" started-at="2014-09-14T19:20:32Z" finished-at="2014-09-14T19:20:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="166" started-at="2014-09-14T19:20:32Z" finished-at="2014-09-14T19:20:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="193" started-at="2014-09-14T19:20:32Z" finished-at="2014-09-14T19:20:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="207" started-at="2014-09-14T19:20:32Z" finished-at="2014-09-14T19:20:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="212" started-at="2014-09-14T19:20:32Z" finished-at="2014-09-14T19:20:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="171" started-at="2014-09-14T19:20:32Z" finished-at="2014-09-14T19:20:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="137" started-at="2014-09-14T19:20:32Z" finished-at="2014-09-14T19:20:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="140" started-at="2014-09-14T19:20:33Z" finished-at="2014-09-14T19:20:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="201" started-at="2014-09-14T19:20:33Z" finished-at="2014-09-14T19:20:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="180" started-at="2014-09-14T19:20:33Z" finished-at="2014-09-14T19:20:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="127" started-at="2014-09-14T19:20:33Z" finished-at="2014-09-14T19:20:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="217" started-at="2014-09-14T19:20:33Z" finished-at="2014-09-14T19:20:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="152" started-at="2014-09-14T19:20:33Z" finished-at="2014-09-14T19:20:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="144" started-at="2014-09-14T19:20:33Z" finished-at="2014-09-14T19:20:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="140" started-at="2014-09-14T19:20:33Z" finished-at="2014-09-14T19:20:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="197" started-at="2014-09-14T19:20:33Z" finished-at="2014-09-14T19:20:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="171" started-at="2014-09-14T19:20:33Z" finished-at="2014-09-14T19:20:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="152" started-at="2014-09-14T19:20:33Z" finished-at="2014-09-14T19:20:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="249" started-at="2014-09-14T19:20:33Z" finished-at="2014-09-14T19:20:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="314" started-at="2014-09-14T19:20:33Z" finished-at="2014-09-14T19:20:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="258" started-at="2014-09-14T19:20:33Z" finished-at="2014-09-14T19:20:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="157" started-at="2014-09-14T19:20:33Z" finished-at="2014-09-14T19:20:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="175" started-at="2014-09-14T19:20:33Z" finished-at="2014-09-14T19:20:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="265" started-at="2014-09-14T19:20:33Z" finished-at="2014-09-14T19:20:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="128" started-at="2014-09-14T19:20:33Z" finished-at="2014-09-14T19:20:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="197" started-at="2014-09-14T19:20:33Z" finished-at="2014-09-14T19:20:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="183" started-at="2014-09-14T19:20:33Z" finished-at="2014-09-14T19:20:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="136" started-at="2014-09-14T19:20:33Z" finished-at="2014-09-14T19:20:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="97" started-at="2014-09-14T19:20:33Z" finished-at="2014-09-14T19:20:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="160" started-at="2014-09-14T19:20:33Z" finished-at="2014-09-14T19:20:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="172" started-at="2014-09-14T19:20:33Z" finished-at="2014-09-14T19:20:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="224" started-at="2014-09-14T19:20:33Z" finished-at="2014-09-14T19:20:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="162" started-at="2014-09-14T19:20:33Z" finished-at="2014-09-14T19:20:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="287" started-at="2014-09-14T19:20:33Z" finished-at="2014-09-14T19:20:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="145" started-at="2014-09-14T19:20:33Z" finished-at="2014-09-14T19:20:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="131" started-at="2014-09-14T19:20:33Z" finished-at="2014-09-14T19:20:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="218" started-at="2014-09-14T19:20:33Z" finished-at="2014-09-14T19:20:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="138" started-at="2014-09-14T19:20:33Z" finished-at="2014-09-14T19:20:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="129" started-at="2014-09-14T19:20:33Z" finished-at="2014-09-14T19:20:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="140" started-at="2014-09-14T19:20:33Z" finished-at="2014-09-14T19:20:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="203" started-at="2014-09-14T19:20:33Z" finished-at="2014-09-14T19:20:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="146" started-at="2014-09-14T19:20:33Z" finished-at="2014-09-14T19:20:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="142" started-at="2014-09-14T19:20:33Z" finished-at="2014-09-14T19:20:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="169" started-at="2014-09-14T19:20:33Z" finished-at="2014-09-14T19:20:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="164" started-at="2014-09-14T19:20:33Z" finished-at="2014-09-14T19:20:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="178" started-at="2014-09-14T19:20:33Z" finished-at="2014-09-14T19:20:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="173" started-at="2014-09-14T19:20:33Z" finished-at="2014-09-14T19:20:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="263" started-at="2014-09-14T19:20:33Z" finished-at="2014-09-14T19:20:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="252" started-at="2014-09-14T19:20:33Z" finished-at="2014-09-14T19:20:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="264" started-at="2014-09-14T19:20:33Z" finished-at="2014-09-14T19:20:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="125" started-at="2014-09-14T19:20:33Z" finished-at="2014-09-14T19:20:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="234" started-at="2014-09-14T19:20:33Z" finished-at="2014-09-14T19:20:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="176" started-at="2014-09-14T19:20:33Z" finished-at="2014-09-14T19:20:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="228" started-at="2014-09-14T19:20:33Z" finished-at="2014-09-14T19:20:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="203" started-at="2014-09-14T19:20:33Z" finished-at="2014-09-14T19:20:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="141" started-at="2014-09-14T19:20:33Z" finished-at="2014-09-14T19:20:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="216" started-at="2014-09-14T19:20:33Z" finished-at="2014-09-14T19:20:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="201" started-at="2014-09-14T19:20:33Z" finished-at="2014-09-14T19:20:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="141" started-at="2014-09-14T19:20:33Z" finished-at="2014-09-14T19:20:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="179" started-at="2014-09-14T19:20:33Z" finished-at="2014-09-14T19:20:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="221" started-at="2014-09-14T19:20:33Z" finished-at="2014-09-14T19:20:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="161" started-at="2014-09-14T19:20:33Z" finished-at="2014-09-14T19:20:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="222" started-at="2014-09-14T19:20:33Z" finished-at="2014-09-14T19:20:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="160" started-at="2014-09-14T19:20:33Z" finished-at="2014-09-14T19:20:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="234" started-at="2014-09-14T19:20:34Z" finished-at="2014-09-14T19:20:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="127" started-at="2014-09-14T19:20:34Z" finished-at="2014-09-14T19:20:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="177" started-at="2014-09-14T19:20:34Z" finished-at="2014-09-14T19:20:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="180" started-at="2014-09-14T19:20:34Z" finished-at="2014-09-14T19:20:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="205" started-at="2014-09-14T19:20:34Z" finished-at="2014-09-14T19:20:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="189" started-at="2014-09-14T19:20:34Z" finished-at="2014-09-14T19:20:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="130" started-at="2014-09-14T19:20:34Z" finished-at="2014-09-14T19:20:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="181" started-at="2014-09-14T19:20:34Z" finished-at="2014-09-14T19:20:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="180" started-at="2014-09-14T19:20:34Z" finished-at="2014-09-14T19:20:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="194" started-at="2014-09-14T19:20:34Z" finished-at="2014-09-14T19:20:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="175" started-at="2014-09-14T19:20:34Z" finished-at="2014-09-14T19:20:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="195" started-at="2014-09-14T19:20:34Z" finished-at="2014-09-14T19:20:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="149" started-at="2014-09-14T19:20:34Z" finished-at="2014-09-14T19:20:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="154" started-at="2014-09-14T19:20:34Z" finished-at="2014-09-14T19:20:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="190" started-at="2014-09-14T19:20:34Z" finished-at="2014-09-14T19:20:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="173" started-at="2014-09-14T19:20:34Z" finished-at="2014-09-14T19:20:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="226" started-at="2014-09-14T19:20:34Z" finished-at="2014-09-14T19:20:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="154" started-at="2014-09-14T19:20:34Z" finished-at="2014-09-14T19:20:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="217" started-at="2014-09-14T19:20:34Z" finished-at="2014-09-14T19:20:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="217" started-at="2014-09-14T19:20:34Z" finished-at="2014-09-14T19:20:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="128" started-at="2014-09-14T19:20:34Z" finished-at="2014-09-14T19:20:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="182" started-at="2014-09-14T19:20:34Z" finished-at="2014-09-14T19:20:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="208" started-at="2014-09-14T19:20:34Z" finished-at="2014-09-14T19:20:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="208" started-at="2014-09-14T19:20:34Z" finished-at="2014-09-14T19:20:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="172" started-at="2014-09-14T19:20:34Z" finished-at="2014-09-14T19:20:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="197" started-at="2014-09-14T19:20:34Z" finished-at="2014-09-14T19:20:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="163" started-at="2014-09-14T19:20:34Z" finished-at="2014-09-14T19:20:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="181" started-at="2014-09-14T19:20:34Z" finished-at="2014-09-14T19:20:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="139" started-at="2014-09-14T19:20:34Z" finished-at="2014-09-14T19:20:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="195" started-at="2014-09-14T19:20:34Z" finished-at="2014-09-14T19:20:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="205" started-at="2014-09-14T19:20:34Z" finished-at="2014-09-14T19:20:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="225" started-at="2014-09-14T19:20:34Z" finished-at="2014-09-14T19:20:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="209" started-at="2014-09-14T19:20:34Z" finished-at="2014-09-14T19:20:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="149" started-at="2014-09-14T19:20:34Z" finished-at="2014-09-14T19:20:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="206" started-at="2014-09-14T19:20:34Z" finished-at="2014-09-14T19:20:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="164" started-at="2014-09-14T19:20:34Z" finished-at="2014-09-14T19:20:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="131" started-at="2014-09-14T19:20:34Z" finished-at="2014-09-14T19:20:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="184" started-at="2014-09-14T19:20:34Z" finished-at="2014-09-14T19:20:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="183" started-at="2014-09-14T19:20:34Z" finished-at="2014-09-14T19:20:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="137" started-at="2014-09-14T19:20:34Z" finished-at="2014-09-14T19:20:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="178" started-at="2014-09-14T19:20:34Z" finished-at="2014-09-14T19:20:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="182" started-at="2014-09-14T19:20:34Z" finished-at="2014-09-14T19:20:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="252" started-at="2014-09-14T19:20:34Z" finished-at="2014-09-14T19:20:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="194" started-at="2014-09-14T19:20:34Z" finished-at="2014-09-14T19:20:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="188" started-at="2014-09-14T19:20:34Z" finished-at="2014-09-14T19:20:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="189" started-at="2014-09-14T19:20:34Z" finished-at="2014-09-14T19:20:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="246" started-at="2014-09-14T19:20:34Z" finished-at="2014-09-14T19:20:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="321" started-at="2014-09-14T19:20:34Z" finished-at="2014-09-14T19:20:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="189" started-at="2014-09-14T19:20:34Z" finished-at="2014-09-14T19:20:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="258" started-at="2014-09-14T19:20:34Z" finished-at="2014-09-14T19:20:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="140" started-at="2014-09-14T19:20:34Z" finished-at="2014-09-14T19:20:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="113" started-at="2014-09-14T19:20:34Z" finished-at="2014-09-14T19:20:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="152" started-at="2014-09-14T19:20:34Z" finished-at="2014-09-14T19:20:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="125" started-at="2014-09-14T19:20:35Z" finished-at="2014-09-14T19:20:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="177" started-at="2014-09-14T19:20:35Z" finished-at="2014-09-14T19:20:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="202" started-at="2014-09-14T19:20:35Z" finished-at="2014-09-14T19:20:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="425" started-at="2014-09-14T19:20:35Z" finished-at="2014-09-14T19:20:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="155" started-at="2014-09-14T19:20:35Z" finished-at="2014-09-14T19:20:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="234" started-at="2014-09-14T19:20:35Z" finished-at="2014-09-14T19:20:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="139" started-at="2014-09-14T19:20:35Z" finished-at="2014-09-14T19:20:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="214" started-at="2014-09-14T19:20:35Z" finished-at="2014-09-14T19:20:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="124" started-at="2014-09-14T19:20:35Z" finished-at="2014-09-14T19:20:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="163" started-at="2014-09-14T19:20:35Z" finished-at="2014-09-14T19:20:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="148" started-at="2014-09-14T19:20:35Z" finished-at="2014-09-14T19:20:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="201" started-at="2014-09-14T19:20:35Z" finished-at="2014-09-14T19:20:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="166" started-at="2014-09-14T19:20:35Z" finished-at="2014-09-14T19:20:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="157" started-at="2014-09-14T19:20:35Z" finished-at="2014-09-14T19:20:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="135" started-at="2014-09-14T19:20:35Z" finished-at="2014-09-14T19:20:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="135" started-at="2014-09-14T19:20:35Z" finished-at="2014-09-14T19:20:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="222" started-at="2014-09-14T19:20:35Z" finished-at="2014-09-14T19:20:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="128" started-at="2014-09-14T19:20:35Z" finished-at="2014-09-14T19:20:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="163" started-at="2014-09-14T19:20:35Z" finished-at="2014-09-14T19:20:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="246" started-at="2014-09-14T19:20:35Z" finished-at="2014-09-14T19:20:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="205" started-at="2014-09-14T19:20:35Z" finished-at="2014-09-14T19:20:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="129" started-at="2014-09-14T19:20:35Z" finished-at="2014-09-14T19:20:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="195" started-at="2014-09-14T19:20:35Z" finished-at="2014-09-14T19:20:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="170" started-at="2014-09-14T19:20:35Z" finished-at="2014-09-14T19:20:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="173" started-at="2014-09-14T19:20:35Z" finished-at="2014-09-14T19:20:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="176" started-at="2014-09-14T19:20:35Z" finished-at="2014-09-14T19:20:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="190" started-at="2014-09-14T19:20:35Z" finished-at="2014-09-14T19:20:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="166" started-at="2014-09-14T19:20:35Z" finished-at="2014-09-14T19:20:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="184" started-at="2014-09-14T19:20:35Z" finished-at="2014-09-14T19:20:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="174" started-at="2014-09-14T19:20:35Z" finished-at="2014-09-14T19:20:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="225" started-at="2014-09-14T19:20:35Z" finished-at="2014-09-14T19:20:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="158" started-at="2014-09-14T19:20:35Z" finished-at="2014-09-14T19:20:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="209" started-at="2014-09-14T19:20:35Z" finished-at="2014-09-14T19:20:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="212" started-at="2014-09-14T19:20:35Z" finished-at="2014-09-14T19:20:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="198" started-at="2014-09-14T19:20:35Z" finished-at="2014-09-14T19:20:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="139" started-at="2014-09-14T19:20:35Z" finished-at="2014-09-14T19:20:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="174" started-at="2014-09-14T19:20:35Z" finished-at="2014-09-14T19:20:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="209" started-at="2014-09-14T19:20:35Z" finished-at="2014-09-14T19:20:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="201" started-at="2014-09-14T19:20:35Z" finished-at="2014-09-14T19:20:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="255" started-at="2014-09-14T19:20:35Z" finished-at="2014-09-14T19:20:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="342" started-at="2014-09-14T19:20:35Z" finished-at="2014-09-14T19:20:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="214" started-at="2014-09-14T19:20:35Z" finished-at="2014-09-14T19:20:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="155" started-at="2014-09-14T19:20:35Z" finished-at="2014-09-14T19:20:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="185" started-at="2014-09-14T19:20:35Z" finished-at="2014-09-14T19:20:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="202" started-at="2014-09-14T19:20:35Z" finished-at="2014-09-14T19:20:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="223" started-at="2014-09-14T19:20:35Z" finished-at="2014-09-14T19:20:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="192" started-at="2014-09-14T19:20:35Z" finished-at="2014-09-14T19:20:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="315" started-at="2014-09-14T19:20:35Z" finished-at="2014-09-14T19:20:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="149" started-at="2014-09-14T19:20:35Z" finished-at="2014-09-14T19:20:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="192" started-at="2014-09-14T19:20:35Z" finished-at="2014-09-14T19:20:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="144" started-at="2014-09-14T19:20:35Z" finished-at="2014-09-14T19:20:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="128" started-at="2014-09-14T19:20:35Z" finished-at="2014-09-14T19:20:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="146" started-at="2014-09-14T19:20:35Z" finished-at="2014-09-14T19:20:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="162" started-at="2014-09-14T19:20:36Z" finished-at="2014-09-14T19:20:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="161" started-at="2014-09-14T19:20:36Z" finished-at="2014-09-14T19:20:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="138" started-at="2014-09-14T19:20:36Z" finished-at="2014-09-14T19:20:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="166" started-at="2014-09-14T19:20:36Z" finished-at="2014-09-14T19:20:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="170" started-at="2014-09-14T19:20:36Z" finished-at="2014-09-14T19:20:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="205" started-at="2014-09-14T19:20:36Z" finished-at="2014-09-14T19:20:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="217" started-at="2014-09-14T19:20:36Z" finished-at="2014-09-14T19:20:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="158" started-at="2014-09-14T19:20:36Z" finished-at="2014-09-14T19:20:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="387" started-at="2014-09-14T19:20:36Z" finished-at="2014-09-14T19:20:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="192" started-at="2014-09-14T19:20:36Z" finished-at="2014-09-14T19:20:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="249" started-at="2014-09-14T19:20:36Z" finished-at="2014-09-14T19:20:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="176" started-at="2014-09-14T19:20:36Z" finished-at="2014-09-14T19:20:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="107" started-at="2014-09-14T19:20:36Z" finished-at="2014-09-14T19:20:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="190" started-at="2014-09-14T19:20:36Z" finished-at="2014-09-14T19:20:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="131" started-at="2014-09-14T19:20:36Z" finished-at="2014-09-14T19:20:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="152" started-at="2014-09-14T19:20:36Z" finished-at="2014-09-14T19:20:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="151" started-at="2014-09-14T19:20:36Z" finished-at="2014-09-14T19:20:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="224" started-at="2014-09-14T19:20:36Z" finished-at="2014-09-14T19:20:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="170" started-at="2014-09-14T19:20:36Z" finished-at="2014-09-14T19:20:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="147" started-at="2014-09-14T19:20:36Z" finished-at="2014-09-14T19:20:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="186" started-at="2014-09-14T19:20:36Z" finished-at="2014-09-14T19:20:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="143" started-at="2014-09-14T19:20:36Z" finished-at="2014-09-14T19:20:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="285" started-at="2014-09-14T19:20:36Z" finished-at="2014-09-14T19:20:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="193" started-at="2014-09-14T19:20:36Z" finished-at="2014-09-14T19:20:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="134" started-at="2014-09-14T19:20:36Z" finished-at="2014-09-14T19:20:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="118" started-at="2014-09-14T19:20:36Z" finished-at="2014-09-14T19:20:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="237" started-at="2014-09-14T19:20:36Z" finished-at="2014-09-14T19:20:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="193" started-at="2014-09-14T19:20:36Z" finished-at="2014-09-14T19:20:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="188" started-at="2014-09-14T19:20:36Z" finished-at="2014-09-14T19:20:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="196" started-at="2014-09-14T19:20:36Z" finished-at="2014-09-14T19:20:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="136" started-at="2014-09-14T19:20:36Z" finished-at="2014-09-14T19:20:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="106" started-at="2014-09-14T19:20:36Z" finished-at="2014-09-14T19:20:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="208" started-at="2014-09-14T19:20:36Z" finished-at="2014-09-14T19:20:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="168" started-at="2014-09-14T19:20:36Z" finished-at="2014-09-14T19:20:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="147" started-at="2014-09-14T19:20:36Z" finished-at="2014-09-14T19:20:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="181" started-at="2014-09-14T19:20:36Z" finished-at="2014-09-14T19:20:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="261" started-at="2014-09-14T19:20:36Z" finished-at="2014-09-14T19:20:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="193" started-at="2014-09-14T19:20:36Z" finished-at="2014-09-14T19:20:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="186" started-at="2014-09-14T19:20:36Z" finished-at="2014-09-14T19:20:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="205" started-at="2014-09-14T19:20:36Z" finished-at="2014-09-14T19:20:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="188" started-at="2014-09-14T19:20:36Z" finished-at="2014-09-14T19:20:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="215" started-at="2014-09-14T19:20:36Z" finished-at="2014-09-14T19:20:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="220" started-at="2014-09-14T19:20:36Z" finished-at="2014-09-14T19:20:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="224" started-at="2014-09-14T19:20:36Z" finished-at="2014-09-14T19:20:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="201" started-at="2014-09-14T19:20:36Z" finished-at="2014-09-14T19:20:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="169" started-at="2014-09-14T19:20:36Z" finished-at="2014-09-14T19:20:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="174" started-at="2014-09-14T19:20:36Z" finished-at="2014-09-14T19:20:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="166" started-at="2014-09-14T19:20:36Z" finished-at="2014-09-14T19:20:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="154" started-at="2014-09-14T19:20:36Z" finished-at="2014-09-14T19:20:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="174" started-at="2014-09-14T19:20:36Z" finished-at="2014-09-14T19:20:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="197" started-at="2014-09-14T19:20:36Z" finished-at="2014-09-14T19:20:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="193" started-at="2014-09-14T19:20:36Z" finished-at="2014-09-14T19:20:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="201" started-at="2014-09-14T19:20:36Z" finished-at="2014-09-14T19:20:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="212" started-at="2014-09-14T19:20:36Z" finished-at="2014-09-14T19:20:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="191" started-at="2014-09-14T19:20:36Z" finished-at="2014-09-14T19:20:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="150" started-at="2014-09-14T19:20:37Z" finished-at="2014-09-14T19:20:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="199" started-at="2014-09-14T19:20:37Z" finished-at="2014-09-14T19:20:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="147" started-at="2014-09-14T19:20:37Z" finished-at="2014-09-14T19:20:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="161" started-at="2014-09-14T19:20:37Z" finished-at="2014-09-14T19:20:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="208" started-at="2014-09-14T19:20:37Z" finished-at="2014-09-14T19:20:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="170" started-at="2014-09-14T19:20:37Z" finished-at="2014-09-14T19:20:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="164" started-at="2014-09-14T19:20:37Z" finished-at="2014-09-14T19:20:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="191" started-at="2014-09-14T19:20:37Z" finished-at="2014-09-14T19:20:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="166" started-at="2014-09-14T19:20:37Z" finished-at="2014-09-14T19:20:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="197" started-at="2014-09-14T19:20:37Z" finished-at="2014-09-14T19:20:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="231" started-at="2014-09-14T19:20:37Z" finished-at="2014-09-14T19:20:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="219" started-at="2014-09-14T19:20:37Z" finished-at="2014-09-14T19:20:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="194" started-at="2014-09-14T19:20:37Z" finished-at="2014-09-14T19:20:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="202" started-at="2014-09-14T19:20:37Z" finished-at="2014-09-14T19:20:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="157" started-at="2014-09-14T19:20:37Z" finished-at="2014-09-14T19:20:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="178" started-at="2014-09-14T19:20:37Z" finished-at="2014-09-14T19:20:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="139" started-at="2014-09-14T19:20:37Z" finished-at="2014-09-14T19:20:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="149" started-at="2014-09-14T19:20:37Z" finished-at="2014-09-14T19:20:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="113" started-at="2014-09-14T19:20:37Z" finished-at="2014-09-14T19:20:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="118" started-at="2014-09-14T19:20:37Z" finished-at="2014-09-14T19:20:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="407" started-at="2014-09-14T19:20:37Z" finished-at="2014-09-14T19:20:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="251" started-at="2014-09-14T19:20:37Z" finished-at="2014-09-14T19:20:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="276" started-at="2014-09-14T19:20:37Z" finished-at="2014-09-14T19:20:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="402" started-at="2014-09-14T19:20:37Z" finished-at="2014-09-14T19:20:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="294" started-at="2014-09-14T19:20:37Z" finished-at="2014-09-14T19:20:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="249" started-at="2014-09-14T19:20:37Z" finished-at="2014-09-14T19:20:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="277" started-at="2014-09-14T19:20:37Z" finished-at="2014-09-14T19:20:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="193" started-at="2014-09-14T19:20:37Z" finished-at="2014-09-14T19:20:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="241" started-at="2014-09-14T19:20:37Z" finished-at="2014-09-14T19:20:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="181" started-at="2014-09-14T19:20:37Z" finished-at="2014-09-14T19:20:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="188" started-at="2014-09-14T19:20:37Z" finished-at="2014-09-14T19:20:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="182" started-at="2014-09-14T19:20:37Z" finished-at="2014-09-14T19:20:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="193" started-at="2014-09-14T19:20:37Z" finished-at="2014-09-14T19:20:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="169" started-at="2014-09-14T19:20:37Z" finished-at="2014-09-14T19:20:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="207" started-at="2014-09-14T19:20:37Z" finished-at="2014-09-14T19:20:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="201" started-at="2014-09-14T19:20:37Z" finished-at="2014-09-14T19:20:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="209" started-at="2014-09-14T19:20:37Z" finished-at="2014-09-14T19:20:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="230" started-at="2014-09-14T19:20:37Z" finished-at="2014-09-14T19:20:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="245" started-at="2014-09-14T19:20:37Z" finished-at="2014-09-14T19:20:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="146" started-at="2014-09-14T19:20:37Z" finished-at="2014-09-14T19:20:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="208" started-at="2014-09-14T19:20:37Z" finished-at="2014-09-14T19:20:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="178" started-at="2014-09-14T19:20:37Z" finished-at="2014-09-14T19:20:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="137" started-at="2014-09-14T19:20:37Z" finished-at="2014-09-14T19:20:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="163" started-at="2014-09-14T19:20:37Z" finished-at="2014-09-14T19:20:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="299" started-at="2014-09-14T19:20:37Z" finished-at="2014-09-14T19:20:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="132" started-at="2014-09-14T19:20:37Z" finished-at="2014-09-14T19:20:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="144" started-at="2014-09-14T19:20:37Z" finished-at="2014-09-14T19:20:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="185" started-at="2014-09-14T19:20:37Z" finished-at="2014-09-14T19:20:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="236" started-at="2014-09-14T19:20:38Z" finished-at="2014-09-14T19:20:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="184" started-at="2014-09-14T19:20:38Z" finished-at="2014-09-14T19:20:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="185" started-at="2014-09-14T19:20:38Z" finished-at="2014-09-14T19:20:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="122" started-at="2014-09-14T19:20:38Z" finished-at="2014-09-14T19:20:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="244" started-at="2014-09-14T19:20:38Z" finished-at="2014-09-14T19:20:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="130" started-at="2014-09-14T19:20:38Z" finished-at="2014-09-14T19:20:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="112" started-at="2014-09-14T19:20:38Z" finished-at="2014-09-14T19:20:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="192" started-at="2014-09-14T19:20:38Z" finished-at="2014-09-14T19:20:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="232" started-at="2014-09-14T19:20:38Z" finished-at="2014-09-14T19:20:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="299" started-at="2014-09-14T19:20:38Z" finished-at="2014-09-14T19:20:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="162" started-at="2014-09-14T19:20:38Z" finished-at="2014-09-14T19:20:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="150" started-at="2014-09-14T19:20:38Z" finished-at="2014-09-14T19:20:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="209" started-at="2014-09-14T19:20:38Z" finished-at="2014-09-14T19:20:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="159" started-at="2014-09-14T19:20:38Z" finished-at="2014-09-14T19:20:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="142" started-at="2014-09-14T19:20:38Z" finished-at="2014-09-14T19:20:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="133" started-at="2014-09-14T19:20:38Z" finished-at="2014-09-14T19:20:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="204" started-at="2014-09-14T19:20:38Z" finished-at="2014-09-14T19:20:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="149" started-at="2014-09-14T19:20:38Z" finished-at="2014-09-14T19:20:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="292" started-at="2014-09-14T19:20:38Z" finished-at="2014-09-14T19:20:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="177" started-at="2014-09-14T19:20:38Z" finished-at="2014-09-14T19:20:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="129" started-at="2014-09-14T19:20:38Z" finished-at="2014-09-14T19:20:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="143" started-at="2014-09-14T19:20:38Z" finished-at="2014-09-14T19:20:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="144" started-at="2014-09-14T19:20:38Z" finished-at="2014-09-14T19:20:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="148" started-at="2014-09-14T19:20:38Z" finished-at="2014-09-14T19:20:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="137" started-at="2014-09-14T19:20:38Z" finished-at="2014-09-14T19:20:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="151" started-at="2014-09-14T19:20:38Z" finished-at="2014-09-14T19:20:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="184" started-at="2014-09-14T19:20:38Z" finished-at="2014-09-14T19:20:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="270" started-at="2014-09-14T19:20:38Z" finished-at="2014-09-14T19:20:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="150" started-at="2014-09-14T19:20:38Z" finished-at="2014-09-14T19:20:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="268" started-at="2014-09-14T19:20:38Z" finished-at="2014-09-14T19:20:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="113" started-at="2014-09-14T19:20:38Z" finished-at="2014-09-14T19:20:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="126" started-at="2014-09-14T19:20:38Z" finished-at="2014-09-14T19:20:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="123" started-at="2014-09-14T19:20:38Z" finished-at="2014-09-14T19:20:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="130" started-at="2014-09-14T19:20:38Z" finished-at="2014-09-14T19:20:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="242" started-at="2014-09-14T19:20:38Z" finished-at="2014-09-14T19:20:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="229" started-at="2014-09-14T19:20:38Z" finished-at="2014-09-14T19:20:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="342" started-at="2014-09-14T19:20:38Z" finished-at="2014-09-14T19:20:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="158" started-at="2014-09-14T19:20:38Z" finished-at="2014-09-14T19:20:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="150" started-at="2014-09-14T19:20:38Z" finished-at="2014-09-14T19:20:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="166" started-at="2014-09-14T19:20:38Z" finished-at="2014-09-14T19:20:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="175" started-at="2014-09-14T19:20:38Z" finished-at="2014-09-14T19:20:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="240" started-at="2014-09-14T19:20:38Z" finished-at="2014-09-14T19:20:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="138" started-at="2014-09-14T19:20:38Z" finished-at="2014-09-14T19:20:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="172" started-at="2014-09-14T19:20:38Z" finished-at="2014-09-14T19:20:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="291" started-at="2014-09-14T19:20:38Z" finished-at="2014-09-14T19:20:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="158" started-at="2014-09-14T19:20:38Z" finished-at="2014-09-14T19:20:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="255" started-at="2014-09-14T19:20:38Z" finished-at="2014-09-14T19:20:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="147" started-at="2014-09-14T19:20:38Z" finished-at="2014-09-14T19:20:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="148" started-at="2014-09-14T19:20:38Z" finished-at="2014-09-14T19:20:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="155" started-at="2014-09-14T19:20:38Z" finished-at="2014-09-14T19:20:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="167" started-at="2014-09-14T19:20:38Z" finished-at="2014-09-14T19:20:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="226" started-at="2014-09-14T19:20:38Z" finished-at="2014-09-14T19:20:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="189" started-at="2014-09-14T19:20:38Z" finished-at="2014-09-14T19:20:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="143" started-at="2014-09-14T19:20:38Z" finished-at="2014-09-14T19:20:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="211" started-at="2014-09-14T19:20:38Z" finished-at="2014-09-14T19:20:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="145" started-at="2014-09-14T19:20:38Z" finished-at="2014-09-14T19:20:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="171" started-at="2014-09-14T19:20:39Z" finished-at="2014-09-14T19:20:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="119" started-at="2014-09-14T19:20:39Z" finished-at="2014-09-14T19:20:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="208" started-at="2014-09-14T19:20:39Z" finished-at="2014-09-14T19:20:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="176" started-at="2014-09-14T19:20:39Z" finished-at="2014-09-14T19:20:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="187" started-at="2014-09-14T19:20:39Z" finished-at="2014-09-14T19:20:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="279" started-at="2014-09-14T19:20:39Z" finished-at="2014-09-14T19:20:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="171" started-at="2014-09-14T19:20:39Z" finished-at="2014-09-14T19:20:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="178" started-at="2014-09-14T19:20:39Z" finished-at="2014-09-14T19:20:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="170" started-at="2014-09-14T19:20:39Z" finished-at="2014-09-14T19:20:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="177" started-at="2014-09-14T19:20:39Z" finished-at="2014-09-14T19:20:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="225" started-at="2014-09-14T19:20:39Z" finished-at="2014-09-14T19:20:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="160" started-at="2014-09-14T19:20:39Z" finished-at="2014-09-14T19:20:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="159" started-at="2014-09-14T19:20:39Z" finished-at="2014-09-14T19:20:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="168" started-at="2014-09-14T19:20:39Z" finished-at="2014-09-14T19:20:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="133" started-at="2014-09-14T19:20:39Z" finished-at="2014-09-14T19:20:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="136" started-at="2014-09-14T19:20:39Z" finished-at="2014-09-14T19:20:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="240" started-at="2014-09-14T19:20:39Z" finished-at="2014-09-14T19:20:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="153" started-at="2014-09-14T19:20:39Z" finished-at="2014-09-14T19:20:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="171" started-at="2014-09-14T19:20:39Z" finished-at="2014-09-14T19:20:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="180" started-at="2014-09-14T19:20:39Z" finished-at="2014-09-14T19:20:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="252" started-at="2014-09-14T19:20:39Z" finished-at="2014-09-14T19:20:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="141" started-at="2014-09-14T19:20:39Z" finished-at="2014-09-14T19:20:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="240" started-at="2014-09-14T19:20:39Z" finished-at="2014-09-14T19:20:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="202" started-at="2014-09-14T19:20:39Z" finished-at="2014-09-14T19:20:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="147" started-at="2014-09-14T19:20:39Z" finished-at="2014-09-14T19:20:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="184" started-at="2014-09-14T19:20:39Z" finished-at="2014-09-14T19:20:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="135" started-at="2014-09-14T19:20:39Z" finished-at="2014-09-14T19:20:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="276" started-at="2014-09-14T19:20:39Z" finished-at="2014-09-14T19:20:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="253" started-at="2014-09-14T19:20:39Z" finished-at="2014-09-14T19:20:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="156" started-at="2014-09-14T19:20:39Z" finished-at="2014-09-14T19:20:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="188" started-at="2014-09-14T19:20:39Z" finished-at="2014-09-14T19:20:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="198" started-at="2014-09-14T19:20:39Z" finished-at="2014-09-14T19:20:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="194" started-at="2014-09-14T19:20:39Z" finished-at="2014-09-14T19:20:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="151" started-at="2014-09-14T19:20:39Z" finished-at="2014-09-14T19:20:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="184" started-at="2014-09-14T19:20:39Z" finished-at="2014-09-14T19:20:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="225" started-at="2014-09-14T19:20:39Z" finished-at="2014-09-14T19:20:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="199" started-at="2014-09-14T19:20:39Z" finished-at="2014-09-14T19:20:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="160" started-at="2014-09-14T19:20:39Z" finished-at="2014-09-14T19:20:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="173" started-at="2014-09-14T19:20:39Z" finished-at="2014-09-14T19:20:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="277" started-at="2014-09-14T19:20:39Z" finished-at="2014-09-14T19:20:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="216" started-at="2014-09-14T19:20:39Z" finished-at="2014-09-14T19:20:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="213" started-at="2014-09-14T19:20:39Z" finished-at="2014-09-14T19:20:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="167" started-at="2014-09-14T19:20:39Z" finished-at="2014-09-14T19:20:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="178" started-at="2014-09-14T19:20:39Z" finished-at="2014-09-14T19:20:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="292" started-at="2014-09-14T19:20:39Z" finished-at="2014-09-14T19:20:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="209" started-at="2014-09-14T19:20:39Z" finished-at="2014-09-14T19:20:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="174" started-at="2014-09-14T19:20:39Z" finished-at="2014-09-14T19:20:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="215" started-at="2014-09-14T19:20:39Z" finished-at="2014-09-14T19:20:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="206" started-at="2014-09-14T19:20:39Z" finished-at="2014-09-14T19:20:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="155" started-at="2014-09-14T19:20:39Z" finished-at="2014-09-14T19:20:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="384" started-at="2014-09-14T19:20:39Z" finished-at="2014-09-14T19:20:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="176" started-at="2014-09-14T19:20:40Z" finished-at="2014-09-14T19:20:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="281" started-at="2014-09-14T19:20:40Z" finished-at="2014-09-14T19:20:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="372" started-at="2014-09-14T19:20:40Z" finished-at="2014-09-14T19:20:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="126" started-at="2014-09-14T19:20:40Z" finished-at="2014-09-14T19:20:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="187" started-at="2014-09-14T19:20:40Z" finished-at="2014-09-14T19:20:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="208" started-at="2014-09-14T19:20:40Z" finished-at="2014-09-14T19:20:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="226" started-at="2014-09-14T19:20:40Z" finished-at="2014-09-14T19:20:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="306" started-at="2014-09-14T19:20:40Z" finished-at="2014-09-14T19:20:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="259" started-at="2014-09-14T19:20:40Z" finished-at="2014-09-14T19:20:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="232" started-at="2014-09-14T19:20:40Z" finished-at="2014-09-14T19:20:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="142" started-at="2014-09-14T19:20:40Z" finished-at="2014-09-14T19:20:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="112" started-at="2014-09-14T19:20:40Z" finished-at="2014-09-14T19:20:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="98" started-at="2014-09-14T19:20:40Z" finished-at="2014-09-14T19:20:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="156" started-at="2014-09-14T19:20:40Z" finished-at="2014-09-14T19:20:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="154" started-at="2014-09-14T19:20:40Z" finished-at="2014-09-14T19:20:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="147" started-at="2014-09-14T19:20:40Z" finished-at="2014-09-14T19:20:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="212" started-at="2014-09-14T19:20:40Z" finished-at="2014-09-14T19:20:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="198" started-at="2014-09-14T19:20:40Z" finished-at="2014-09-14T19:20:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="233" started-at="2014-09-14T19:20:40Z" finished-at="2014-09-14T19:20:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="186" started-at="2014-09-14T19:20:40Z" finished-at="2014-09-14T19:20:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="148" started-at="2014-09-14T19:20:40Z" finished-at="2014-09-14T19:20:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="222" started-at="2014-09-14T19:20:40Z" finished-at="2014-09-14T19:20:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="235" started-at="2014-09-14T19:20:40Z" finished-at="2014-09-14T19:20:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="188" started-at="2014-09-14T19:20:40Z" finished-at="2014-09-14T19:20:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="212" started-at="2014-09-14T19:20:40Z" finished-at="2014-09-14T19:20:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="183" started-at="2014-09-14T19:20:40Z" finished-at="2014-09-14T19:20:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="96" started-at="2014-09-14T19:20:40Z" finished-at="2014-09-14T19:20:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="433" started-at="2014-09-14T19:20:40Z" finished-at="2014-09-14T19:20:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="261" started-at="2014-09-14T19:20:40Z" finished-at="2014-09-14T19:20:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="256" started-at="2014-09-14T19:20:40Z" finished-at="2014-09-14T19:20:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="135" started-at="2014-09-14T19:20:40Z" finished-at="2014-09-14T19:20:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="172" started-at="2014-09-14T19:20:40Z" finished-at="2014-09-14T19:20:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="163" started-at="2014-09-14T19:20:40Z" finished-at="2014-09-14T19:20:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="247" started-at="2014-09-14T19:20:40Z" finished-at="2014-09-14T19:20:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="194" started-at="2014-09-14T19:20:40Z" finished-at="2014-09-14T19:20:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="161" started-at="2014-09-14T19:20:40Z" finished-at="2014-09-14T19:20:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="210" started-at="2014-09-14T19:20:40Z" finished-at="2014-09-14T19:20:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="223" started-at="2014-09-14T19:20:40Z" finished-at="2014-09-14T19:20:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="127" started-at="2014-09-14T19:20:40Z" finished-at="2014-09-14T19:20:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="129" started-at="2014-09-14T19:20:40Z" finished-at="2014-09-14T19:20:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="234" started-at="2014-09-14T19:20:40Z" finished-at="2014-09-14T19:20:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="220" started-at="2014-09-14T19:20:40Z" finished-at="2014-09-14T19:20:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="180" started-at="2014-09-14T19:20:40Z" finished-at="2014-09-14T19:20:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="233" started-at="2014-09-14T19:20:40Z" finished-at="2014-09-14T19:20:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="154" started-at="2014-09-14T19:20:40Z" finished-at="2014-09-14T19:20:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="189" started-at="2014-09-14T19:20:40Z" finished-at="2014-09-14T19:20:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="157" started-at="2014-09-14T19:20:40Z" finished-at="2014-09-14T19:20:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="160" started-at="2014-09-14T19:20:40Z" finished-at="2014-09-14T19:20:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="138" started-at="2014-09-14T19:20:40Z" finished-at="2014-09-14T19:20:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="187" started-at="2014-09-14T19:20:41Z" finished-at="2014-09-14T19:20:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="153" started-at="2014-09-14T19:20:41Z" finished-at="2014-09-14T19:20:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="164" started-at="2014-09-14T19:20:41Z" finished-at="2014-09-14T19:20:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="169" started-at="2014-09-14T19:20:41Z" finished-at="2014-09-14T19:20:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="154" started-at="2014-09-14T19:20:41Z" finished-at="2014-09-14T19:20:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="167" started-at="2014-09-14T19:20:41Z" finished-at="2014-09-14T19:20:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="129" started-at="2014-09-14T19:20:41Z" finished-at="2014-09-14T19:20:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="239" started-at="2014-09-14T19:20:41Z" finished-at="2014-09-14T19:20:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="201" started-at="2014-09-14T19:20:41Z" finished-at="2014-09-14T19:20:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="222" started-at="2014-09-14T19:20:41Z" finished-at="2014-09-14T19:20:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="175" started-at="2014-09-14T19:20:41Z" finished-at="2014-09-14T19:20:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="212" started-at="2014-09-14T19:20:41Z" finished-at="2014-09-14T19:20:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="138" started-at="2014-09-14T19:20:41Z" finished-at="2014-09-14T19:20:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="196" started-at="2014-09-14T19:20:41Z" finished-at="2014-09-14T19:20:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="166" started-at="2014-09-14T19:20:41Z" finished-at="2014-09-14T19:20:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="155" started-at="2014-09-14T19:20:41Z" finished-at="2014-09-14T19:20:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="186" started-at="2014-09-14T19:20:41Z" finished-at="2014-09-14T19:20:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="125" started-at="2014-09-14T19:20:41Z" finished-at="2014-09-14T19:20:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="192" started-at="2014-09-14T19:20:41Z" finished-at="2014-09-14T19:20:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="221" started-at="2014-09-14T19:20:41Z" finished-at="2014-09-14T19:20:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="209" started-at="2014-09-14T19:20:41Z" finished-at="2014-09-14T19:20:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="176" started-at="2014-09-14T19:20:41Z" finished-at="2014-09-14T19:20:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="159" started-at="2014-09-14T19:20:41Z" finished-at="2014-09-14T19:20:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="166" started-at="2014-09-14T19:20:41Z" finished-at="2014-09-14T19:20:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="173" started-at="2014-09-14T19:20:41Z" finished-at="2014-09-14T19:20:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="167" started-at="2014-09-14T19:20:41Z" finished-at="2014-09-14T19:20:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="188" started-at="2014-09-14T19:20:41Z" finished-at="2014-09-14T19:20:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="188" started-at="2014-09-14T19:20:41Z" finished-at="2014-09-14T19:20:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="254" started-at="2014-09-14T19:20:41Z" finished-at="2014-09-14T19:20:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="156" started-at="2014-09-14T19:20:41Z" finished-at="2014-09-14T19:20:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="231" started-at="2014-09-14T19:20:41Z" finished-at="2014-09-14T19:20:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="224" started-at="2014-09-14T19:20:41Z" finished-at="2014-09-14T19:20:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="178" started-at="2014-09-14T19:20:41Z" finished-at="2014-09-14T19:20:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="228" started-at="2014-09-14T19:20:41Z" finished-at="2014-09-14T19:20:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="163" started-at="2014-09-14T19:20:41Z" finished-at="2014-09-14T19:20:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="156" started-at="2014-09-14T19:20:41Z" finished-at="2014-09-14T19:20:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="187" started-at="2014-09-14T19:20:41Z" finished-at="2014-09-14T19:20:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="193" started-at="2014-09-14T19:20:41Z" finished-at="2014-09-14T19:20:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="171" started-at="2014-09-14T19:20:41Z" finished-at="2014-09-14T19:20:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="208" started-at="2014-09-14T19:20:41Z" finished-at="2014-09-14T19:20:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="227" started-at="2014-09-14T19:20:41Z" finished-at="2014-09-14T19:20:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="191" started-at="2014-09-14T19:20:41Z" finished-at="2014-09-14T19:20:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="146" started-at="2014-09-14T19:20:41Z" finished-at="2014-09-14T19:20:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="240" started-at="2014-09-14T19:20:41Z" finished-at="2014-09-14T19:20:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="184" started-at="2014-09-14T19:20:41Z" finished-at="2014-09-14T19:20:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="176" started-at="2014-09-14T19:20:41Z" finished-at="2014-09-14T19:20:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="177" started-at="2014-09-14T19:20:41Z" finished-at="2014-09-14T19:20:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="124" started-at="2014-09-14T19:20:41Z" finished-at="2014-09-14T19:20:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="341" started-at="2014-09-14T19:20:41Z" finished-at="2014-09-14T19:20:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="140" started-at="2014-09-14T19:20:41Z" finished-at="2014-09-14T19:20:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="152" started-at="2014-09-14T19:20:41Z" finished-at="2014-09-14T19:20:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="147" started-at="2014-09-14T19:20:41Z" finished-at="2014-09-14T19:20:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="136" started-at="2014-09-14T19:20:41Z" finished-at="2014-09-14T19:20:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="151" started-at="2014-09-14T19:20:41Z" finished-at="2014-09-14T19:20:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="243" started-at="2014-09-14T19:20:41Z" finished-at="2014-09-14T19:20:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="174" started-at="2014-09-14T19:20:41Z" finished-at="2014-09-14T19:20:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="195" started-at="2014-09-14T19:20:41Z" finished-at="2014-09-14T19:20:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="144" started-at="2014-09-14T19:20:42Z" finished-at="2014-09-14T19:20:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="194" started-at="2014-09-14T19:20:42Z" finished-at="2014-09-14T19:20:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="207" started-at="2014-09-14T19:20:42Z" finished-at="2014-09-14T19:20:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="191" started-at="2014-09-14T19:20:42Z" finished-at="2014-09-14T19:20:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="180" started-at="2014-09-14T19:20:42Z" finished-at="2014-09-14T19:20:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="190" started-at="2014-09-14T19:20:42Z" finished-at="2014-09-14T19:20:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="162" started-at="2014-09-14T19:20:42Z" finished-at="2014-09-14T19:20:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="171" started-at="2014-09-14T19:20:42Z" finished-at="2014-09-14T19:20:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="171" started-at="2014-09-14T19:20:42Z" finished-at="2014-09-14T19:20:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="166" started-at="2014-09-14T19:20:42Z" finished-at="2014-09-14T19:20:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="205" started-at="2014-09-14T19:20:42Z" finished-at="2014-09-14T19:20:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="248" started-at="2014-09-14T19:20:42Z" finished-at="2014-09-14T19:20:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="181" started-at="2014-09-14T19:20:42Z" finished-at="2014-09-14T19:20:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="229" started-at="2014-09-14T19:20:42Z" finished-at="2014-09-14T19:20:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="197" started-at="2014-09-14T19:20:42Z" finished-at="2014-09-14T19:20:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="141" started-at="2014-09-14T19:20:42Z" finished-at="2014-09-14T19:20:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="170" started-at="2014-09-14T19:20:42Z" finished-at="2014-09-14T19:20:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="162" started-at="2014-09-14T19:20:42Z" finished-at="2014-09-14T19:20:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="207" started-at="2014-09-14T19:20:42Z" finished-at="2014-09-14T19:20:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="158" started-at="2014-09-14T19:20:42Z" finished-at="2014-09-14T19:20:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="133" started-at="2014-09-14T19:20:42Z" finished-at="2014-09-14T19:20:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="193" started-at="2014-09-14T19:20:42Z" finished-at="2014-09-14T19:20:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="217" started-at="2014-09-14T19:20:42Z" finished-at="2014-09-14T19:20:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="295" started-at="2014-09-14T19:20:42Z" finished-at="2014-09-14T19:20:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="220" started-at="2014-09-14T19:20:42Z" finished-at="2014-09-14T19:20:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="203" started-at="2014-09-14T19:20:42Z" finished-at="2014-09-14T19:20:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="322" started-at="2014-09-14T19:20:42Z" finished-at="2014-09-14T19:20:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="178" started-at="2014-09-14T19:20:42Z" finished-at="2014-09-14T19:20:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="179" started-at="2014-09-14T19:20:42Z" finished-at="2014-09-14T19:20:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="198" started-at="2014-09-14T19:20:42Z" finished-at="2014-09-14T19:20:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="245" started-at="2014-09-14T19:20:42Z" finished-at="2014-09-14T19:20:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="245" started-at="2014-09-14T19:20:42Z" finished-at="2014-09-14T19:20:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="158" started-at="2014-09-14T19:20:42Z" finished-at="2014-09-14T19:20:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="254" started-at="2014-09-14T19:20:42Z" finished-at="2014-09-14T19:20:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="156" started-at="2014-09-14T19:20:42Z" finished-at="2014-09-14T19:20:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="175" started-at="2014-09-14T19:20:42Z" finished-at="2014-09-14T19:20:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="159" started-at="2014-09-14T19:20:42Z" finished-at="2014-09-14T19:20:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="172" started-at="2014-09-14T19:20:42Z" finished-at="2014-09-14T19:20:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="304" started-at="2014-09-14T19:20:42Z" finished-at="2014-09-14T19:20:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="211" started-at="2014-09-14T19:20:42Z" finished-at="2014-09-14T19:20:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="145" started-at="2014-09-14T19:20:42Z" finished-at="2014-09-14T19:20:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="240" started-at="2014-09-14T19:20:42Z" finished-at="2014-09-14T19:20:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="142" started-at="2014-09-14T19:20:42Z" finished-at="2014-09-14T19:20:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="224" started-at="2014-09-14T19:20:42Z" finished-at="2014-09-14T19:20:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="237" started-at="2014-09-14T19:20:42Z" finished-at="2014-09-14T19:20:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="170" started-at="2014-09-14T19:20:42Z" finished-at="2014-09-14T19:20:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="143" started-at="2014-09-14T19:20:42Z" finished-at="2014-09-14T19:20:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="161" started-at="2014-09-14T19:20:42Z" finished-at="2014-09-14T19:20:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="132" started-at="2014-09-14T19:20:42Z" finished-at="2014-09-14T19:20:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="136" started-at="2014-09-14T19:20:43Z" finished-at="2014-09-14T19:20:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="203" started-at="2014-09-14T19:20:43Z" finished-at="2014-09-14T19:20:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="199" started-at="2014-09-14T19:20:43Z" finished-at="2014-09-14T19:20:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="170" started-at="2014-09-14T19:20:43Z" finished-at="2014-09-14T19:20:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="227" started-at="2014-09-14T19:20:43Z" finished-at="2014-09-14T19:20:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="223" started-at="2014-09-14T19:20:43Z" finished-at="2014-09-14T19:20:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="237" started-at="2014-09-14T19:20:43Z" finished-at="2014-09-14T19:20:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="157" started-at="2014-09-14T19:20:43Z" finished-at="2014-09-14T19:20:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="212" started-at="2014-09-14T19:20:43Z" finished-at="2014-09-14T19:20:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="121" started-at="2014-09-14T19:20:43Z" finished-at="2014-09-14T19:20:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="138" started-at="2014-09-14T19:20:43Z" finished-at="2014-09-14T19:20:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="153" started-at="2014-09-14T19:20:43Z" finished-at="2014-09-14T19:20:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="167" started-at="2014-09-14T19:20:43Z" finished-at="2014-09-14T19:20:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="156" started-at="2014-09-14T19:20:43Z" finished-at="2014-09-14T19:20:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="143" started-at="2014-09-14T19:20:43Z" finished-at="2014-09-14T19:20:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="213" started-at="2014-09-14T19:20:43Z" finished-at="2014-09-14T19:20:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="146" started-at="2014-09-14T19:20:43Z" finished-at="2014-09-14T19:20:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="451" started-at="2014-09-14T19:20:43Z" finished-at="2014-09-14T19:20:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="149" started-at="2014-09-14T19:20:43Z" finished-at="2014-09-14T19:20:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="161" started-at="2014-09-14T19:20:43Z" finished-at="2014-09-14T19:20:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="159" started-at="2014-09-14T19:20:43Z" finished-at="2014-09-14T19:20:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="167" started-at="2014-09-14T19:20:43Z" finished-at="2014-09-14T19:20:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="419" started-at="2014-09-14T19:20:43Z" finished-at="2014-09-14T19:20:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="157" started-at="2014-09-14T19:20:43Z" finished-at="2014-09-14T19:20:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="554" started-at="2014-09-14T19:20:43Z" finished-at="2014-09-14T19:20:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="287" started-at="2014-09-14T19:20:43Z" finished-at="2014-09-14T19:20:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="261" started-at="2014-09-14T19:20:43Z" finished-at="2014-09-14T19:20:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="249" started-at="2014-09-14T19:20:43Z" finished-at="2014-09-14T19:20:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="410" started-at="2014-09-14T19:20:43Z" finished-at="2014-09-14T19:20:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="310" started-at="2014-09-14T19:20:43Z" finished-at="2014-09-14T19:20:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="373" started-at="2014-09-14T19:20:43Z" finished-at="2014-09-14T19:20:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="345" started-at="2014-09-14T19:20:43Z" finished-at="2014-09-14T19:20:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="164" started-at="2014-09-14T19:20:43Z" finished-at="2014-09-14T19:20:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="138" started-at="2014-09-14T19:20:43Z" finished-at="2014-09-14T19:20:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="147" started-at="2014-09-14T19:20:43Z" finished-at="2014-09-14T19:20:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="157" started-at="2014-09-14T19:20:43Z" finished-at="2014-09-14T19:20:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="133" started-at="2014-09-14T19:20:43Z" finished-at="2014-09-14T19:20:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="151" started-at="2014-09-14T19:20:43Z" finished-at="2014-09-14T19:20:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="275" started-at="2014-09-14T19:20:43Z" finished-at="2014-09-14T19:20:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="135" started-at="2014-09-14T19:20:43Z" finished-at="2014-09-14T19:20:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="181" started-at="2014-09-14T19:20:43Z" finished-at="2014-09-14T19:20:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="200" started-at="2014-09-14T19:20:43Z" finished-at="2014-09-14T19:20:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="145" started-at="2014-09-14T19:20:43Z" finished-at="2014-09-14T19:20:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="188" started-at="2014-09-14T19:20:43Z" finished-at="2014-09-14T19:20:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="164" started-at="2014-09-14T19:20:43Z" finished-at="2014-09-14T19:20:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="205" started-at="2014-09-14T19:20:43Z" finished-at="2014-09-14T19:20:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="236" started-at="2014-09-14T19:20:43Z" finished-at="2014-09-14T19:20:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="255" started-at="2014-09-14T19:20:43Z" finished-at="2014-09-14T19:20:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="148" started-at="2014-09-14T19:20:44Z" finished-at="2014-09-14T19:20:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="135" started-at="2014-09-14T19:20:44Z" finished-at="2014-09-14T19:20:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="257" started-at="2014-09-14T19:20:44Z" finished-at="2014-09-14T19:20:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="221" started-at="2014-09-14T19:20:44Z" finished-at="2014-09-14T19:20:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="144" started-at="2014-09-14T19:20:44Z" finished-at="2014-09-14T19:20:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="190" started-at="2014-09-14T19:20:44Z" finished-at="2014-09-14T19:20:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="113" started-at="2014-09-14T19:20:44Z" finished-at="2014-09-14T19:20:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="184" started-at="2014-09-14T19:20:44Z" finished-at="2014-09-14T19:20:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="215" started-at="2014-09-14T19:20:44Z" finished-at="2014-09-14T19:20:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="158" started-at="2014-09-14T19:20:44Z" finished-at="2014-09-14T19:20:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="164" started-at="2014-09-14T19:20:44Z" finished-at="2014-09-14T19:20:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="184" started-at="2014-09-14T19:20:44Z" finished-at="2014-09-14T19:20:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="195" started-at="2014-09-14T19:20:44Z" finished-at="2014-09-14T19:20:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="151" started-at="2014-09-14T19:20:44Z" finished-at="2014-09-14T19:20:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="132" started-at="2014-09-14T19:20:44Z" finished-at="2014-09-14T19:20:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="279" started-at="2014-09-14T19:20:44Z" finished-at="2014-09-14T19:20:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="176" started-at="2014-09-14T19:20:44Z" finished-at="2014-09-14T19:20:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="144" started-at="2014-09-14T19:20:44Z" finished-at="2014-09-14T19:20:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="239" started-at="2014-09-14T19:20:44Z" finished-at="2014-09-14T19:20:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="151" started-at="2014-09-14T19:20:44Z" finished-at="2014-09-14T19:20:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="180" started-at="2014-09-14T19:20:44Z" finished-at="2014-09-14T19:20:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="217" started-at="2014-09-14T19:20:44Z" finished-at="2014-09-14T19:20:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="160" started-at="2014-09-14T19:20:44Z" finished-at="2014-09-14T19:20:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="291" started-at="2014-09-14T19:20:44Z" finished-at="2014-09-14T19:20:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="274" started-at="2014-09-14T19:20:44Z" finished-at="2014-09-14T19:20:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="120" started-at="2014-09-14T19:20:44Z" finished-at="2014-09-14T19:20:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="132" started-at="2014-09-14T19:20:44Z" finished-at="2014-09-14T19:20:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="183" started-at="2014-09-14T19:20:44Z" finished-at="2014-09-14T19:20:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="204" started-at="2014-09-14T19:20:44Z" finished-at="2014-09-14T19:20:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="326" started-at="2014-09-14T19:20:44Z" finished-at="2014-09-14T19:20:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="199" started-at="2014-09-14T19:20:44Z" finished-at="2014-09-14T19:20:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="334" started-at="2014-09-14T19:20:44Z" finished-at="2014-09-14T19:20:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="159" started-at="2014-09-14T19:20:44Z" finished-at="2014-09-14T19:20:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="222" started-at="2014-09-14T19:20:44Z" finished-at="2014-09-14T19:20:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="199" started-at="2014-09-14T19:20:44Z" finished-at="2014-09-14T19:20:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="177" started-at="2014-09-14T19:20:44Z" finished-at="2014-09-14T19:20:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="133" started-at="2014-09-14T19:20:44Z" finished-at="2014-09-14T19:20:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="154" started-at="2014-09-14T19:20:44Z" finished-at="2014-09-14T19:20:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="201" started-at="2014-09-14T19:20:44Z" finished-at="2014-09-14T19:20:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="371" started-at="2014-09-14T19:20:44Z" finished-at="2014-09-14T19:20:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="119" started-at="2014-09-14T19:20:44Z" finished-at="2014-09-14T19:20:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="175" started-at="2014-09-14T19:20:44Z" finished-at="2014-09-14T19:20:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="168" started-at="2014-09-14T19:20:44Z" finished-at="2014-09-14T19:20:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="271" started-at="2014-09-14T19:20:44Z" finished-at="2014-09-14T19:20:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="251" started-at="2014-09-14T19:20:44Z" finished-at="2014-09-14T19:20:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="269" started-at="2014-09-14T19:20:44Z" finished-at="2014-09-14T19:20:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="219" started-at="2014-09-14T19:20:44Z" finished-at="2014-09-14T19:20:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="234" started-at="2014-09-14T19:20:44Z" finished-at="2014-09-14T19:20:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="264" started-at="2014-09-14T19:20:44Z" finished-at="2014-09-14T19:20:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="280" started-at="2014-09-14T19:20:44Z" finished-at="2014-09-14T19:20:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="362" started-at="2014-09-14T19:20:45Z" finished-at="2014-09-14T19:20:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="314" started-at="2014-09-14T19:20:45Z" finished-at="2014-09-14T19:20:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="163" started-at="2014-09-14T19:20:45Z" finished-at="2014-09-14T19:20:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="219" started-at="2014-09-14T19:20:45Z" finished-at="2014-09-14T19:20:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="153" started-at="2014-09-14T19:20:45Z" finished-at="2014-09-14T19:20:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="164" started-at="2014-09-14T19:20:45Z" finished-at="2014-09-14T19:20:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="118" started-at="2014-09-14T19:20:45Z" finished-at="2014-09-14T19:20:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="129" started-at="2014-09-14T19:20:45Z" finished-at="2014-09-14T19:20:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="194" started-at="2014-09-14T19:20:45Z" finished-at="2014-09-14T19:20:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="142" started-at="2014-09-14T19:20:45Z" finished-at="2014-09-14T19:20:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="208" started-at="2014-09-14T19:20:45Z" finished-at="2014-09-14T19:20:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="172" started-at="2014-09-14T19:20:45Z" finished-at="2014-09-14T19:20:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="192" started-at="2014-09-14T19:20:45Z" finished-at="2014-09-14T19:20:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="211" started-at="2014-09-14T19:20:45Z" finished-at="2014-09-14T19:20:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="236" started-at="2014-09-14T19:20:45Z" finished-at="2014-09-14T19:20:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="184" started-at="2014-09-14T19:20:45Z" finished-at="2014-09-14T19:20:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="170" started-at="2014-09-14T19:20:45Z" finished-at="2014-09-14T19:20:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="177" started-at="2014-09-14T19:20:45Z" finished-at="2014-09-14T19:20:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="129" started-at="2014-09-14T19:20:45Z" finished-at="2014-09-14T19:20:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="137" started-at="2014-09-14T19:20:45Z" finished-at="2014-09-14T19:20:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="300" started-at="2014-09-14T19:20:45Z" finished-at="2014-09-14T19:20:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="172" started-at="2014-09-14T19:20:45Z" finished-at="2014-09-14T19:20:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="151" started-at="2014-09-14T19:20:45Z" finished-at="2014-09-14T19:20:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="241" started-at="2014-09-14T19:20:45Z" finished-at="2014-09-14T19:20:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="214" started-at="2014-09-14T19:20:45Z" finished-at="2014-09-14T19:20:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="121" started-at="2014-09-14T19:20:45Z" finished-at="2014-09-14T19:20:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="149" started-at="2014-09-14T19:20:45Z" finished-at="2014-09-14T19:20:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="214" started-at="2014-09-14T19:20:45Z" finished-at="2014-09-14T19:20:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="198" started-at="2014-09-14T19:20:45Z" finished-at="2014-09-14T19:20:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="215" started-at="2014-09-14T19:20:45Z" finished-at="2014-09-14T19:20:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="202" started-at="2014-09-14T19:20:45Z" finished-at="2014-09-14T19:20:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="192" started-at="2014-09-14T19:20:45Z" finished-at="2014-09-14T19:20:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="294" started-at="2014-09-14T19:20:45Z" finished-at="2014-09-14T19:20:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="188" started-at="2014-09-14T19:20:45Z" finished-at="2014-09-14T19:20:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="269" started-at="2014-09-14T19:20:45Z" finished-at="2014-09-14T19:20:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="153" started-at="2014-09-14T19:20:45Z" finished-at="2014-09-14T19:20:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="157" started-at="2014-09-14T19:20:45Z" finished-at="2014-09-14T19:20:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="179" started-at="2014-09-14T19:20:45Z" finished-at="2014-09-14T19:20:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="172" started-at="2014-09-14T19:20:45Z" finished-at="2014-09-14T19:20:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="194" started-at="2014-09-14T19:20:45Z" finished-at="2014-09-14T19:20:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="157" started-at="2014-09-14T19:20:45Z" finished-at="2014-09-14T19:20:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="170" started-at="2014-09-14T19:20:45Z" finished-at="2014-09-14T19:20:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="160" started-at="2014-09-14T19:20:45Z" finished-at="2014-09-14T19:20:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="158" started-at="2014-09-14T19:20:45Z" finished-at="2014-09-14T19:20:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="227" started-at="2014-09-14T19:20:45Z" finished-at="2014-09-14T19:20:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="233" started-at="2014-09-14T19:20:45Z" finished-at="2014-09-14T19:20:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="161" started-at="2014-09-14T19:20:45Z" finished-at="2014-09-14T19:20:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="240" started-at="2014-09-14T19:20:45Z" finished-at="2014-09-14T19:20:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="244" started-at="2014-09-14T19:20:45Z" finished-at="2014-09-14T19:20:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="191" started-at="2014-09-14T19:20:45Z" finished-at="2014-09-14T19:20:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="201" started-at="2014-09-14T19:20:46Z" finished-at="2014-09-14T19:20:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="189" started-at="2014-09-14T19:20:46Z" finished-at="2014-09-14T19:20:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="161" started-at="2014-09-14T19:20:46Z" finished-at="2014-09-14T19:20:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="103" started-at="2014-09-14T19:20:46Z" finished-at="2014-09-14T19:20:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="158" started-at="2014-09-14T19:20:46Z" finished-at="2014-09-14T19:20:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="182" started-at="2014-09-14T19:20:46Z" finished-at="2014-09-14T19:20:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="212" started-at="2014-09-14T19:20:46Z" finished-at="2014-09-14T19:20:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="149" started-at="2014-09-14T19:20:46Z" finished-at="2014-09-14T19:20:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="133" started-at="2014-09-14T19:20:46Z" finished-at="2014-09-14T19:20:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="126" started-at="2014-09-14T19:20:46Z" finished-at="2014-09-14T19:20:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="207" started-at="2014-09-14T19:20:46Z" finished-at="2014-09-14T19:20:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="143" started-at="2014-09-14T19:20:46Z" finished-at="2014-09-14T19:20:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="205" started-at="2014-09-14T19:20:46Z" finished-at="2014-09-14T19:20:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="183" started-at="2014-09-14T19:20:46Z" finished-at="2014-09-14T19:20:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="232" started-at="2014-09-14T19:20:46Z" finished-at="2014-09-14T19:20:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="191" started-at="2014-09-14T19:20:46Z" finished-at="2014-09-14T19:20:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="147" started-at="2014-09-14T19:20:46Z" finished-at="2014-09-14T19:20:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="161" started-at="2014-09-14T19:20:46Z" finished-at="2014-09-14T19:20:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="190" started-at="2014-09-14T19:20:46Z" finished-at="2014-09-14T19:20:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="176" started-at="2014-09-14T19:20:46Z" finished-at="2014-09-14T19:20:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="210" started-at="2014-09-14T19:20:46Z" finished-at="2014-09-14T19:20:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="206" started-at="2014-09-14T19:20:46Z" finished-at="2014-09-14T19:20:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="142" started-at="2014-09-14T19:20:46Z" finished-at="2014-09-14T19:20:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="149" started-at="2014-09-14T19:20:46Z" finished-at="2014-09-14T19:20:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="176" started-at="2014-09-14T19:20:46Z" finished-at="2014-09-14T19:20:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="110" started-at="2014-09-14T19:20:46Z" finished-at="2014-09-14T19:20:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="505" started-at="2014-09-14T19:20:46Z" finished-at="2014-09-14T19:20:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="440" started-at="2014-09-14T19:20:46Z" finished-at="2014-09-14T19:20:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="458" started-at="2014-09-14T19:20:46Z" finished-at="2014-09-14T19:20:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="449" started-at="2014-09-14T19:20:46Z" finished-at="2014-09-14T19:20:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="452" started-at="2014-09-14T19:20:46Z" finished-at="2014-09-14T19:20:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="388" started-at="2014-09-14T19:20:46Z" finished-at="2014-09-14T19:20:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="508" started-at="2014-09-14T19:20:46Z" finished-at="2014-09-14T19:20:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="500" started-at="2014-09-14T19:20:46Z" finished-at="2014-09-14T19:20:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="457" started-at="2014-09-14T19:20:46Z" finished-at="2014-09-14T19:20:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="433" started-at="2014-09-14T19:20:46Z" finished-at="2014-09-14T19:20:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="162" started-at="2014-09-14T19:20:46Z" finished-at="2014-09-14T19:20:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="275" started-at="2014-09-14T19:20:46Z" finished-at="2014-09-14T19:20:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="194" started-at="2014-09-14T19:20:46Z" finished-at="2014-09-14T19:20:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="150" started-at="2014-09-14T19:20:46Z" finished-at="2014-09-14T19:20:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="160" started-at="2014-09-14T19:20:46Z" finished-at="2014-09-14T19:20:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="494" started-at="2014-09-14T19:20:46Z" finished-at="2014-09-14T19:20:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="162" started-at="2014-09-14T19:20:47Z" finished-at="2014-09-14T19:20:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="303" started-at="2014-09-14T19:20:47Z" finished-at="2014-09-14T19:20:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="174" started-at="2014-09-14T19:20:47Z" finished-at="2014-09-14T19:20:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="206" started-at="2014-09-14T19:20:47Z" finished-at="2014-09-14T19:20:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="211" started-at="2014-09-14T19:20:47Z" finished-at="2014-09-14T19:20:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="202" started-at="2014-09-14T19:20:47Z" finished-at="2014-09-14T19:20:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="130" started-at="2014-09-14T19:20:47Z" finished-at="2014-09-14T19:20:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="138" started-at="2014-09-14T19:20:47Z" finished-at="2014-09-14T19:20:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="117" started-at="2014-09-14T19:20:47Z" finished-at="2014-09-14T19:20:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="162" started-at="2014-09-14T19:20:47Z" finished-at="2014-09-14T19:20:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="167" started-at="2014-09-14T19:20:47Z" finished-at="2014-09-14T19:20:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="201" started-at="2014-09-14T19:20:47Z" finished-at="2014-09-14T19:20:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="160" started-at="2014-09-14T19:20:47Z" finished-at="2014-09-14T19:20:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="160" started-at="2014-09-14T19:20:47Z" finished-at="2014-09-14T19:20:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="164" started-at="2014-09-14T19:20:47Z" finished-at="2014-09-14T19:20:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="128" started-at="2014-09-14T19:20:47Z" finished-at="2014-09-14T19:20:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="163" started-at="2014-09-14T19:20:47Z" finished-at="2014-09-14T19:20:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="242" started-at="2014-09-14T19:20:47Z" finished-at="2014-09-14T19:20:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="188" started-at="2014-09-14T19:20:47Z" finished-at="2014-09-14T19:20:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="242" started-at="2014-09-14T19:20:47Z" finished-at="2014-09-14T19:20:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="148" started-at="2014-09-14T19:20:47Z" finished-at="2014-09-14T19:20:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="170" started-at="2014-09-14T19:20:47Z" finished-at="2014-09-14T19:20:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="258" started-at="2014-09-14T19:20:47Z" finished-at="2014-09-14T19:20:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="186" started-at="2014-09-14T19:20:47Z" finished-at="2014-09-14T19:20:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="175" started-at="2014-09-14T19:20:47Z" finished-at="2014-09-14T19:20:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="190" started-at="2014-09-14T19:20:47Z" finished-at="2014-09-14T19:20:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="188" started-at="2014-09-14T19:20:47Z" finished-at="2014-09-14T19:20:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="202" started-at="2014-09-14T19:20:47Z" finished-at="2014-09-14T19:20:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="150" started-at="2014-09-14T19:20:47Z" finished-at="2014-09-14T19:20:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="171" started-at="2014-09-14T19:20:47Z" finished-at="2014-09-14T19:20:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="194" started-at="2014-09-14T19:20:47Z" finished-at="2014-09-14T19:20:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="342" started-at="2014-09-14T19:20:47Z" finished-at="2014-09-14T19:20:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="271" started-at="2014-09-14T19:20:47Z" finished-at="2014-09-14T19:20:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="182" started-at="2014-09-14T19:20:47Z" finished-at="2014-09-14T19:20:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="165" started-at="2014-09-14T19:20:47Z" finished-at="2014-09-14T19:20:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="134" started-at="2014-09-14T19:20:47Z" finished-at="2014-09-14T19:20:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="161" started-at="2014-09-14T19:20:47Z" finished-at="2014-09-14T19:20:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="212" started-at="2014-09-14T19:20:47Z" finished-at="2014-09-14T19:20:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="263" started-at="2014-09-14T19:20:47Z" finished-at="2014-09-14T19:20:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="267" started-at="2014-09-14T19:20:47Z" finished-at="2014-09-14T19:20:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="239" started-at="2014-09-14T19:20:47Z" finished-at="2014-09-14T19:20:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="186" started-at="2014-09-14T19:20:47Z" finished-at="2014-09-14T19:20:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="278" started-at="2014-09-14T19:20:47Z" finished-at="2014-09-14T19:20:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="331" started-at="2014-09-14T19:20:47Z" finished-at="2014-09-14T19:20:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="219" started-at="2014-09-14T19:20:47Z" finished-at="2014-09-14T19:20:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="416" started-at="2014-09-14T19:20:47Z" finished-at="2014-09-14T19:20:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="354" started-at="2014-09-14T19:20:47Z" finished-at="2014-09-14T19:20:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="181" started-at="2014-09-14T19:20:48Z" finished-at="2014-09-14T19:20:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="211" started-at="2014-09-14T19:20:48Z" finished-at="2014-09-14T19:20:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="146" started-at="2014-09-14T19:20:48Z" finished-at="2014-09-14T19:20:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="172" started-at="2014-09-14T19:20:48Z" finished-at="2014-09-14T19:20:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="198" started-at="2014-09-14T19:20:48Z" finished-at="2014-09-14T19:20:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="194" started-at="2014-09-14T19:20:48Z" finished-at="2014-09-14T19:20:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="235" started-at="2014-09-14T19:20:48Z" finished-at="2014-09-14T19:20:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="214" started-at="2014-09-14T19:20:48Z" finished-at="2014-09-14T19:20:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="238" started-at="2014-09-14T19:20:48Z" finished-at="2014-09-14T19:20:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="244" started-at="2014-09-14T19:20:48Z" finished-at="2014-09-14T19:20:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="320" started-at="2014-09-14T19:20:48Z" finished-at="2014-09-14T19:20:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="180" started-at="2014-09-14T19:20:48Z" finished-at="2014-09-14T19:20:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="231" started-at="2014-09-14T19:20:48Z" finished-at="2014-09-14T19:20:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="296" started-at="2014-09-14T19:20:48Z" finished-at="2014-09-14T19:20:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="249" started-at="2014-09-14T19:20:48Z" finished-at="2014-09-14T19:20:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="211" started-at="2014-09-14T19:20:48Z" finished-at="2014-09-14T19:20:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="178" started-at="2014-09-14T19:20:48Z" finished-at="2014-09-14T19:20:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="115" started-at="2014-09-14T19:20:48Z" finished-at="2014-09-14T19:20:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="164" started-at="2014-09-14T19:20:48Z" finished-at="2014-09-14T19:20:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="192" started-at="2014-09-14T19:20:48Z" finished-at="2014-09-14T19:20:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="161" started-at="2014-09-14T19:20:48Z" finished-at="2014-09-14T19:20:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="203" started-at="2014-09-14T19:20:48Z" finished-at="2014-09-14T19:20:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="157" started-at="2014-09-14T19:20:48Z" finished-at="2014-09-14T19:20:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="175" started-at="2014-09-14T19:20:48Z" finished-at="2014-09-14T19:20:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="247" started-at="2014-09-14T19:20:48Z" finished-at="2014-09-14T19:20:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="208" started-at="2014-09-14T19:20:48Z" finished-at="2014-09-14T19:20:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="265" started-at="2014-09-14T19:20:48Z" finished-at="2014-09-14T19:20:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="157" started-at="2014-09-14T19:20:48Z" finished-at="2014-09-14T19:20:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="206" started-at="2014-09-14T19:20:48Z" finished-at="2014-09-14T19:20:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="234" started-at="2014-09-14T19:20:48Z" finished-at="2014-09-14T19:20:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="209" started-at="2014-09-14T19:20:48Z" finished-at="2014-09-14T19:20:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="142" started-at="2014-09-14T19:20:48Z" finished-at="2014-09-14T19:20:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="148" started-at="2014-09-14T19:20:48Z" finished-at="2014-09-14T19:20:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="123" started-at="2014-09-14T19:20:48Z" finished-at="2014-09-14T19:20:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="123" started-at="2014-09-14T19:20:48Z" finished-at="2014-09-14T19:20:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="226" started-at="2014-09-14T19:20:48Z" finished-at="2014-09-14T19:20:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="248" started-at="2014-09-14T19:20:48Z" finished-at="2014-09-14T19:20:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="215" started-at="2014-09-14T19:20:48Z" finished-at="2014-09-14T19:20:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="276" started-at="2014-09-14T19:20:48Z" finished-at="2014-09-14T19:20:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="150" started-at="2014-09-14T19:20:48Z" finished-at="2014-09-14T19:20:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="338" started-at="2014-09-14T19:20:48Z" finished-at="2014-09-14T19:20:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="240" started-at="2014-09-14T19:20:48Z" finished-at="2014-09-14T19:20:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="205" started-at="2014-09-14T19:20:48Z" finished-at="2014-09-14T19:20:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="214" started-at="2014-09-14T19:20:48Z" finished-at="2014-09-14T19:20:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="248" started-at="2014-09-14T19:20:48Z" finished-at="2014-09-14T19:20:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="234" started-at="2014-09-14T19:20:49Z" finished-at="2014-09-14T19:20:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="175" started-at="2014-09-14T19:20:49Z" finished-at="2014-09-14T19:20:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="190" started-at="2014-09-14T19:20:49Z" finished-at="2014-09-14T19:20:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="232" started-at="2014-09-14T19:20:49Z" finished-at="2014-09-14T19:20:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="207" started-at="2014-09-14T19:20:49Z" finished-at="2014-09-14T19:20:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="135" started-at="2014-09-14T19:20:49Z" finished-at="2014-09-14T19:20:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="223" started-at="2014-09-14T19:20:49Z" finished-at="2014-09-14T19:20:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="156" started-at="2014-09-14T19:20:49Z" finished-at="2014-09-14T19:20:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="184" started-at="2014-09-14T19:20:49Z" finished-at="2014-09-14T19:20:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="184" started-at="2014-09-14T19:20:49Z" finished-at="2014-09-14T19:20:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="243" started-at="2014-09-14T19:20:49Z" finished-at="2014-09-14T19:20:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="218" started-at="2014-09-14T19:20:49Z" finished-at="2014-09-14T19:20:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="120" started-at="2014-09-14T19:20:49Z" finished-at="2014-09-14T19:20:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="105" started-at="2014-09-14T19:20:49Z" finished-at="2014-09-14T19:20:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="150" started-at="2014-09-14T19:20:49Z" finished-at="2014-09-14T19:20:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="132" started-at="2014-09-14T19:20:49Z" finished-at="2014-09-14T19:20:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="136" started-at="2014-09-14T19:20:49Z" finished-at="2014-09-14T19:20:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="161" started-at="2014-09-14T19:20:49Z" finished-at="2014-09-14T19:20:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="173" started-at="2014-09-14T19:20:49Z" finished-at="2014-09-14T19:20:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="131" started-at="2014-09-14T19:20:49Z" finished-at="2014-09-14T19:20:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="190" started-at="2014-09-14T19:20:49Z" finished-at="2014-09-14T19:20:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="170" started-at="2014-09-14T19:20:49Z" finished-at="2014-09-14T19:20:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="116" started-at="2014-09-14T19:20:49Z" finished-at="2014-09-14T19:20:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="144" started-at="2014-09-14T19:20:49Z" finished-at="2014-09-14T19:20:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="145" started-at="2014-09-14T19:20:49Z" finished-at="2014-09-14T19:20:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="138" started-at="2014-09-14T19:20:49Z" finished-at="2014-09-14T19:20:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="151" started-at="2014-09-14T19:20:49Z" finished-at="2014-09-14T19:20:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="128" started-at="2014-09-14T19:20:49Z" finished-at="2014-09-14T19:20:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="94" started-at="2014-09-14T19:20:49Z" finished-at="2014-09-14T19:20:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="97" started-at="2014-09-14T19:20:49Z" finished-at="2014-09-14T19:20:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="269" started-at="2014-09-14T19:20:49Z" finished-at="2014-09-14T19:20:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="112" started-at="2014-09-14T19:20:49Z" finished-at="2014-09-14T19:20:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="268" started-at="2014-09-14T19:20:49Z" finished-at="2014-09-14T19:20:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="138" started-at="2014-09-14T19:20:49Z" finished-at="2014-09-14T19:20:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="117" started-at="2014-09-14T19:20:49Z" finished-at="2014-09-14T19:20:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="92" started-at="2014-09-14T19:20:49Z" finished-at="2014-09-14T19:20:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="94" started-at="2014-09-14T19:20:49Z" finished-at="2014-09-14T19:20:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="154" started-at="2014-09-14T19:20:49Z" finished-at="2014-09-14T19:20:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="147" started-at="2014-09-14T19:20:49Z" finished-at="2014-09-14T19:20:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="142" started-at="2014-09-14T19:20:49Z" finished-at="2014-09-14T19:20:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="208" started-at="2014-09-14T19:20:49Z" finished-at="2014-09-14T19:20:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="183" started-at="2014-09-14T19:20:49Z" finished-at="2014-09-14T19:20:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="352" started-at="2014-09-14T19:20:49Z" finished-at="2014-09-14T19:20:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="316" started-at="2014-09-14T19:20:49Z" finished-at="2014-09-14T19:20:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="368" started-at="2014-09-14T19:20:49Z" finished-at="2014-09-14T19:20:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="230" started-at="2014-09-14T19:20:49Z" finished-at="2014-09-14T19:20:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="133" started-at="2014-09-14T19:20:49Z" finished-at="2014-09-14T19:20:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="240" started-at="2014-09-14T19:20:49Z" finished-at="2014-09-14T19:20:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="256" started-at="2014-09-14T19:20:49Z" finished-at="2014-09-14T19:20:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="216" started-at="2014-09-14T19:20:49Z" finished-at="2014-09-14T19:20:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="277" started-at="2014-09-14T19:20:49Z" finished-at="2014-09-14T19:20:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="172" started-at="2014-09-14T19:20:49Z" finished-at="2014-09-14T19:20:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="165" started-at="2014-09-14T19:20:50Z" finished-at="2014-09-14T19:20:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="138" started-at="2014-09-14T19:20:50Z" finished-at="2014-09-14T19:20:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="169" started-at="2014-09-14T19:20:50Z" finished-at="2014-09-14T19:20:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="222" started-at="2014-09-14T19:20:50Z" finished-at="2014-09-14T19:20:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="123" started-at="2014-09-14T19:20:50Z" finished-at="2014-09-14T19:20:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="147" started-at="2014-09-14T19:20:50Z" finished-at="2014-09-14T19:20:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="153" started-at="2014-09-14T19:20:50Z" finished-at="2014-09-14T19:20:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="195" started-at="2014-09-14T19:20:50Z" finished-at="2014-09-14T19:20:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="123" started-at="2014-09-14T19:20:50Z" finished-at="2014-09-14T19:20:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="177" started-at="2014-09-14T19:20:50Z" finished-at="2014-09-14T19:20:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="161" started-at="2014-09-14T19:20:50Z" finished-at="2014-09-14T19:20:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="206" started-at="2014-09-14T19:20:50Z" finished-at="2014-09-14T19:20:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="150" started-at="2014-09-14T19:20:50Z" finished-at="2014-09-14T19:20:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="183" started-at="2014-09-14T19:20:50Z" finished-at="2014-09-14T19:20:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="183" started-at="2014-09-14T19:20:50Z" finished-at="2014-09-14T19:20:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="176" started-at="2014-09-14T19:20:50Z" finished-at="2014-09-14T19:20:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="157" started-at="2014-09-14T19:20:50Z" finished-at="2014-09-14T19:20:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="115" started-at="2014-09-14T19:20:50Z" finished-at="2014-09-14T19:20:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="107" started-at="2014-09-14T19:20:50Z" finished-at="2014-09-14T19:20:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="258" started-at="2014-09-14T19:20:50Z" finished-at="2014-09-14T19:20:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="221" started-at="2014-09-14T19:20:50Z" finished-at="2014-09-14T19:20:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="145" started-at="2014-09-14T19:20:50Z" finished-at="2014-09-14T19:20:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="178" started-at="2014-09-14T19:20:50Z" finished-at="2014-09-14T19:20:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="289" started-at="2014-09-14T19:20:50Z" finished-at="2014-09-14T19:20:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="240" started-at="2014-09-14T19:20:50Z" finished-at="2014-09-14T19:20:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="167" started-at="2014-09-14T19:20:50Z" finished-at="2014-09-14T19:20:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="240" started-at="2014-09-14T19:20:50Z" finished-at="2014-09-14T19:20:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="283" started-at="2014-09-14T19:20:50Z" finished-at="2014-09-14T19:20:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="201" started-at="2014-09-14T19:20:50Z" finished-at="2014-09-14T19:20:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="252" started-at="2014-09-14T19:20:50Z" finished-at="2014-09-14T19:20:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="235" started-at="2014-09-14T19:20:50Z" finished-at="2014-09-14T19:20:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="177" started-at="2014-09-14T19:20:50Z" finished-at="2014-09-14T19:20:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="233" started-at="2014-09-14T19:20:50Z" finished-at="2014-09-14T19:20:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="192" started-at="2014-09-14T19:20:50Z" finished-at="2014-09-14T19:20:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="239" started-at="2014-09-14T19:20:50Z" finished-at="2014-09-14T19:20:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="274" started-at="2014-09-14T19:20:50Z" finished-at="2014-09-14T19:20:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="179" started-at="2014-09-14T19:20:50Z" finished-at="2014-09-14T19:20:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="235" started-at="2014-09-14T19:20:50Z" finished-at="2014-09-14T19:20:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="105" started-at="2014-09-14T19:20:50Z" finished-at="2014-09-14T19:20:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="141" started-at="2014-09-14T19:20:50Z" finished-at="2014-09-14T19:20:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="287" started-at="2014-09-14T19:20:50Z" finished-at="2014-09-14T19:20:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="220" started-at="2014-09-14T19:20:50Z" finished-at="2014-09-14T19:20:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="287" started-at="2014-09-14T19:20:50Z" finished-at="2014-09-14T19:20:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="332" started-at="2014-09-14T19:20:50Z" finished-at="2014-09-14T19:20:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="340" started-at="2014-09-14T19:20:50Z" finished-at="2014-09-14T19:20:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="212" started-at="2014-09-14T19:20:50Z" finished-at="2014-09-14T19:20:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="274" started-at="2014-09-14T19:20:50Z" finished-at="2014-09-14T19:20:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="257" started-at="2014-09-14T19:20:50Z" finished-at="2014-09-14T19:20:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="316" started-at="2014-09-14T19:20:50Z" finished-at="2014-09-14T19:20:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="215" started-at="2014-09-14T19:20:50Z" finished-at="2014-09-14T19:20:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="169" started-at="2014-09-14T19:20:51Z" finished-at="2014-09-14T19:20:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="253" started-at="2014-09-14T19:20:51Z" finished-at="2014-09-14T19:20:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="200" started-at="2014-09-14T19:20:51Z" finished-at="2014-09-14T19:20:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="185" started-at="2014-09-14T19:20:51Z" finished-at="2014-09-14T19:20:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="143" started-at="2014-09-14T19:20:51Z" finished-at="2014-09-14T19:20:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="168" started-at="2014-09-14T19:20:51Z" finished-at="2014-09-14T19:20:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="177" started-at="2014-09-14T19:20:51Z" finished-at="2014-09-14T19:20:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="158" started-at="2014-09-14T19:20:51Z" finished-at="2014-09-14T19:20:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="155" started-at="2014-09-14T19:20:51Z" finished-at="2014-09-14T19:20:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="145" started-at="2014-09-14T19:20:51Z" finished-at="2014-09-14T19:20:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="102" started-at="2014-09-14T19:20:51Z" finished-at="2014-09-14T19:20:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="100" started-at="2014-09-14T19:20:51Z" finished-at="2014-09-14T19:20:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="104" started-at="2014-09-14T19:20:51Z" finished-at="2014-09-14T19:20:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="84" started-at="2014-09-14T19:20:51Z" finished-at="2014-09-14T19:20:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="238" started-at="2014-09-14T19:20:51Z" finished-at="2014-09-14T19:20:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="167" started-at="2014-09-14T19:20:51Z" finished-at="2014-09-14T19:20:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="332" started-at="2014-09-14T19:20:51Z" finished-at="2014-09-14T19:20:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="203" started-at="2014-09-14T19:20:51Z" finished-at="2014-09-14T19:20:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="164" started-at="2014-09-14T19:20:51Z" finished-at="2014-09-14T19:20:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="326" started-at="2014-09-14T19:20:51Z" finished-at="2014-09-14T19:20:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="275" started-at="2014-09-14T19:20:51Z" finished-at="2014-09-14T19:20:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="175" started-at="2014-09-14T19:20:51Z" finished-at="2014-09-14T19:20:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="244" started-at="2014-09-14T19:20:51Z" finished-at="2014-09-14T19:20:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="183" started-at="2014-09-14T19:20:51Z" finished-at="2014-09-14T19:20:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="182" started-at="2014-09-14T19:20:51Z" finished-at="2014-09-14T19:20:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="141" started-at="2014-09-14T19:20:51Z" finished-at="2014-09-14T19:20:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="196" started-at="2014-09-14T19:20:51Z" finished-at="2014-09-14T19:20:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="185" started-at="2014-09-14T19:20:51Z" finished-at="2014-09-14T19:20:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="277" started-at="2014-09-14T19:20:51Z" finished-at="2014-09-14T19:20:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="141" started-at="2014-09-14T19:20:51Z" finished-at="2014-09-14T19:20:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="143" started-at="2014-09-14T19:20:51Z" finished-at="2014-09-14T19:20:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="215" started-at="2014-09-14T19:20:51Z" finished-at="2014-09-14T19:20:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="224" started-at="2014-09-14T19:20:51Z" finished-at="2014-09-14T19:20:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="200" started-at="2014-09-14T19:20:51Z" finished-at="2014-09-14T19:20:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="223" started-at="2014-09-14T19:20:51Z" finished-at="2014-09-14T19:20:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="177" started-at="2014-09-14T19:20:51Z" finished-at="2014-09-14T19:20:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="201" started-at="2014-09-14T19:20:51Z" finished-at="2014-09-14T19:20:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="169" started-at="2014-09-14T19:20:51Z" finished-at="2014-09-14T19:20:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="211" started-at="2014-09-14T19:20:52Z" finished-at="2014-09-14T19:20:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="208" started-at="2014-09-14T19:20:52Z" finished-at="2014-09-14T19:20:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="183" started-at="2014-09-14T19:20:52Z" finished-at="2014-09-14T19:20:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="269" started-at="2014-09-14T19:20:52Z" finished-at="2014-09-14T19:20:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="252" started-at="2014-09-14T19:20:52Z" finished-at="2014-09-14T19:20:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="131" started-at="2014-09-14T19:20:52Z" finished-at="2014-09-14T19:20:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="263" started-at="2014-09-14T19:20:52Z" finished-at="2014-09-14T19:20:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="282" started-at="2014-09-14T19:20:52Z" finished-at="2014-09-14T19:20:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="230" started-at="2014-09-14T19:20:52Z" finished-at="2014-09-14T19:20:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="205" started-at="2014-09-14T19:20:52Z" finished-at="2014-09-14T19:20:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="215" started-at="2014-09-14T19:20:52Z" finished-at="2014-09-14T19:20:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="222" started-at="2014-09-14T19:20:52Z" finished-at="2014-09-14T19:20:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="199" started-at="2014-09-14T19:20:52Z" finished-at="2014-09-14T19:20:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="194" started-at="2014-09-14T19:20:52Z" finished-at="2014-09-14T19:20:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="178" started-at="2014-09-14T19:20:52Z" finished-at="2014-09-14T19:20:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="273" started-at="2014-09-14T19:20:52Z" finished-at="2014-09-14T19:20:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="301" started-at="2014-09-14T19:20:52Z" finished-at="2014-09-14T19:20:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="185" started-at="2014-09-14T19:20:52Z" finished-at="2014-09-14T19:20:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="183" started-at="2014-09-14T19:20:52Z" finished-at="2014-09-14T19:20:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="150" started-at="2014-09-14T19:20:52Z" finished-at="2014-09-14T19:20:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="340" started-at="2014-09-14T19:20:52Z" finished-at="2014-09-14T19:20:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="197" started-at="2014-09-14T19:20:52Z" finished-at="2014-09-14T19:20:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="205" started-at="2014-09-14T19:20:52Z" finished-at="2014-09-14T19:20:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="139" started-at="2014-09-14T19:20:52Z" finished-at="2014-09-14T19:20:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="228" started-at="2014-09-14T19:20:52Z" finished-at="2014-09-14T19:20:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="161" started-at="2014-09-14T19:20:52Z" finished-at="2014-09-14T19:20:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="212" started-at="2014-09-14T19:20:52Z" finished-at="2014-09-14T19:20:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="161" started-at="2014-09-14T19:20:52Z" finished-at="2014-09-14T19:20:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="138" started-at="2014-09-14T19:20:52Z" finished-at="2014-09-14T19:20:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="272" started-at="2014-09-14T19:20:52Z" finished-at="2014-09-14T19:20:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="212" started-at="2014-09-14T19:20:52Z" finished-at="2014-09-14T19:20:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="122" started-at="2014-09-14T19:20:52Z" finished-at="2014-09-14T19:20:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="273" started-at="2014-09-14T19:20:52Z" finished-at="2014-09-14T19:20:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="149" started-at="2014-09-14T19:20:52Z" finished-at="2014-09-14T19:20:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="187" started-at="2014-09-14T19:20:52Z" finished-at="2014-09-14T19:20:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="198" started-at="2014-09-14T19:20:52Z" finished-at="2014-09-14T19:20:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="227" started-at="2014-09-14T19:20:52Z" finished-at="2014-09-14T19:20:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="158" started-at="2014-09-14T19:20:52Z" finished-at="2014-09-14T19:20:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="197" started-at="2014-09-14T19:20:52Z" finished-at="2014-09-14T19:20:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="206" started-at="2014-09-14T19:20:52Z" finished-at="2014-09-14T19:20:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="164" started-at="2014-09-14T19:20:52Z" finished-at="2014-09-14T19:20:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="150" started-at="2014-09-14T19:20:52Z" finished-at="2014-09-14T19:20:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="178" started-at="2014-09-14T19:20:52Z" finished-at="2014-09-14T19:20:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="201" started-at="2014-09-14T19:20:52Z" finished-at="2014-09-14T19:20:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="265" started-at="2014-09-14T19:20:52Z" finished-at="2014-09-14T19:20:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="192" started-at="2014-09-14T19:20:52Z" finished-at="2014-09-14T19:20:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="248" started-at="2014-09-14T19:20:52Z" finished-at="2014-09-14T19:20:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="194" started-at="2014-09-14T19:20:52Z" finished-at="2014-09-14T19:20:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="244" started-at="2014-09-14T19:20:53Z" finished-at="2014-09-14T19:20:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="197" started-at="2014-09-14T19:20:53Z" finished-at="2014-09-14T19:20:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="181" started-at="2014-09-14T19:20:53Z" finished-at="2014-09-14T19:20:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="162" started-at="2014-09-14T19:20:53Z" finished-at="2014-09-14T19:20:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="212" started-at="2014-09-14T19:20:53Z" finished-at="2014-09-14T19:20:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="288" started-at="2014-09-14T19:20:53Z" finished-at="2014-09-14T19:20:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="324" started-at="2014-09-14T19:20:53Z" finished-at="2014-09-14T19:20:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="261" started-at="2014-09-14T19:20:53Z" finished-at="2014-09-14T19:20:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="139" started-at="2014-09-14T19:20:53Z" finished-at="2014-09-14T19:20:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="290" started-at="2014-09-14T19:20:53Z" finished-at="2014-09-14T19:20:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="233" started-at="2014-09-14T19:20:53Z" finished-at="2014-09-14T19:20:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="163" started-at="2014-09-14T19:20:53Z" finished-at="2014-09-14T19:20:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="245" started-at="2014-09-14T19:20:53Z" finished-at="2014-09-14T19:20:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="232" started-at="2014-09-14T19:20:53Z" finished-at="2014-09-14T19:20:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="177" started-at="2014-09-14T19:20:53Z" finished-at="2014-09-14T19:20:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="262" started-at="2014-09-14T19:20:53Z" finished-at="2014-09-14T19:20:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="154" started-at="2014-09-14T19:20:53Z" finished-at="2014-09-14T19:20:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="269" started-at="2014-09-14T19:20:53Z" finished-at="2014-09-14T19:20:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="152" started-at="2014-09-14T19:20:53Z" finished-at="2014-09-14T19:20:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="121" started-at="2014-09-14T19:20:53Z" finished-at="2014-09-14T19:20:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="117" started-at="2014-09-14T19:20:53Z" finished-at="2014-09-14T19:20:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="153" started-at="2014-09-14T19:20:53Z" finished-at="2014-09-14T19:20:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="169" started-at="2014-09-14T19:20:53Z" finished-at="2014-09-14T19:20:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="155" started-at="2014-09-14T19:20:53Z" finished-at="2014-09-14T19:20:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="191" started-at="2014-09-14T19:20:53Z" finished-at="2014-09-14T19:20:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="152" started-at="2014-09-14T19:20:53Z" finished-at="2014-09-14T19:20:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="139" started-at="2014-09-14T19:20:53Z" finished-at="2014-09-14T19:20:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="246" started-at="2014-09-14T19:20:53Z" finished-at="2014-09-14T19:20:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="220" started-at="2014-09-14T19:20:53Z" finished-at="2014-09-14T19:20:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="112" started-at="2014-09-14T19:20:53Z" finished-at="2014-09-14T19:20:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="161" started-at="2014-09-14T19:20:53Z" finished-at="2014-09-14T19:20:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="155" started-at="2014-09-14T19:20:53Z" finished-at="2014-09-14T19:20:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="174" started-at="2014-09-14T19:20:53Z" finished-at="2014-09-14T19:20:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="256" started-at="2014-09-14T19:20:53Z" finished-at="2014-09-14T19:20:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="170" started-at="2014-09-14T19:20:53Z" finished-at="2014-09-14T19:20:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="145" started-at="2014-09-14T19:20:53Z" finished-at="2014-09-14T19:20:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="153" started-at="2014-09-14T19:20:53Z" finished-at="2014-09-14T19:20:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="227" started-at="2014-09-14T19:20:53Z" finished-at="2014-09-14T19:20:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="162" started-at="2014-09-14T19:20:53Z" finished-at="2014-09-14T19:20:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="150" started-at="2014-09-14T19:20:53Z" finished-at="2014-09-14T19:20:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="126" started-at="2014-09-14T19:20:53Z" finished-at="2014-09-14T19:20:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="94" started-at="2014-09-14T19:20:53Z" finished-at="2014-09-14T19:20:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="129" started-at="2014-09-14T19:20:53Z" finished-at="2014-09-14T19:20:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="352" started-at="2014-09-14T19:20:53Z" finished-at="2014-09-14T19:20:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="192" started-at="2014-09-14T19:20:53Z" finished-at="2014-09-14T19:20:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="198" started-at="2014-09-14T19:20:53Z" finished-at="2014-09-14T19:20:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="210" started-at="2014-09-14T19:20:53Z" finished-at="2014-09-14T19:20:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="168" started-at="2014-09-14T19:20:53Z" finished-at="2014-09-14T19:20:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="375" started-at="2014-09-14T19:20:53Z" finished-at="2014-09-14T19:20:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="427" started-at="2014-09-14T19:20:53Z" finished-at="2014-09-14T19:20:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="200" started-at="2014-09-14T19:20:53Z" finished-at="2014-09-14T19:20:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="218" started-at="2014-09-14T19:20:53Z" finished-at="2014-09-14T19:20:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="232" started-at="2014-09-14T19:20:53Z" finished-at="2014-09-14T19:20:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="149" started-at="2014-09-14T19:20:54Z" finished-at="2014-09-14T19:20:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="205" started-at="2014-09-14T19:20:54Z" finished-at="2014-09-14T19:20:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="257" started-at="2014-09-14T19:20:54Z" finished-at="2014-09-14T19:20:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="144" started-at="2014-09-14T19:20:54Z" finished-at="2014-09-14T19:20:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="119" started-at="2014-09-14T19:20:54Z" finished-at="2014-09-14T19:20:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="215" started-at="2014-09-14T19:20:54Z" finished-at="2014-09-14T19:20:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="339" started-at="2014-09-14T19:20:54Z" finished-at="2014-09-14T19:20:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="299" started-at="2014-09-14T19:20:54Z" finished-at="2014-09-14T19:20:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="246" started-at="2014-09-14T19:20:54Z" finished-at="2014-09-14T19:20:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="187" started-at="2014-09-14T19:20:54Z" finished-at="2014-09-14T19:20:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="132" started-at="2014-09-14T19:20:54Z" finished-at="2014-09-14T19:20:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="198" started-at="2014-09-14T19:20:54Z" finished-at="2014-09-14T19:20:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="268" started-at="2014-09-14T19:20:54Z" finished-at="2014-09-14T19:20:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="203" started-at="2014-09-14T19:20:54Z" finished-at="2014-09-14T19:20:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="187" started-at="2014-09-14T19:20:54Z" finished-at="2014-09-14T19:20:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="206" started-at="2014-09-14T19:20:54Z" finished-at="2014-09-14T19:20:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="216" started-at="2014-09-14T19:20:54Z" finished-at="2014-09-14T19:20:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="168" started-at="2014-09-14T19:20:54Z" finished-at="2014-09-14T19:20:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="215" started-at="2014-09-14T19:20:54Z" finished-at="2014-09-14T19:20:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="270" started-at="2014-09-14T19:20:54Z" finished-at="2014-09-14T19:20:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="136" started-at="2014-09-14T19:20:54Z" finished-at="2014-09-14T19:20:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="424" started-at="2014-09-14T19:20:54Z" finished-at="2014-09-14T19:20:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="242" started-at="2014-09-14T19:20:54Z" finished-at="2014-09-14T19:20:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="337" started-at="2014-09-14T19:20:54Z" finished-at="2014-09-14T19:20:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="269" started-at="2014-09-14T19:20:54Z" finished-at="2014-09-14T19:20:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="133" started-at="2014-09-14T19:20:54Z" finished-at="2014-09-14T19:20:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="203" started-at="2014-09-14T19:20:54Z" finished-at="2014-09-14T19:20:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="247" started-at="2014-09-14T19:20:54Z" finished-at="2014-09-14T19:20:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="258" started-at="2014-09-14T19:20:54Z" finished-at="2014-09-14T19:20:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="275" started-at="2014-09-14T19:20:54Z" finished-at="2014-09-14T19:20:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="180" started-at="2014-09-14T19:20:54Z" finished-at="2014-09-14T19:20:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="173" started-at="2014-09-14T19:20:54Z" finished-at="2014-09-14T19:20:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="224" started-at="2014-09-14T19:20:54Z" finished-at="2014-09-14T19:20:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="202" started-at="2014-09-14T19:20:54Z" finished-at="2014-09-14T19:20:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="235" started-at="2014-09-14T19:20:54Z" finished-at="2014-09-14T19:20:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="292" started-at="2014-09-14T19:20:54Z" finished-at="2014-09-14T19:20:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="134" started-at="2014-09-14T19:20:54Z" finished-at="2014-09-14T19:20:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="217" started-at="2014-09-14T19:20:54Z" finished-at="2014-09-14T19:20:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="197" started-at="2014-09-14T19:20:54Z" finished-at="2014-09-14T19:20:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="190" started-at="2014-09-14T19:20:54Z" finished-at="2014-09-14T19:20:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="209" started-at="2014-09-14T19:20:54Z" finished-at="2014-09-14T19:20:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="285" started-at="2014-09-14T19:20:55Z" finished-at="2014-09-14T19:20:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="224" started-at="2014-09-14T19:20:55Z" finished-at="2014-09-14T19:20:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="221" started-at="2014-09-14T19:20:55Z" finished-at="2014-09-14T19:20:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="212" started-at="2014-09-14T19:20:55Z" finished-at="2014-09-14T19:20:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="152" started-at="2014-09-14T19:20:55Z" finished-at="2014-09-14T19:20:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="311" started-at="2014-09-14T19:20:55Z" finished-at="2014-09-14T19:20:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="225" started-at="2014-09-14T19:20:55Z" finished-at="2014-09-14T19:20:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="166" started-at="2014-09-14T19:20:55Z" finished-at="2014-09-14T19:20:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="215" started-at="2014-09-14T19:20:55Z" finished-at="2014-09-14T19:20:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="190" started-at="2014-09-14T19:20:55Z" finished-at="2014-09-14T19:20:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="229" started-at="2014-09-14T19:20:55Z" finished-at="2014-09-14T19:20:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="291" started-at="2014-09-14T19:20:55Z" finished-at="2014-09-14T19:20:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="220" started-at="2014-09-14T19:20:55Z" finished-at="2014-09-14T19:20:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="280" started-at="2014-09-14T19:20:55Z" finished-at="2014-09-14T19:20:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="273" started-at="2014-09-14T19:20:55Z" finished-at="2014-09-14T19:20:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="199" started-at="2014-09-14T19:20:55Z" finished-at="2014-09-14T19:20:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="216" started-at="2014-09-14T19:20:55Z" finished-at="2014-09-14T19:20:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="240" started-at="2014-09-14T19:20:55Z" finished-at="2014-09-14T19:20:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="176" started-at="2014-09-14T19:20:55Z" finished-at="2014-09-14T19:20:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="197" started-at="2014-09-14T19:20:55Z" finished-at="2014-09-14T19:20:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="226" started-at="2014-09-14T19:20:55Z" finished-at="2014-09-14T19:20:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="252" started-at="2014-09-14T19:20:55Z" finished-at="2014-09-14T19:20:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="202" started-at="2014-09-14T19:20:55Z" finished-at="2014-09-14T19:20:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="314" started-at="2014-09-14T19:20:55Z" finished-at="2014-09-14T19:20:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="234" started-at="2014-09-14T19:20:55Z" finished-at="2014-09-14T19:20:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="258" started-at="2014-09-14T19:20:55Z" finished-at="2014-09-14T19:20:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="211" started-at="2014-09-14T19:20:55Z" finished-at="2014-09-14T19:20:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="242" started-at="2014-09-14T19:20:55Z" finished-at="2014-09-14T19:20:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="227" started-at="2014-09-14T19:20:55Z" finished-at="2014-09-14T19:20:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="173" started-at="2014-09-14T19:20:55Z" finished-at="2014-09-14T19:20:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="236" started-at="2014-09-14T19:20:55Z" finished-at="2014-09-14T19:20:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="203" started-at="2014-09-14T19:20:55Z" finished-at="2014-09-14T19:20:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="231" started-at="2014-09-14T19:20:55Z" finished-at="2014-09-14T19:20:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="143" started-at="2014-09-14T19:20:55Z" finished-at="2014-09-14T19:20:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="185" started-at="2014-09-14T19:20:55Z" finished-at="2014-09-14T19:20:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="215" started-at="2014-09-14T19:20:55Z" finished-at="2014-09-14T19:20:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="136" started-at="2014-09-14T19:20:55Z" finished-at="2014-09-14T19:20:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="206" started-at="2014-09-14T19:20:55Z" finished-at="2014-09-14T19:20:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="133" started-at="2014-09-14T19:20:55Z" finished-at="2014-09-14T19:20:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="321" started-at="2014-09-14T19:20:55Z" finished-at="2014-09-14T19:20:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="242" started-at="2014-09-14T19:20:55Z" finished-at="2014-09-14T19:20:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="178" started-at="2014-09-14T19:20:55Z" finished-at="2014-09-14T19:20:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="126" started-at="2014-09-14T19:20:55Z" finished-at="2014-09-14T19:20:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="156" started-at="2014-09-14T19:20:55Z" finished-at="2014-09-14T19:20:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="293" started-at="2014-09-14T19:20:55Z" finished-at="2014-09-14T19:20:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="149" started-at="2014-09-14T19:20:56Z" finished-at="2014-09-14T19:20:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="126" started-at="2014-09-14T19:20:56Z" finished-at="2014-09-14T19:20:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="115" started-at="2014-09-14T19:20:56Z" finished-at="2014-09-14T19:20:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="310" started-at="2014-09-14T19:20:56Z" finished-at="2014-09-14T19:20:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="184" started-at="2014-09-14T19:20:56Z" finished-at="2014-09-14T19:20:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="206" started-at="2014-09-14T19:20:56Z" finished-at="2014-09-14T19:20:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="169" started-at="2014-09-14T19:20:56Z" finished-at="2014-09-14T19:20:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="239" started-at="2014-09-14T19:20:56Z" finished-at="2014-09-14T19:20:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="137" started-at="2014-09-14T19:20:56Z" finished-at="2014-09-14T19:20:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="175" started-at="2014-09-14T19:20:56Z" finished-at="2014-09-14T19:20:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="195" started-at="2014-09-14T19:20:56Z" finished-at="2014-09-14T19:20:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="114" started-at="2014-09-14T19:20:56Z" finished-at="2014-09-14T19:20:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="173" started-at="2014-09-14T19:20:56Z" finished-at="2014-09-14T19:20:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="160" started-at="2014-09-14T19:20:56Z" finished-at="2014-09-14T19:20:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="168" started-at="2014-09-14T19:20:56Z" finished-at="2014-09-14T19:20:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="226" started-at="2014-09-14T19:20:56Z" finished-at="2014-09-14T19:20:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="176" started-at="2014-09-14T19:20:56Z" finished-at="2014-09-14T19:20:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="137" started-at="2014-09-14T19:20:56Z" finished-at="2014-09-14T19:20:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="172" started-at="2014-09-14T19:20:56Z" finished-at="2014-09-14T19:20:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="207" started-at="2014-09-14T19:20:56Z" finished-at="2014-09-14T19:20:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="158" started-at="2014-09-14T19:20:56Z" finished-at="2014-09-14T19:20:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="178" started-at="2014-09-14T19:20:56Z" finished-at="2014-09-14T19:20:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="140" started-at="2014-09-14T19:20:56Z" finished-at="2014-09-14T19:20:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="266" started-at="2014-09-14T19:20:56Z" finished-at="2014-09-14T19:20:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="234" started-at="2014-09-14T19:20:56Z" finished-at="2014-09-14T19:20:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="185" started-at="2014-09-14T19:20:56Z" finished-at="2014-09-14T19:20:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="283" started-at="2014-09-14T19:20:56Z" finished-at="2014-09-14T19:20:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="191" started-at="2014-09-14T19:20:56Z" finished-at="2014-09-14T19:20:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="250" started-at="2014-09-14T19:20:56Z" finished-at="2014-09-14T19:20:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="189" started-at="2014-09-14T19:20:56Z" finished-at="2014-09-14T19:20:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="165" started-at="2014-09-14T19:20:56Z" finished-at="2014-09-14T19:20:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="243" started-at="2014-09-14T19:20:56Z" finished-at="2014-09-14T19:20:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="202" started-at="2014-09-14T19:20:56Z" finished-at="2014-09-14T19:20:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="173" started-at="2014-09-14T19:20:56Z" finished-at="2014-09-14T19:20:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="146" started-at="2014-09-14T19:20:56Z" finished-at="2014-09-14T19:20:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="195" started-at="2014-09-14T19:20:56Z" finished-at="2014-09-14T19:20:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="189" started-at="2014-09-14T19:20:56Z" finished-at="2014-09-14T19:20:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="213" started-at="2014-09-14T19:20:56Z" finished-at="2014-09-14T19:20:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="190" started-at="2014-09-14T19:20:56Z" finished-at="2014-09-14T19:20:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="163" started-at="2014-09-14T19:20:56Z" finished-at="2014-09-14T19:20:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="218" started-at="2014-09-14T19:20:56Z" finished-at="2014-09-14T19:20:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="152" started-at="2014-09-14T19:20:56Z" finished-at="2014-09-14T19:20:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="124" started-at="2014-09-14T19:20:56Z" finished-at="2014-09-14T19:20:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="183" started-at="2014-09-14T19:20:56Z" finished-at="2014-09-14T19:20:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="231" started-at="2014-09-14T19:20:56Z" finished-at="2014-09-14T19:20:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="192" started-at="2014-09-14T19:20:56Z" finished-at="2014-09-14T19:20:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="173" started-at="2014-09-14T19:20:56Z" finished-at="2014-09-14T19:20:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="502" started-at="2014-09-14T19:20:56Z" finished-at="2014-09-14T19:20:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="133" started-at="2014-09-14T19:20:56Z" finished-at="2014-09-14T19:20:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="306" started-at="2014-09-14T19:20:56Z" finished-at="2014-09-14T19:20:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="135" started-at="2014-09-14T19:20:56Z" finished-at="2014-09-14T19:20:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="162" started-at="2014-09-14T19:20:56Z" finished-at="2014-09-14T19:20:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="430" started-at="2014-09-14T19:20:57Z" finished-at="2014-09-14T19:20:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="304" started-at="2014-09-14T19:20:57Z" finished-at="2014-09-14T19:20:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="299" started-at="2014-09-14T19:20:57Z" finished-at="2014-09-14T19:20:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="289" started-at="2014-09-14T19:20:57Z" finished-at="2014-09-14T19:20:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="362" started-at="2014-09-14T19:20:57Z" finished-at="2014-09-14T19:20:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="291" started-at="2014-09-14T19:20:57Z" finished-at="2014-09-14T19:20:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="314" started-at="2014-09-14T19:20:57Z" finished-at="2014-09-14T19:20:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="288" started-at="2014-09-14T19:20:57Z" finished-at="2014-09-14T19:20:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="207" started-at="2014-09-14T19:20:57Z" finished-at="2014-09-14T19:20:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="151" started-at="2014-09-14T19:20:57Z" finished-at="2014-09-14T19:20:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="277" started-at="2014-09-14T19:20:57Z" finished-at="2014-09-14T19:20:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="135" started-at="2014-09-14T19:20:57Z" finished-at="2014-09-14T19:20:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="104" started-at="2014-09-14T19:20:57Z" finished-at="2014-09-14T19:20:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="130" started-at="2014-09-14T19:20:57Z" finished-at="2014-09-14T19:20:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="215" started-at="2014-09-14T19:20:57Z" finished-at="2014-09-14T19:20:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="238" started-at="2014-09-14T19:20:57Z" finished-at="2014-09-14T19:20:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="261" started-at="2014-09-14T19:20:57Z" finished-at="2014-09-14T19:20:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="159" started-at="2014-09-14T19:20:57Z" finished-at="2014-09-14T19:20:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="358" started-at="2014-09-14T19:20:57Z" finished-at="2014-09-14T19:20:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="307" started-at="2014-09-14T19:20:57Z" finished-at="2014-09-14T19:20:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="218" started-at="2014-09-14T19:20:57Z" finished-at="2014-09-14T19:20:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="171" started-at="2014-09-14T19:20:57Z" finished-at="2014-09-14T19:20:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="317" started-at="2014-09-14T19:20:57Z" finished-at="2014-09-14T19:20:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="239" started-at="2014-09-14T19:20:57Z" finished-at="2014-09-14T19:20:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="164" started-at="2014-09-14T19:20:57Z" finished-at="2014-09-14T19:20:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="139" started-at="2014-09-14T19:20:57Z" finished-at="2014-09-14T19:20:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="164" started-at="2014-09-14T19:20:57Z" finished-at="2014-09-14T19:20:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="112" started-at="2014-09-14T19:20:57Z" finished-at="2014-09-14T19:20:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="211" started-at="2014-09-14T19:20:57Z" finished-at="2014-09-14T19:20:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="208" started-at="2014-09-14T19:20:57Z" finished-at="2014-09-14T19:20:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="204" started-at="2014-09-14T19:20:57Z" finished-at="2014-09-14T19:20:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="128" started-at="2014-09-14T19:20:57Z" finished-at="2014-09-14T19:20:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="160" started-at="2014-09-14T19:20:57Z" finished-at="2014-09-14T19:20:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="211" started-at="2014-09-14T19:20:57Z" finished-at="2014-09-14T19:20:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="152" started-at="2014-09-14T19:20:57Z" finished-at="2014-09-14T19:20:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="173" started-at="2014-09-14T19:20:57Z" finished-at="2014-09-14T19:20:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="221" started-at="2014-09-14T19:20:57Z" finished-at="2014-09-14T19:20:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="153" started-at="2014-09-14T19:20:57Z" finished-at="2014-09-14T19:20:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="140" started-at="2014-09-14T19:20:57Z" finished-at="2014-09-14T19:20:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="97" started-at="2014-09-14T19:20:57Z" finished-at="2014-09-14T19:20:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="153" started-at="2014-09-14T19:20:57Z" finished-at="2014-09-14T19:20:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="160" started-at="2014-09-14T19:20:57Z" finished-at="2014-09-14T19:20:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="193" started-at="2014-09-14T19:20:57Z" finished-at="2014-09-14T19:20:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="220" started-at="2014-09-14T19:20:57Z" finished-at="2014-09-14T19:20:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="347" started-at="2014-09-14T19:20:58Z" finished-at="2014-09-14T19:20:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="196" started-at="2014-09-14T19:20:58Z" finished-at="2014-09-14T19:20:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="192" started-at="2014-09-14T19:20:58Z" finished-at="2014-09-14T19:20:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="141" started-at="2014-09-14T19:20:58Z" finished-at="2014-09-14T19:20:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="137" started-at="2014-09-14T19:20:58Z" finished-at="2014-09-14T19:20:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="165" started-at="2014-09-14T19:20:58Z" finished-at="2014-09-14T19:20:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="166" started-at="2014-09-14T19:20:58Z" finished-at="2014-09-14T19:20:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="147" started-at="2014-09-14T19:20:58Z" finished-at="2014-09-14T19:20:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="228" started-at="2014-09-14T19:20:58Z" finished-at="2014-09-14T19:20:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="162" started-at="2014-09-14T19:20:58Z" finished-at="2014-09-14T19:20:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="274" started-at="2014-09-14T19:20:58Z" finished-at="2014-09-14T19:20:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="141" started-at="2014-09-14T19:20:58Z" finished-at="2014-09-14T19:20:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="224" started-at="2014-09-14T19:20:58Z" finished-at="2014-09-14T19:20:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="145" started-at="2014-09-14T19:20:58Z" finished-at="2014-09-14T19:20:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="180" started-at="2014-09-14T19:20:58Z" finished-at="2014-09-14T19:20:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="174" started-at="2014-09-14T19:20:58Z" finished-at="2014-09-14T19:20:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="141" started-at="2014-09-14T19:20:58Z" finished-at="2014-09-14T19:20:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="113" started-at="2014-09-14T19:20:58Z" finished-at="2014-09-14T19:20:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="235" started-at="2014-09-14T19:20:58Z" finished-at="2014-09-14T19:20:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="165" started-at="2014-09-14T19:20:58Z" finished-at="2014-09-14T19:20:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="213" started-at="2014-09-14T19:20:58Z" finished-at="2014-09-14T19:20:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="165" started-at="2014-09-14T19:20:58Z" finished-at="2014-09-14T19:20:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="124" started-at="2014-09-14T19:20:58Z" finished-at="2014-09-14T19:20:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="266" started-at="2014-09-14T19:20:58Z" finished-at="2014-09-14T19:20:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="217" started-at="2014-09-14T19:20:58Z" finished-at="2014-09-14T19:20:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="176" started-at="2014-09-14T19:20:58Z" finished-at="2014-09-14T19:20:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="239" started-at="2014-09-14T19:20:58Z" finished-at="2014-09-14T19:20:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="318" started-at="2014-09-14T19:20:58Z" finished-at="2014-09-14T19:20:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="257" started-at="2014-09-14T19:20:58Z" finished-at="2014-09-14T19:20:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="275" started-at="2014-09-14T19:20:58Z" finished-at="2014-09-14T19:20:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="210" started-at="2014-09-14T19:20:58Z" finished-at="2014-09-14T19:20:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="299" started-at="2014-09-14T19:20:58Z" finished-at="2014-09-14T19:20:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="252" started-at="2014-09-14T19:20:58Z" finished-at="2014-09-14T19:20:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="239" started-at="2014-09-14T19:20:58Z" finished-at="2014-09-14T19:20:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="301" started-at="2014-09-14T19:20:58Z" finished-at="2014-09-14T19:20:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="192" started-at="2014-09-14T19:20:58Z" finished-at="2014-09-14T19:20:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="212" started-at="2014-09-14T19:20:58Z" finished-at="2014-09-14T19:20:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="163" started-at="2014-09-14T19:20:58Z" finished-at="2014-09-14T19:20:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="341" started-at="2014-09-14T19:20:58Z" finished-at="2014-09-14T19:20:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="187" started-at="2014-09-14T19:20:58Z" finished-at="2014-09-14T19:20:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="171" started-at="2014-09-14T19:20:58Z" finished-at="2014-09-14T19:20:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="169" started-at="2014-09-14T19:20:58Z" finished-at="2014-09-14T19:20:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="130" started-at="2014-09-14T19:20:58Z" finished-at="2014-09-14T19:20:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="154" started-at="2014-09-14T19:20:58Z" finished-at="2014-09-14T19:20:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="437" started-at="2014-09-14T19:20:58Z" finished-at="2014-09-14T19:20:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="169" started-at="2014-09-14T19:20:58Z" finished-at="2014-09-14T19:20:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="185" started-at="2014-09-14T19:20:58Z" finished-at="2014-09-14T19:20:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="188" started-at="2014-09-14T19:20:58Z" finished-at="2014-09-14T19:20:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="185" started-at="2014-09-14T19:20:58Z" finished-at="2014-09-14T19:20:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="121" started-at="2014-09-14T19:20:58Z" finished-at="2014-09-14T19:20:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="107" started-at="2014-09-14T19:20:58Z" finished-at="2014-09-14T19:20:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="187" started-at="2014-09-14T19:20:59Z" finished-at="2014-09-14T19:20:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="143" started-at="2014-09-14T19:20:59Z" finished-at="2014-09-14T19:20:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="224" started-at="2014-09-14T19:20:59Z" finished-at="2014-09-14T19:20:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="134" started-at="2014-09-14T19:20:59Z" finished-at="2014-09-14T19:20:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="239" started-at="2014-09-14T19:20:59Z" finished-at="2014-09-14T19:20:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="138" started-at="2014-09-14T19:20:59Z" finished-at="2014-09-14T19:20:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="165" started-at="2014-09-14T19:20:59Z" finished-at="2014-09-14T19:20:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="128" started-at="2014-09-14T19:20:59Z" finished-at="2014-09-14T19:20:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="198" started-at="2014-09-14T19:20:59Z" finished-at="2014-09-14T19:20:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="130" started-at="2014-09-14T19:20:59Z" finished-at="2014-09-14T19:20:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="195" started-at="2014-09-14T19:20:59Z" finished-at="2014-09-14T19:20:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="144" started-at="2014-09-14T19:20:59Z" finished-at="2014-09-14T19:20:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="191" started-at="2014-09-14T19:20:59Z" finished-at="2014-09-14T19:20:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="215" started-at="2014-09-14T19:20:59Z" finished-at="2014-09-14T19:20:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="144" started-at="2014-09-14T19:20:59Z" finished-at="2014-09-14T19:20:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="160" started-at="2014-09-14T19:20:59Z" finished-at="2014-09-14T19:20:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="170" started-at="2014-09-14T19:20:59Z" finished-at="2014-09-14T19:20:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="168" started-at="2014-09-14T19:20:59Z" finished-at="2014-09-14T19:20:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="145" started-at="2014-09-14T19:20:59Z" finished-at="2014-09-14T19:20:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="223" started-at="2014-09-14T19:20:59Z" finished-at="2014-09-14T19:20:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="132" started-at="2014-09-14T19:20:59Z" finished-at="2014-09-14T19:20:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="227" started-at="2014-09-14T19:20:59Z" finished-at="2014-09-14T19:20:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="148" started-at="2014-09-14T19:20:59Z" finished-at="2014-09-14T19:20:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="132" started-at="2014-09-14T19:20:59Z" finished-at="2014-09-14T19:20:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="268" started-at="2014-09-14T19:20:59Z" finished-at="2014-09-14T19:20:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="196" started-at="2014-09-14T19:20:59Z" finished-at="2014-09-14T19:20:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="108" started-at="2014-09-14T19:20:59Z" finished-at="2014-09-14T19:20:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="187" started-at="2014-09-14T19:20:59Z" finished-at="2014-09-14T19:20:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="134" started-at="2014-09-14T19:20:59Z" finished-at="2014-09-14T19:20:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="147" started-at="2014-09-14T19:20:59Z" finished-at="2014-09-14T19:20:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="235" started-at="2014-09-14T19:20:59Z" finished-at="2014-09-14T19:20:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="247" started-at="2014-09-14T19:20:59Z" finished-at="2014-09-14T19:20:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="184" started-at="2014-09-14T19:20:59Z" finished-at="2014-09-14T19:20:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="279" started-at="2014-09-14T19:20:59Z" finished-at="2014-09-14T19:20:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="210" started-at="2014-09-14T19:20:59Z" finished-at="2014-09-14T19:20:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="254" started-at="2014-09-14T19:20:59Z" finished-at="2014-09-14T19:20:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="257" started-at="2014-09-14T19:20:59Z" finished-at="2014-09-14T19:20:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="170" started-at="2014-09-14T19:20:59Z" finished-at="2014-09-14T19:20:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="258" started-at="2014-09-14T19:20:59Z" finished-at="2014-09-14T19:20:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="264" started-at="2014-09-14T19:20:59Z" finished-at="2014-09-14T19:20:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="249" started-at="2014-09-14T19:20:59Z" finished-at="2014-09-14T19:21:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="156" started-at="2014-09-14T19:20:59Z" finished-at="2014-09-14T19:20:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="130" started-at="2014-09-14T19:20:59Z" finished-at="2014-09-14T19:20:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="232" started-at="2014-09-14T19:20:59Z" finished-at="2014-09-14T19:21:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="146" started-at="2014-09-14T19:20:59Z" finished-at="2014-09-14T19:20:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="163" started-at="2014-09-14T19:20:59Z" finished-at="2014-09-14T19:21:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="142" started-at="2014-09-14T19:20:59Z" finished-at="2014-09-14T19:21:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="133" started-at="2014-09-14T19:20:59Z" finished-at="2014-09-14T19:21:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="139" started-at="2014-09-14T19:20:59Z" finished-at="2014-09-14T19:21:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="209" started-at="2014-09-14T19:20:59Z" finished-at="2014-09-14T19:21:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="157" started-at="2014-09-14T19:20:59Z" finished-at="2014-09-14T19:21:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="206" started-at="2014-09-14T19:20:59Z" finished-at="2014-09-14T19:21:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="303" started-at="2014-09-14T19:20:59Z" finished-at="2014-09-14T19:21:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="131" started-at="2014-09-14T19:21:00Z" finished-at="2014-09-14T19:21:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="184" started-at="2014-09-14T19:21:00Z" finished-at="2014-09-14T19:21:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="140" started-at="2014-09-14T19:21:00Z" finished-at="2014-09-14T19:21:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="212" started-at="2014-09-14T19:21:00Z" finished-at="2014-09-14T19:21:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="159" started-at="2014-09-14T19:21:00Z" finished-at="2014-09-14T19:21:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="210" started-at="2014-09-14T19:21:00Z" finished-at="2014-09-14T19:21:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="141" started-at="2014-09-14T19:21:00Z" finished-at="2014-09-14T19:21:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="302" started-at="2014-09-14T19:21:00Z" finished-at="2014-09-14T19:21:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="114" started-at="2014-09-14T19:21:00Z" finished-at="2014-09-14T19:21:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="160" started-at="2014-09-14T19:21:00Z" finished-at="2014-09-14T19:21:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="181" started-at="2014-09-14T19:21:00Z" finished-at="2014-09-14T19:21:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="156" started-at="2014-09-14T19:21:00Z" finished-at="2014-09-14T19:21:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="171" started-at="2014-09-14T19:21:00Z" finished-at="2014-09-14T19:21:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="175" started-at="2014-09-14T19:21:00Z" finished-at="2014-09-14T19:21:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="191" started-at="2014-09-14T19:21:00Z" finished-at="2014-09-14T19:21:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="226" started-at="2014-09-14T19:21:00Z" finished-at="2014-09-14T19:21:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="136" started-at="2014-09-14T19:21:00Z" finished-at="2014-09-14T19:21:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="178" started-at="2014-09-14T19:21:00Z" finished-at="2014-09-14T19:21:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="159" started-at="2014-09-14T19:21:00Z" finished-at="2014-09-14T19:21:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="173" started-at="2014-09-14T19:21:00Z" finished-at="2014-09-14T19:21:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="197" started-at="2014-09-14T19:21:00Z" finished-at="2014-09-14T19:21:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="167" started-at="2014-09-14T19:21:00Z" finished-at="2014-09-14T19:21:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="223" started-at="2014-09-14T19:21:00Z" finished-at="2014-09-14T19:21:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="173" started-at="2014-09-14T19:21:00Z" finished-at="2014-09-14T19:21:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="275" started-at="2014-09-14T19:21:00Z" finished-at="2014-09-14T19:21:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="243" started-at="2014-09-14T19:21:00Z" finished-at="2014-09-14T19:21:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="144" started-at="2014-09-14T19:21:00Z" finished-at="2014-09-14T19:21:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="264" started-at="2014-09-14T19:21:00Z" finished-at="2014-09-14T19:21:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="272" started-at="2014-09-14T19:21:00Z" finished-at="2014-09-14T19:21:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="205" started-at="2014-09-14T19:21:00Z" finished-at="2014-09-14T19:21:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="198" started-at="2014-09-14T19:21:00Z" finished-at="2014-09-14T19:21:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="168" started-at="2014-09-14T19:21:00Z" finished-at="2014-09-14T19:21:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="187" started-at="2014-09-14T19:21:00Z" finished-at="2014-09-14T19:21:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="195" started-at="2014-09-14T19:21:00Z" finished-at="2014-09-14T19:21:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="217" started-at="2014-09-14T19:21:00Z" finished-at="2014-09-14T19:21:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="290" started-at="2014-09-14T19:21:00Z" finished-at="2014-09-14T19:21:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="332" started-at="2014-09-14T19:21:00Z" finished-at="2014-09-14T19:21:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="130" started-at="2014-09-14T19:21:00Z" finished-at="2014-09-14T19:21:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="260" started-at="2014-09-14T19:21:00Z" finished-at="2014-09-14T19:21:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="132" started-at="2014-09-14T19:21:00Z" finished-at="2014-09-14T19:21:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="292" started-at="2014-09-14T19:21:00Z" finished-at="2014-09-14T19:21:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="240" started-at="2014-09-14T19:21:00Z" finished-at="2014-09-14T19:21:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="116" started-at="2014-09-14T19:21:00Z" finished-at="2014-09-14T19:21:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="269" started-at="2014-09-14T19:21:00Z" finished-at="2014-09-14T19:21:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="240" started-at="2014-09-14T19:21:00Z" finished-at="2014-09-14T19:21:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="165" started-at="2014-09-14T19:21:00Z" finished-at="2014-09-14T19:21:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="201" started-at="2014-09-14T19:21:00Z" finished-at="2014-09-14T19:21:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="182" started-at="2014-09-14T19:21:00Z" finished-at="2014-09-14T19:21:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="142" started-at="2014-09-14T19:21:00Z" finished-at="2014-09-14T19:21:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="125" started-at="2014-09-14T19:21:01Z" finished-at="2014-09-14T19:21:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="217" started-at="2014-09-14T19:21:01Z" finished-at="2014-09-14T19:21:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="139" started-at="2014-09-14T19:21:01Z" finished-at="2014-09-14T19:21:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="197" started-at="2014-09-14T19:21:01Z" finished-at="2014-09-14T19:21:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="164" started-at="2014-09-14T19:21:01Z" finished-at="2014-09-14T19:21:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="137" started-at="2014-09-14T19:21:01Z" finished-at="2014-09-14T19:21:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="172" started-at="2014-09-14T19:21:01Z" finished-at="2014-09-14T19:21:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="275" started-at="2014-09-14T19:21:01Z" finished-at="2014-09-14T19:21:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="187" started-at="2014-09-14T19:21:01Z" finished-at="2014-09-14T19:21:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="180" started-at="2014-09-14T19:21:01Z" finished-at="2014-09-14T19:21:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="147" started-at="2014-09-14T19:21:01Z" finished-at="2014-09-14T19:21:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="189" started-at="2014-09-14T19:21:01Z" finished-at="2014-09-14T19:21:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="315" started-at="2014-09-14T19:21:01Z" finished-at="2014-09-14T19:21:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="163" started-at="2014-09-14T19:21:01Z" finished-at="2014-09-14T19:21:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="167" started-at="2014-09-14T19:21:01Z" finished-at="2014-09-14T19:21:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="143" started-at="2014-09-14T19:21:01Z" finished-at="2014-09-14T19:21:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="104" started-at="2014-09-14T19:21:01Z" finished-at="2014-09-14T19:21:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="137" started-at="2014-09-14T19:21:01Z" finished-at="2014-09-14T19:21:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="436" started-at="2014-09-14T19:21:01Z" finished-at="2014-09-14T19:21:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="178" started-at="2014-09-14T19:21:01Z" finished-at="2014-09-14T19:21:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="160" started-at="2014-09-14T19:21:01Z" finished-at="2014-09-14T19:21:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="196" started-at="2014-09-14T19:21:01Z" finished-at="2014-09-14T19:21:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="190" started-at="2014-09-14T19:21:01Z" finished-at="2014-09-14T19:21:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="127" started-at="2014-09-14T19:21:01Z" finished-at="2014-09-14T19:21:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="145" started-at="2014-09-14T19:21:01Z" finished-at="2014-09-14T19:21:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="167" started-at="2014-09-14T19:21:01Z" finished-at="2014-09-14T19:21:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="205" started-at="2014-09-14T19:21:01Z" finished-at="2014-09-14T19:21:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="229" started-at="2014-09-14T19:21:01Z" finished-at="2014-09-14T19:21:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="265" started-at="2014-09-14T19:21:01Z" finished-at="2014-09-14T19:21:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="196" started-at="2014-09-14T19:21:01Z" finished-at="2014-09-14T19:21:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="180" started-at="2014-09-14T19:21:01Z" finished-at="2014-09-14T19:21:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="175" started-at="2014-09-14T19:21:01Z" finished-at="2014-09-14T19:21:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="226" started-at="2014-09-14T19:21:01Z" finished-at="2014-09-14T19:21:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="306" started-at="2014-09-14T19:21:01Z" finished-at="2014-09-14T19:21:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="302" started-at="2014-09-14T19:21:01Z" finished-at="2014-09-14T19:21:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="238" started-at="2014-09-14T19:21:01Z" finished-at="2014-09-14T19:21:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="178" started-at="2014-09-14T19:21:01Z" finished-at="2014-09-14T19:21:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="195" started-at="2014-09-14T19:21:01Z" finished-at="2014-09-14T19:21:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="217" started-at="2014-09-14T19:21:01Z" finished-at="2014-09-14T19:21:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="230" started-at="2014-09-14T19:21:01Z" finished-at="2014-09-14T19:21:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="253" started-at="2014-09-14T19:21:01Z" finished-at="2014-09-14T19:21:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="249" started-at="2014-09-14T19:21:01Z" finished-at="2014-09-14T19:21:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="222" started-at="2014-09-14T19:21:01Z" finished-at="2014-09-14T19:21:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="237" started-at="2014-09-14T19:21:01Z" finished-at="2014-09-14T19:21:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="137" started-at="2014-09-14T19:21:01Z" finished-at="2014-09-14T19:21:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="165" started-at="2014-09-14T19:21:01Z" finished-at="2014-09-14T19:21:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="304" started-at="2014-09-14T19:21:01Z" finished-at="2014-09-14T19:21:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="126" started-at="2014-09-14T19:21:01Z" finished-at="2014-09-14T19:21:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="169" started-at="2014-09-14T19:21:01Z" finished-at="2014-09-14T19:21:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="386" started-at="2014-09-14T19:21:01Z" finished-at="2014-09-14T19:21:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="171" started-at="2014-09-14T19:21:01Z" finished-at="2014-09-14T19:21:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="161" started-at="2014-09-14T19:21:02Z" finished-at="2014-09-14T19:21:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="129" started-at="2014-09-14T19:21:02Z" finished-at="2014-09-14T19:21:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="149" started-at="2014-09-14T19:21:02Z" finished-at="2014-09-14T19:21:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="225" started-at="2014-09-14T19:21:02Z" finished-at="2014-09-14T19:21:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="201" started-at="2014-09-14T19:21:02Z" finished-at="2014-09-14T19:21:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="130" started-at="2014-09-14T19:21:02Z" finished-at="2014-09-14T19:21:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="278" started-at="2014-09-14T19:21:02Z" finished-at="2014-09-14T19:21:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="226" started-at="2014-09-14T19:21:02Z" finished-at="2014-09-14T19:21:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="192" started-at="2014-09-14T19:21:02Z" finished-at="2014-09-14T19:21:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="249" started-at="2014-09-14T19:21:02Z" finished-at="2014-09-14T19:21:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="188" started-at="2014-09-14T19:21:02Z" finished-at="2014-09-14T19:21:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="252" started-at="2014-09-14T19:21:02Z" finished-at="2014-09-14T19:21:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="273" started-at="2014-09-14T19:21:02Z" finished-at="2014-09-14T19:21:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="155" started-at="2014-09-14T19:21:02Z" finished-at="2014-09-14T19:21:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="264" started-at="2014-09-14T19:21:02Z" finished-at="2014-09-14T19:21:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="221" started-at="2014-09-14T19:21:02Z" finished-at="2014-09-14T19:21:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="232" started-at="2014-09-14T19:21:02Z" finished-at="2014-09-14T19:21:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="136" started-at="2014-09-14T19:21:02Z" finished-at="2014-09-14T19:21:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="154" started-at="2014-09-14T19:21:02Z" finished-at="2014-09-14T19:21:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="283" started-at="2014-09-14T19:21:02Z" finished-at="2014-09-14T19:21:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="193" started-at="2014-09-14T19:21:02Z" finished-at="2014-09-14T19:21:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="248" started-at="2014-09-14T19:21:02Z" finished-at="2014-09-14T19:21:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="270" started-at="2014-09-14T19:21:02Z" finished-at="2014-09-14T19:21:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="241" started-at="2014-09-14T19:21:02Z" finished-at="2014-09-14T19:21:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="183" started-at="2014-09-14T19:21:02Z" finished-at="2014-09-14T19:21:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="208" started-at="2014-09-14T19:21:02Z" finished-at="2014-09-14T19:21:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="176" started-at="2014-09-14T19:21:02Z" finished-at="2014-09-14T19:21:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="230" started-at="2014-09-14T19:21:02Z" finished-at="2014-09-14T19:21:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="154" started-at="2014-09-14T19:21:02Z" finished-at="2014-09-14T19:21:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="99" started-at="2014-09-14T19:21:02Z" finished-at="2014-09-14T19:21:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="170" started-at="2014-09-14T19:21:02Z" finished-at="2014-09-14T19:21:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="189" started-at="2014-09-14T19:21:02Z" finished-at="2014-09-14T19:21:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="233" started-at="2014-09-14T19:21:02Z" finished-at="2014-09-14T19:21:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="182" started-at="2014-09-14T19:21:02Z" finished-at="2014-09-14T19:21:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="233" started-at="2014-09-14T19:21:02Z" finished-at="2014-09-14T19:21:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="288" started-at="2014-09-14T19:21:02Z" finished-at="2014-09-14T19:21:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="257" started-at="2014-09-14T19:21:02Z" finished-at="2014-09-14T19:21:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="169" started-at="2014-09-14T19:21:02Z" finished-at="2014-09-14T19:21:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="204" started-at="2014-09-14T19:21:02Z" finished-at="2014-09-14T19:21:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="217" started-at="2014-09-14T19:21:02Z" finished-at="2014-09-14T19:21:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="199" started-at="2014-09-14T19:21:02Z" finished-at="2014-09-14T19:21:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="116" started-at="2014-09-14T19:21:02Z" finished-at="2014-09-14T19:21:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="227" started-at="2014-09-14T19:21:02Z" finished-at="2014-09-14T19:21:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="157" started-at="2014-09-14T19:21:02Z" finished-at="2014-09-14T19:21:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="156" started-at="2014-09-14T19:21:02Z" finished-at="2014-09-14T19:21:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="154" started-at="2014-09-14T19:21:02Z" finished-at="2014-09-14T19:21:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="334" started-at="2014-09-14T19:21:02Z" finished-at="2014-09-14T19:21:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="169" started-at="2014-09-14T19:21:02Z" finished-at="2014-09-14T19:21:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="251" started-at="2014-09-14T19:21:02Z" finished-at="2014-09-14T19:21:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="116" started-at="2014-09-14T19:21:03Z" finished-at="2014-09-14T19:21:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="137" started-at="2014-09-14T19:21:03Z" finished-at="2014-09-14T19:21:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="140" started-at="2014-09-14T19:21:03Z" finished-at="2014-09-14T19:21:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="136" started-at="2014-09-14T19:21:03Z" finished-at="2014-09-14T19:21:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="203" started-at="2014-09-14T19:21:03Z" finished-at="2014-09-14T19:21:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="136" started-at="2014-09-14T19:21:03Z" finished-at="2014-09-14T19:21:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="180" started-at="2014-09-14T19:21:03Z" finished-at="2014-09-14T19:21:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="251" started-at="2014-09-14T19:21:03Z" finished-at="2014-09-14T19:21:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="203" started-at="2014-09-14T19:21:03Z" finished-at="2014-09-14T19:21:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="179" started-at="2014-09-14T19:21:03Z" finished-at="2014-09-14T19:21:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="296" started-at="2014-09-14T19:21:03Z" finished-at="2014-09-14T19:21:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="392" started-at="2014-09-14T19:21:03Z" finished-at="2014-09-14T19:21:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="174" started-at="2014-09-14T19:21:03Z" finished-at="2014-09-14T19:21:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="208" started-at="2014-09-14T19:21:03Z" finished-at="2014-09-14T19:21:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="255" started-at="2014-09-14T19:21:03Z" finished-at="2014-09-14T19:21:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="109" started-at="2014-09-14T19:21:03Z" finished-at="2014-09-14T19:21:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="137" started-at="2014-09-14T19:21:03Z" finished-at="2014-09-14T19:21:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="108" started-at="2014-09-14T19:21:03Z" finished-at="2014-09-14T19:21:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="156" started-at="2014-09-14T19:21:03Z" finished-at="2014-09-14T19:21:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="141" started-at="2014-09-14T19:21:03Z" finished-at="2014-09-14T19:21:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="186" started-at="2014-09-14T19:21:03Z" finished-at="2014-09-14T19:21:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="135" started-at="2014-09-14T19:21:03Z" finished-at="2014-09-14T19:21:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="166" started-at="2014-09-14T19:21:03Z" finished-at="2014-09-14T19:21:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="224" started-at="2014-09-14T19:21:03Z" finished-at="2014-09-14T19:21:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="309" started-at="2014-09-14T19:21:03Z" finished-at="2014-09-14T19:21:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="221" started-at="2014-09-14T19:21:03Z" finished-at="2014-09-14T19:21:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="155" started-at="2014-09-14T19:21:03Z" finished-at="2014-09-14T19:21:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="195" started-at="2014-09-14T19:21:03Z" finished-at="2014-09-14T19:21:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="109" started-at="2014-09-14T19:21:03Z" finished-at="2014-09-14T19:21:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="221" started-at="2014-09-14T19:21:03Z" finished-at="2014-09-14T19:21:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="219" started-at="2014-09-14T19:21:03Z" finished-at="2014-09-14T19:21:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="181" started-at="2014-09-14T19:21:03Z" finished-at="2014-09-14T19:21:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="168" started-at="2014-09-14T19:21:03Z" finished-at="2014-09-14T19:21:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="195" started-at="2014-09-14T19:21:03Z" finished-at="2014-09-14T19:21:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="339" started-at="2014-09-14T19:21:03Z" finished-at="2014-09-14T19:21:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="163" started-at="2014-09-14T19:21:03Z" finished-at="2014-09-14T19:21:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="167" started-at="2014-09-14T19:21:03Z" finished-at="2014-09-14T19:21:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="232" started-at="2014-09-14T19:21:03Z" finished-at="2014-09-14T19:21:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="153" started-at="2014-09-14T19:21:03Z" finished-at="2014-09-14T19:21:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="185" started-at="2014-09-14T19:21:03Z" finished-at="2014-09-14T19:21:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="179" started-at="2014-09-14T19:21:03Z" finished-at="2014-09-14T19:21:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="167" started-at="2014-09-14T19:21:03Z" finished-at="2014-09-14T19:21:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="192" started-at="2014-09-14T19:21:03Z" finished-at="2014-09-14T19:21:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="464" started-at="2014-09-14T19:21:03Z" finished-at="2014-09-14T19:21:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="211" started-at="2014-09-14T19:21:03Z" finished-at="2014-09-14T19:21:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="330" started-at="2014-09-14T19:21:03Z" finished-at="2014-09-14T19:21:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="349" started-at="2014-09-14T19:21:03Z" finished-at="2014-09-14T19:21:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="263" started-at="2014-09-14T19:21:03Z" finished-at="2014-09-14T19:21:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="367" started-at="2014-09-14T19:21:03Z" finished-at="2014-09-14T19:21:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="284" started-at="2014-09-14T19:21:03Z" finished-at="2014-09-14T19:21:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="308" started-at="2014-09-14T19:21:03Z" finished-at="2014-09-14T19:21:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="218" started-at="2014-09-14T19:21:04Z" finished-at="2014-09-14T19:21:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="330" started-at="2014-09-14T19:21:04Z" finished-at="2014-09-14T19:21:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="186" started-at="2014-09-14T19:21:04Z" finished-at="2014-09-14T19:21:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="177" started-at="2014-09-14T19:21:04Z" finished-at="2014-09-14T19:21:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="250" started-at="2014-09-14T19:21:04Z" finished-at="2014-09-14T19:21:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="175" started-at="2014-09-14T19:21:04Z" finished-at="2014-09-14T19:21:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="181" started-at="2014-09-14T19:21:04Z" finished-at="2014-09-14T19:21:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="195" started-at="2014-09-14T19:21:04Z" finished-at="2014-09-14T19:21:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="226" started-at="2014-09-14T19:21:04Z" finished-at="2014-09-14T19:21:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="209" started-at="2014-09-14T19:21:04Z" finished-at="2014-09-14T19:21:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="201" started-at="2014-09-14T19:21:04Z" finished-at="2014-09-14T19:21:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="298" started-at="2014-09-14T19:21:04Z" finished-at="2014-09-14T19:21:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="209" started-at="2014-09-14T19:21:04Z" finished-at="2014-09-14T19:21:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="205" started-at="2014-09-14T19:21:04Z" finished-at="2014-09-14T19:21:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="173" started-at="2014-09-14T19:21:04Z" finished-at="2014-09-14T19:21:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="458" started-at="2014-09-14T19:21:04Z" finished-at="2014-09-14T19:21:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="245" started-at="2014-09-14T19:21:04Z" finished-at="2014-09-14T19:21:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="481" started-at="2014-09-14T19:21:04Z" finished-at="2014-09-14T19:21:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="127" started-at="2014-09-14T19:21:04Z" finished-at="2014-09-14T19:21:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="167" started-at="2014-09-14T19:21:04Z" finished-at="2014-09-14T19:21:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="129" started-at="2014-09-14T19:21:04Z" finished-at="2014-09-14T19:21:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="156" started-at="2014-09-14T19:21:04Z" finished-at="2014-09-14T19:21:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="217" started-at="2014-09-14T19:21:04Z" finished-at="2014-09-14T19:21:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="306" started-at="2014-09-14T19:21:04Z" finished-at="2014-09-14T19:21:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="334" started-at="2014-09-14T19:21:04Z" finished-at="2014-09-14T19:21:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="215" started-at="2014-09-14T19:21:04Z" finished-at="2014-09-14T19:21:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="263" started-at="2014-09-14T19:21:04Z" finished-at="2014-09-14T19:21:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="262" started-at="2014-09-14T19:21:04Z" finished-at="2014-09-14T19:21:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="369" started-at="2014-09-14T19:21:04Z" finished-at="2014-09-14T19:21:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="335" started-at="2014-09-14T19:21:04Z" finished-at="2014-09-14T19:21:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="253" started-at="2014-09-14T19:21:04Z" finished-at="2014-09-14T19:21:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="97" started-at="2014-09-14T19:21:04Z" finished-at="2014-09-14T19:21:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="174" started-at="2014-09-14T19:21:04Z" finished-at="2014-09-14T19:21:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="190" started-at="2014-09-14T19:21:04Z" finished-at="2014-09-14T19:21:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="164" started-at="2014-09-14T19:21:04Z" finished-at="2014-09-14T19:21:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="202" started-at="2014-09-14T19:21:04Z" finished-at="2014-09-14T19:21:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="156" started-at="2014-09-14T19:21:04Z" finished-at="2014-09-14T19:21:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="230" started-at="2014-09-14T19:21:04Z" finished-at="2014-09-14T19:21:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="176" started-at="2014-09-14T19:21:04Z" finished-at="2014-09-14T19:21:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="174" started-at="2014-09-14T19:21:05Z" finished-at="2014-09-14T19:21:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="149" started-at="2014-09-14T19:21:05Z" finished-at="2014-09-14T19:21:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="207" started-at="2014-09-14T19:21:05Z" finished-at="2014-09-14T19:21:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="155" started-at="2014-09-14T19:21:05Z" finished-at="2014-09-14T19:21:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="167" started-at="2014-09-14T19:21:05Z" finished-at="2014-09-14T19:21:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="373" started-at="2014-09-14T19:21:05Z" finished-at="2014-09-14T19:21:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="386" started-at="2014-09-14T19:21:05Z" finished-at="2014-09-14T19:21:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="182" started-at="2014-09-14T19:21:05Z" finished-at="2014-09-14T19:21:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="143" started-at="2014-09-14T19:21:05Z" finished-at="2014-09-14T19:21:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="188" started-at="2014-09-14T19:21:05Z" finished-at="2014-09-14T19:21:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="154" started-at="2014-09-14T19:21:05Z" finished-at="2014-09-14T19:21:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="158" started-at="2014-09-14T19:21:05Z" finished-at="2014-09-14T19:21:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="168" started-at="2014-09-14T19:21:05Z" finished-at="2014-09-14T19:21:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="170" started-at="2014-09-14T19:21:05Z" finished-at="2014-09-14T19:21:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="156" started-at="2014-09-14T19:21:05Z" finished-at="2014-09-14T19:21:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="118" started-at="2014-09-14T19:21:05Z" finished-at="2014-09-14T19:21:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="117" started-at="2014-09-14T19:21:05Z" finished-at="2014-09-14T19:21:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="254" started-at="2014-09-14T19:21:05Z" finished-at="2014-09-14T19:21:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="206" started-at="2014-09-14T19:21:05Z" finished-at="2014-09-14T19:21:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="174" started-at="2014-09-14T19:21:05Z" finished-at="2014-09-14T19:21:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="201" started-at="2014-09-14T19:21:05Z" finished-at="2014-09-14T19:21:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="179" started-at="2014-09-14T19:21:05Z" finished-at="2014-09-14T19:21:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="109" started-at="2014-09-14T19:21:05Z" finished-at="2014-09-14T19:21:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="208" started-at="2014-09-14T19:21:05Z" finished-at="2014-09-14T19:21:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="104" started-at="2014-09-14T19:21:05Z" finished-at="2014-09-14T19:21:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="272" started-at="2014-09-14T19:21:05Z" finished-at="2014-09-14T19:21:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="296" started-at="2014-09-14T19:21:05Z" finished-at="2014-09-14T19:21:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="171" started-at="2014-09-14T19:21:05Z" finished-at="2014-09-14T19:21:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="176" started-at="2014-09-14T19:21:05Z" finished-at="2014-09-14T19:21:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="221" started-at="2014-09-14T19:21:05Z" finished-at="2014-09-14T19:21:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="206" started-at="2014-09-14T19:21:05Z" finished-at="2014-09-14T19:21:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="102" started-at="2014-09-14T19:21:05Z" finished-at="2014-09-14T19:21:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="193" started-at="2014-09-14T19:21:05Z" finished-at="2014-09-14T19:21:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="122" started-at="2014-09-14T19:21:05Z" finished-at="2014-09-14T19:21:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="309" started-at="2014-09-14T19:21:05Z" finished-at="2014-09-14T19:21:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="192" started-at="2014-09-14T19:21:05Z" finished-at="2014-09-14T19:21:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="141" started-at="2014-09-14T19:21:05Z" finished-at="2014-09-14T19:21:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="142" started-at="2014-09-14T19:21:05Z" finished-at="2014-09-14T19:21:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="141" started-at="2014-09-14T19:21:05Z" finished-at="2014-09-14T19:21:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="160" started-at="2014-09-14T19:21:05Z" finished-at="2014-09-14T19:21:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="147" started-at="2014-09-14T19:21:05Z" finished-at="2014-09-14T19:21:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="235" started-at="2014-09-14T19:21:05Z" finished-at="2014-09-14T19:21:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="258" started-at="2014-09-14T19:21:05Z" finished-at="2014-09-14T19:21:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="213" started-at="2014-09-14T19:21:05Z" finished-at="2014-09-14T19:21:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="227" started-at="2014-09-14T19:21:05Z" finished-at="2014-09-14T19:21:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="308" started-at="2014-09-14T19:21:05Z" finished-at="2014-09-14T19:21:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="183" started-at="2014-09-14T19:21:05Z" finished-at="2014-09-14T19:21:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="203" started-at="2014-09-14T19:21:05Z" finished-at="2014-09-14T19:21:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="214" started-at="2014-09-14T19:21:05Z" finished-at="2014-09-14T19:21:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="168" started-at="2014-09-14T19:21:05Z" finished-at="2014-09-14T19:21:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="197" started-at="2014-09-14T19:21:05Z" finished-at="2014-09-14T19:21:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="258" started-at="2014-09-14T19:21:05Z" finished-at="2014-09-14T19:21:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="167" started-at="2014-09-14T19:21:06Z" finished-at="2014-09-14T19:21:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="179" started-at="2014-09-14T19:21:06Z" finished-at="2014-09-14T19:21:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="153" started-at="2014-09-14T19:21:06Z" finished-at="2014-09-14T19:21:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="167" started-at="2014-09-14T19:21:06Z" finished-at="2014-09-14T19:21:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="178" started-at="2014-09-14T19:21:06Z" finished-at="2014-09-14T19:21:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="165" started-at="2014-09-14T19:21:06Z" finished-at="2014-09-14T19:21:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="171" started-at="2014-09-14T19:21:06Z" finished-at="2014-09-14T19:21:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="313" started-at="2014-09-14T19:21:06Z" finished-at="2014-09-14T19:21:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="320" started-at="2014-09-14T19:21:06Z" finished-at="2014-09-14T19:21:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="259" started-at="2014-09-14T19:21:06Z" finished-at="2014-09-14T19:21:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="174" started-at="2014-09-14T19:21:06Z" finished-at="2014-09-14T19:21:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="169" started-at="2014-09-14T19:21:06Z" finished-at="2014-09-14T19:21:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="168" started-at="2014-09-14T19:21:06Z" finished-at="2014-09-14T19:21:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="135" started-at="2014-09-14T19:21:06Z" finished-at="2014-09-14T19:21:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="178" started-at="2014-09-14T19:21:06Z" finished-at="2014-09-14T19:21:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="232" started-at="2014-09-14T19:21:06Z" finished-at="2014-09-14T19:21:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="200" started-at="2014-09-14T19:21:06Z" finished-at="2014-09-14T19:21:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="228" started-at="2014-09-14T19:21:06Z" finished-at="2014-09-14T19:21:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="165" started-at="2014-09-14T19:21:06Z" finished-at="2014-09-14T19:21:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="134" started-at="2014-09-14T19:21:06Z" finished-at="2014-09-14T19:21:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="162" started-at="2014-09-14T19:21:06Z" finished-at="2014-09-14T19:21:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="144" started-at="2014-09-14T19:21:06Z" finished-at="2014-09-14T19:21:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="193" started-at="2014-09-14T19:21:06Z" finished-at="2014-09-14T19:21:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="105" started-at="2014-09-14T19:21:06Z" finished-at="2014-09-14T19:21:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="149" started-at="2014-09-14T19:21:06Z" finished-at="2014-09-14T19:21:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="360" started-at="2014-09-14T19:21:06Z" finished-at="2014-09-14T19:21:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="204" started-at="2014-09-14T19:21:06Z" finished-at="2014-09-14T19:21:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="202" started-at="2014-09-14T19:21:06Z" finished-at="2014-09-14T19:21:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="212" started-at="2014-09-14T19:21:06Z" finished-at="2014-09-14T19:21:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="179" started-at="2014-09-14T19:21:06Z" finished-at="2014-09-14T19:21:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="344" started-at="2014-09-14T19:21:06Z" finished-at="2014-09-14T19:21:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="244" started-at="2014-09-14T19:21:06Z" finished-at="2014-09-14T19:21:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="298" started-at="2014-09-14T19:21:06Z" finished-at="2014-09-14T19:21:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="224" started-at="2014-09-14T19:21:06Z" finished-at="2014-09-14T19:21:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="185" started-at="2014-09-14T19:21:06Z" finished-at="2014-09-14T19:21:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="171" started-at="2014-09-14T19:21:06Z" finished-at="2014-09-14T19:21:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="215" started-at="2014-09-14T19:21:06Z" finished-at="2014-09-14T19:21:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="185" started-at="2014-09-14T19:21:06Z" finished-at="2014-09-14T19:21:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="296" started-at="2014-09-14T19:21:06Z" finished-at="2014-09-14T19:21:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="213" started-at="2014-09-14T19:21:06Z" finished-at="2014-09-14T19:21:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="261" started-at="2014-09-14T19:21:06Z" finished-at="2014-09-14T19:21:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="248" started-at="2014-09-14T19:21:06Z" finished-at="2014-09-14T19:21:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="182" started-at="2014-09-14T19:21:06Z" finished-at="2014-09-14T19:21:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="213" started-at="2014-09-14T19:21:06Z" finished-at="2014-09-14T19:21:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="180" started-at="2014-09-14T19:21:06Z" finished-at="2014-09-14T19:21:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="216" started-at="2014-09-14T19:21:06Z" finished-at="2014-09-14T19:21:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="192" started-at="2014-09-14T19:21:06Z" finished-at="2014-09-14T19:21:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="196" started-at="2014-09-14T19:21:06Z" finished-at="2014-09-14T19:21:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="229" started-at="2014-09-14T19:21:07Z" finished-at="2014-09-14T19:21:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="121" started-at="2014-09-14T19:21:07Z" finished-at="2014-09-14T19:21:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="234" started-at="2014-09-14T19:21:07Z" finished-at="2014-09-14T19:21:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="358" started-at="2014-09-14T19:21:07Z" finished-at="2014-09-14T19:21:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="127" started-at="2014-09-14T19:21:07Z" finished-at="2014-09-14T19:21:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="305" started-at="2014-09-14T19:21:07Z" finished-at="2014-09-14T19:21:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="142" started-at="2014-09-14T19:21:07Z" finished-at="2014-09-14T19:21:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="128" started-at="2014-09-14T19:21:07Z" finished-at="2014-09-14T19:21:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="140" started-at="2014-09-14T19:21:07Z" finished-at="2014-09-14T19:21:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="212" started-at="2014-09-14T19:21:07Z" finished-at="2014-09-14T19:21:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="121" started-at="2014-09-14T19:21:07Z" finished-at="2014-09-14T19:21:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="153" started-at="2014-09-14T19:21:07Z" finished-at="2014-09-14T19:21:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="147" started-at="2014-09-14T19:21:07Z" finished-at="2014-09-14T19:21:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="175" started-at="2014-09-14T19:21:07Z" finished-at="2014-09-14T19:21:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="314" started-at="2014-09-14T19:21:07Z" finished-at="2014-09-14T19:21:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="188" started-at="2014-09-14T19:21:07Z" finished-at="2014-09-14T19:21:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="189" started-at="2014-09-14T19:21:07Z" finished-at="2014-09-14T19:21:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="272" started-at="2014-09-14T19:21:07Z" finished-at="2014-09-14T19:21:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="168" started-at="2014-09-14T19:21:07Z" finished-at="2014-09-14T19:21:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="177" started-at="2014-09-14T19:21:07Z" finished-at="2014-09-14T19:21:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="126" started-at="2014-09-14T19:21:07Z" finished-at="2014-09-14T19:21:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="142" started-at="2014-09-14T19:21:07Z" finished-at="2014-09-14T19:21:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="208" started-at="2014-09-14T19:21:07Z" finished-at="2014-09-14T19:21:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="455" started-at="2014-09-14T19:21:07Z" finished-at="2014-09-14T19:21:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="209" started-at="2014-09-14T19:21:07Z" finished-at="2014-09-14T19:21:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="132" started-at="2014-09-14T19:21:07Z" finished-at="2014-09-14T19:21:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="175" started-at="2014-09-14T19:21:07Z" finished-at="2014-09-14T19:21:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="246" started-at="2014-09-14T19:21:07Z" finished-at="2014-09-14T19:21:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="150" started-at="2014-09-14T19:21:07Z" finished-at="2014-09-14T19:21:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="107" started-at="2014-09-14T19:21:07Z" finished-at="2014-09-14T19:21:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="184" started-at="2014-09-14T19:21:07Z" finished-at="2014-09-14T19:21:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="152" started-at="2014-09-14T19:21:07Z" finished-at="2014-09-14T19:21:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="174" started-at="2014-09-14T19:21:07Z" finished-at="2014-09-14T19:21:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="177" started-at="2014-09-14T19:21:07Z" finished-at="2014-09-14T19:21:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="230" started-at="2014-09-14T19:21:07Z" finished-at="2014-09-14T19:21:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="379" started-at="2014-09-14T19:21:07Z" finished-at="2014-09-14T19:21:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="171" started-at="2014-09-14T19:21:07Z" finished-at="2014-09-14T19:21:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="147" started-at="2014-09-14T19:21:07Z" finished-at="2014-09-14T19:21:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="137" started-at="2014-09-14T19:21:07Z" finished-at="2014-09-14T19:21:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="291" started-at="2014-09-14T19:21:07Z" finished-at="2014-09-14T19:21:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="265" started-at="2014-09-14T19:21:07Z" finished-at="2014-09-14T19:21:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="138" started-at="2014-09-14T19:21:07Z" finished-at="2014-09-14T19:21:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="303" started-at="2014-09-14T19:21:07Z" finished-at="2014-09-14T19:21:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="104" started-at="2014-09-14T19:21:07Z" finished-at="2014-09-14T19:21:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="341" started-at="2014-09-14T19:21:07Z" finished-at="2014-09-14T19:21:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="179" started-at="2014-09-14T19:21:07Z" finished-at="2014-09-14T19:21:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="134" started-at="2014-09-14T19:21:07Z" finished-at="2014-09-14T19:21:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="181" started-at="2014-09-14T19:21:07Z" finished-at="2014-09-14T19:21:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="167" started-at="2014-09-14T19:21:07Z" finished-at="2014-09-14T19:21:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="158" started-at="2014-09-14T19:21:07Z" finished-at="2014-09-14T19:21:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="212" started-at="2014-09-14T19:21:08Z" finished-at="2014-09-14T19:21:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="188" started-at="2014-09-14T19:21:08Z" finished-at="2014-09-14T19:21:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="222" started-at="2014-09-14T19:21:08Z" finished-at="2014-09-14T19:21:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="193" started-at="2014-09-14T19:21:08Z" finished-at="2014-09-14T19:21:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="181" started-at="2014-09-14T19:21:08Z" finished-at="2014-09-14T19:21:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="210" started-at="2014-09-14T19:21:08Z" finished-at="2014-09-14T19:21:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="136" started-at="2014-09-14T19:21:08Z" finished-at="2014-09-14T19:21:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="169" started-at="2014-09-14T19:21:08Z" finished-at="2014-09-14T19:21:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="206" started-at="2014-09-14T19:21:08Z" finished-at="2014-09-14T19:21:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="191" started-at="2014-09-14T19:21:08Z" finished-at="2014-09-14T19:21:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="206" started-at="2014-09-14T19:21:08Z" finished-at="2014-09-14T19:21:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="223" started-at="2014-09-14T19:21:08Z" finished-at="2014-09-14T19:21:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="129" started-at="2014-09-14T19:21:08Z" finished-at="2014-09-14T19:21:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="185" started-at="2014-09-14T19:21:08Z" finished-at="2014-09-14T19:21:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="235" started-at="2014-09-14T19:21:08Z" finished-at="2014-09-14T19:21:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="167" started-at="2014-09-14T19:21:08Z" finished-at="2014-09-14T19:21:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="297" started-at="2014-09-14T19:21:08Z" finished-at="2014-09-14T19:21:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="130" started-at="2014-09-14T19:21:08Z" finished-at="2014-09-14T19:21:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="154" started-at="2014-09-14T19:21:08Z" finished-at="2014-09-14T19:21:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="160" started-at="2014-09-14T19:21:08Z" finished-at="2014-09-14T19:21:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="212" started-at="2014-09-14T19:21:08Z" finished-at="2014-09-14T19:21:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="175" started-at="2014-09-14T19:21:08Z" finished-at="2014-09-14T19:21:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="154" started-at="2014-09-14T19:21:08Z" finished-at="2014-09-14T19:21:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="136" started-at="2014-09-14T19:21:08Z" finished-at="2014-09-14T19:21:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="229" started-at="2014-09-14T19:21:08Z" finished-at="2014-09-14T19:21:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="246" started-at="2014-09-14T19:21:08Z" finished-at="2014-09-14T19:21:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="197" started-at="2014-09-14T19:21:08Z" finished-at="2014-09-14T19:21:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="146" started-at="2014-09-14T19:21:08Z" finished-at="2014-09-14T19:21:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="178" started-at="2014-09-14T19:21:08Z" finished-at="2014-09-14T19:21:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="290" started-at="2014-09-14T19:21:08Z" finished-at="2014-09-14T19:21:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="253" started-at="2014-09-14T19:21:08Z" finished-at="2014-09-14T19:21:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="135" started-at="2014-09-14T19:21:08Z" finished-at="2014-09-14T19:21:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="165" started-at="2014-09-14T19:21:08Z" finished-at="2014-09-14T19:21:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="181" started-at="2014-09-14T19:21:08Z" finished-at="2014-09-14T19:21:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="173" started-at="2014-09-14T19:21:08Z" finished-at="2014-09-14T19:21:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="174" started-at="2014-09-14T19:21:08Z" finished-at="2014-09-14T19:21:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="195" started-at="2014-09-14T19:21:08Z" finished-at="2014-09-14T19:21:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="124" started-at="2014-09-14T19:21:08Z" finished-at="2014-09-14T19:21:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="181" started-at="2014-09-14T19:21:08Z" finished-at="2014-09-14T19:21:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="169" started-at="2014-09-14T19:21:08Z" finished-at="2014-09-14T19:21:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="135" started-at="2014-09-14T19:21:08Z" finished-at="2014-09-14T19:21:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="171" started-at="2014-09-14T19:21:08Z" finished-at="2014-09-14T19:21:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="290" started-at="2014-09-14T19:21:08Z" finished-at="2014-09-14T19:21:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="293" started-at="2014-09-14T19:21:08Z" finished-at="2014-09-14T19:21:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="200" started-at="2014-09-14T19:21:08Z" finished-at="2014-09-14T19:21:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="222" started-at="2014-09-14T19:21:08Z" finished-at="2014-09-14T19:21:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="188" started-at="2014-09-14T19:21:08Z" finished-at="2014-09-14T19:21:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="296" started-at="2014-09-14T19:21:08Z" finished-at="2014-09-14T19:21:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="235" started-at="2014-09-14T19:21:08Z" finished-at="2014-09-14T19:21:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="162" started-at="2014-09-14T19:21:08Z" finished-at="2014-09-14T19:21:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="193" started-at="2014-09-14T19:21:08Z" finished-at="2014-09-14T19:21:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="156" started-at="2014-09-14T19:21:08Z" finished-at="2014-09-14T19:21:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="177" started-at="2014-09-14T19:21:09Z" finished-at="2014-09-14T19:21:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="129" started-at="2014-09-14T19:21:09Z" finished-at="2014-09-14T19:21:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="168" started-at="2014-09-14T19:21:09Z" finished-at="2014-09-14T19:21:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="257" started-at="2014-09-14T19:21:09Z" finished-at="2014-09-14T19:21:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="265" started-at="2014-09-14T19:21:09Z" finished-at="2014-09-14T19:21:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="294" started-at="2014-09-14T19:21:09Z" finished-at="2014-09-14T19:21:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="245" started-at="2014-09-14T19:21:09Z" finished-at="2014-09-14T19:21:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="183" started-at="2014-09-14T19:21:09Z" finished-at="2014-09-14T19:21:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="366" started-at="2014-09-14T19:21:09Z" finished-at="2014-09-14T19:21:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="336" started-at="2014-09-14T19:21:09Z" finished-at="2014-09-14T19:21:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="370" started-at="2014-09-14T19:21:09Z" finished-at="2014-09-14T19:21:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="205" started-at="2014-09-14T19:21:09Z" finished-at="2014-09-14T19:21:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="307" started-at="2014-09-14T19:21:09Z" finished-at="2014-09-14T19:21:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="227" started-at="2014-09-14T19:21:09Z" finished-at="2014-09-14T19:21:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="362" started-at="2014-09-14T19:21:09Z" finished-at="2014-09-14T19:21:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="181" started-at="2014-09-14T19:21:09Z" finished-at="2014-09-14T19:21:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="187" started-at="2014-09-14T19:21:09Z" finished-at="2014-09-14T19:21:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="173" started-at="2014-09-14T19:21:09Z" finished-at="2014-09-14T19:21:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="183" started-at="2014-09-14T19:21:09Z" finished-at="2014-09-14T19:21:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="333" started-at="2014-09-14T19:21:09Z" finished-at="2014-09-14T19:21:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="211" started-at="2014-09-14T19:21:09Z" finished-at="2014-09-14T19:21:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="328" started-at="2014-09-14T19:21:09Z" finished-at="2014-09-14T19:21:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="326" started-at="2014-09-14T19:21:09Z" finished-at="2014-09-14T19:21:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="128" started-at="2014-09-14T19:21:09Z" finished-at="2014-09-14T19:21:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="179" started-at="2014-09-14T19:21:09Z" finished-at="2014-09-14T19:21:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="124" started-at="2014-09-14T19:21:09Z" finished-at="2014-09-14T19:21:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="144" started-at="2014-09-14T19:21:09Z" finished-at="2014-09-14T19:21:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="156" started-at="2014-09-14T19:21:09Z" finished-at="2014-09-14T19:21:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="170" started-at="2014-09-14T19:21:09Z" finished-at="2014-09-14T19:21:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="138" started-at="2014-09-14T19:21:09Z" finished-at="2014-09-14T19:21:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="262" started-at="2014-09-14T19:21:09Z" finished-at="2014-09-14T19:21:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="173" started-at="2014-09-14T19:21:09Z" finished-at="2014-09-14T19:21:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="208" started-at="2014-09-14T19:21:09Z" finished-at="2014-09-14T19:21:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="152" started-at="2014-09-14T19:21:09Z" finished-at="2014-09-14T19:21:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="159" started-at="2014-09-14T19:21:09Z" finished-at="2014-09-14T19:21:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="360" started-at="2014-09-14T19:21:09Z" finished-at="2014-09-14T19:21:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="417" started-at="2014-09-14T19:21:09Z" finished-at="2014-09-14T19:21:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="144" started-at="2014-09-14T19:21:09Z" finished-at="2014-09-14T19:21:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="137" started-at="2014-09-14T19:21:09Z" finished-at="2014-09-14T19:21:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="194" started-at="2014-09-14T19:21:09Z" finished-at="2014-09-14T19:21:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="144" started-at="2014-09-14T19:21:09Z" finished-at="2014-09-14T19:21:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="301" started-at="2014-09-14T19:21:09Z" finished-at="2014-09-14T19:21:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="141" started-at="2014-09-14T19:21:09Z" finished-at="2014-09-14T19:21:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="272" started-at="2014-09-14T19:21:09Z" finished-at="2014-09-14T19:21:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="267" started-at="2014-09-14T19:21:09Z" finished-at="2014-09-14T19:21:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="282" started-at="2014-09-14T19:21:09Z" finished-at="2014-09-14T19:21:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="258" started-at="2014-09-14T19:21:09Z" finished-at="2014-09-14T19:21:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="339" started-at="2014-09-14T19:21:10Z" finished-at="2014-09-14T19:21:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="278" started-at="2014-09-14T19:21:10Z" finished-at="2014-09-14T19:21:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="191" started-at="2014-09-14T19:21:10Z" finished-at="2014-09-14T19:21:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="332" started-at="2014-09-14T19:21:10Z" finished-at="2014-09-14T19:21:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="196" started-at="2014-09-14T19:21:10Z" finished-at="2014-09-14T19:21:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="185" started-at="2014-09-14T19:21:10Z" finished-at="2014-09-14T19:21:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="188" started-at="2014-09-14T19:21:10Z" finished-at="2014-09-14T19:21:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="209" started-at="2014-09-14T19:21:10Z" finished-at="2014-09-14T19:21:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="193" started-at="2014-09-14T19:21:10Z" finished-at="2014-09-14T19:21:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="178" started-at="2014-09-14T19:21:10Z" finished-at="2014-09-14T19:21:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="250" started-at="2014-09-14T19:21:10Z" finished-at="2014-09-14T19:21:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="236" started-at="2014-09-14T19:21:10Z" finished-at="2014-09-14T19:21:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="182" started-at="2014-09-14T19:21:10Z" finished-at="2014-09-14T19:21:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="143" started-at="2014-09-14T19:21:10Z" finished-at="2014-09-14T19:21:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="159" started-at="2014-09-14T19:21:10Z" finished-at="2014-09-14T19:21:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="187" started-at="2014-09-14T19:21:10Z" finished-at="2014-09-14T19:21:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="153" started-at="2014-09-14T19:21:10Z" finished-at="2014-09-14T19:21:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="318" started-at="2014-09-14T19:21:10Z" finished-at="2014-09-14T19:21:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="167" started-at="2014-09-14T19:21:10Z" finished-at="2014-09-14T19:21:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="228" started-at="2014-09-14T19:21:10Z" finished-at="2014-09-14T19:21:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="260" started-at="2014-09-14T19:21:10Z" finished-at="2014-09-14T19:21:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="196" started-at="2014-09-14T19:21:10Z" finished-at="2014-09-14T19:21:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="135" started-at="2014-09-14T19:21:10Z" finished-at="2014-09-14T19:21:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="97" started-at="2014-09-14T19:21:10Z" finished-at="2014-09-14T19:21:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="152" started-at="2014-09-14T19:21:10Z" finished-at="2014-09-14T19:21:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="181" started-at="2014-09-14T19:21:10Z" finished-at="2014-09-14T19:21:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="175" started-at="2014-09-14T19:21:10Z" finished-at="2014-09-14T19:21:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="159" started-at="2014-09-14T19:21:10Z" finished-at="2014-09-14T19:21:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="224" started-at="2014-09-14T19:21:10Z" finished-at="2014-09-14T19:21:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="166" started-at="2014-09-14T19:21:10Z" finished-at="2014-09-14T19:21:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="270" started-at="2014-09-14T19:21:10Z" finished-at="2014-09-14T19:21:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="157" started-at="2014-09-14T19:21:10Z" finished-at="2014-09-14T19:21:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="213" started-at="2014-09-14T19:21:10Z" finished-at="2014-09-14T19:21:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="204" started-at="2014-09-14T19:21:10Z" finished-at="2014-09-14T19:21:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="228" started-at="2014-09-14T19:21:10Z" finished-at="2014-09-14T19:21:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="197" started-at="2014-09-14T19:21:10Z" finished-at="2014-09-14T19:21:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="123" started-at="2014-09-14T19:21:10Z" finished-at="2014-09-14T19:21:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="148" started-at="2014-09-14T19:21:10Z" finished-at="2014-09-14T19:21:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="153" started-at="2014-09-14T19:21:10Z" finished-at="2014-09-14T19:21:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="206" started-at="2014-09-14T19:21:10Z" finished-at="2014-09-14T19:21:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="183" started-at="2014-09-14T19:21:10Z" finished-at="2014-09-14T19:21:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="176" started-at="2014-09-14T19:21:10Z" finished-at="2014-09-14T19:21:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="168" started-at="2014-09-14T19:21:10Z" finished-at="2014-09-14T19:21:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="290" started-at="2014-09-14T19:21:10Z" finished-at="2014-09-14T19:21:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="299" started-at="2014-09-14T19:21:10Z" finished-at="2014-09-14T19:21:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="150" started-at="2014-09-14T19:21:10Z" finished-at="2014-09-14T19:21:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="127" started-at="2014-09-14T19:21:10Z" finished-at="2014-09-14T19:21:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="158" started-at="2014-09-14T19:21:10Z" finished-at="2014-09-14T19:21:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="325" started-at="2014-09-14T19:21:11Z" finished-at="2014-09-14T19:21:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="272" started-at="2014-09-14T19:21:11Z" finished-at="2014-09-14T19:21:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="275" started-at="2014-09-14T19:21:11Z" finished-at="2014-09-14T19:21:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="260" started-at="2014-09-14T19:21:11Z" finished-at="2014-09-14T19:21:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="266" started-at="2014-09-14T19:21:11Z" finished-at="2014-09-14T19:21:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="216" started-at="2014-09-14T19:21:11Z" finished-at="2014-09-14T19:21:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="235" started-at="2014-09-14T19:21:11Z" finished-at="2014-09-14T19:21:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="184" started-at="2014-09-14T19:21:11Z" finished-at="2014-09-14T19:21:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="196" started-at="2014-09-14T19:21:11Z" finished-at="2014-09-14T19:21:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="179" started-at="2014-09-14T19:21:11Z" finished-at="2014-09-14T19:21:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="214" started-at="2014-09-14T19:21:11Z" finished-at="2014-09-14T19:21:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="233" started-at="2014-09-14T19:21:11Z" finished-at="2014-09-14T19:21:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="172" started-at="2014-09-14T19:21:11Z" finished-at="2014-09-14T19:21:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="203" started-at="2014-09-14T19:21:11Z" finished-at="2014-09-14T19:21:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="190" started-at="2014-09-14T19:21:11Z" finished-at="2014-09-14T19:21:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="282" started-at="2014-09-14T19:21:11Z" finished-at="2014-09-14T19:21:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="214" started-at="2014-09-14T19:21:11Z" finished-at="2014-09-14T19:21:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="229" started-at="2014-09-14T19:21:11Z" finished-at="2014-09-14T19:21:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="265" started-at="2014-09-14T19:21:11Z" finished-at="2014-09-14T19:21:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="248" started-at="2014-09-14T19:21:11Z" finished-at="2014-09-14T19:21:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="98" started-at="2014-09-14T19:21:11Z" finished-at="2014-09-14T19:21:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="190" started-at="2014-09-14T19:21:11Z" finished-at="2014-09-14T19:21:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="200" started-at="2014-09-14T19:21:11Z" finished-at="2014-09-14T19:21:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="237" started-at="2014-09-14T19:21:11Z" finished-at="2014-09-14T19:21:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="248" started-at="2014-09-14T19:21:11Z" finished-at="2014-09-14T19:21:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="185" started-at="2014-09-14T19:21:11Z" finished-at="2014-09-14T19:21:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="141" started-at="2014-09-14T19:21:11Z" finished-at="2014-09-14T19:21:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="175" started-at="2014-09-14T19:21:11Z" finished-at="2014-09-14T19:21:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="299" started-at="2014-09-14T19:21:11Z" finished-at="2014-09-14T19:21:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="178" started-at="2014-09-14T19:21:11Z" finished-at="2014-09-14T19:21:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="158" started-at="2014-09-14T19:21:11Z" finished-at="2014-09-14T19:21:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="201" started-at="2014-09-14T19:21:11Z" finished-at="2014-09-14T19:21:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="186" started-at="2014-09-14T19:21:11Z" finished-at="2014-09-14T19:21:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="162" started-at="2014-09-14T19:21:11Z" finished-at="2014-09-14T19:21:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="254" started-at="2014-09-14T19:21:11Z" finished-at="2014-09-14T19:21:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="189" started-at="2014-09-14T19:21:11Z" finished-at="2014-09-14T19:21:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="228" started-at="2014-09-14T19:21:11Z" finished-at="2014-09-14T19:21:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="144" started-at="2014-09-14T19:21:11Z" finished-at="2014-09-14T19:21:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="132" started-at="2014-09-14T19:21:11Z" finished-at="2014-09-14T19:21:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="184" started-at="2014-09-14T19:21:11Z" finished-at="2014-09-14T19:21:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="162" started-at="2014-09-14T19:21:11Z" finished-at="2014-09-14T19:21:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="203" started-at="2014-09-14T19:21:11Z" finished-at="2014-09-14T19:21:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="212" started-at="2014-09-14T19:21:11Z" finished-at="2014-09-14T19:21:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="250" started-at="2014-09-14T19:21:11Z" finished-at="2014-09-14T19:21:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="204" started-at="2014-09-14T19:21:11Z" finished-at="2014-09-14T19:21:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="218" started-at="2014-09-14T19:21:11Z" finished-at="2014-09-14T19:21:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="157" started-at="2014-09-14T19:21:11Z" finished-at="2014-09-14T19:21:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="181" started-at="2014-09-14T19:21:12Z" finished-at="2014-09-14T19:21:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="550" started-at="2014-09-14T19:21:12Z" finished-at="2014-09-14T19:21:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="550" started-at="2014-09-14T19:21:12Z" finished-at="2014-09-14T19:21:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="507" started-at="2014-09-14T19:21:12Z" finished-at="2014-09-14T19:21:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="462" started-at="2014-09-14T19:21:12Z" finished-at="2014-09-14T19:21:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="523" started-at="2014-09-14T19:21:12Z" finished-at="2014-09-14T19:21:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="479" started-at="2014-09-14T19:21:12Z" finished-at="2014-09-14T19:21:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="516" started-at="2014-09-14T19:21:12Z" finished-at="2014-09-14T19:21:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="477" started-at="2014-09-14T19:21:12Z" finished-at="2014-09-14T19:21:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="503" started-at="2014-09-14T19:21:12Z" finished-at="2014-09-14T19:21:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="492" started-at="2014-09-14T19:21:12Z" finished-at="2014-09-14T19:21:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="152" started-at="2014-09-14T19:21:12Z" finished-at="2014-09-14T19:21:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="148" started-at="2014-09-14T19:21:12Z" finished-at="2014-09-14T19:21:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="196" started-at="2014-09-14T19:21:12Z" finished-at="2014-09-14T19:21:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="225" started-at="2014-09-14T19:21:12Z" finished-at="2014-09-14T19:21:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="210" started-at="2014-09-14T19:21:12Z" finished-at="2014-09-14T19:21:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="156" started-at="2014-09-14T19:21:12Z" finished-at="2014-09-14T19:21:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="196" started-at="2014-09-14T19:21:12Z" finished-at="2014-09-14T19:21:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="220" started-at="2014-09-14T19:21:12Z" finished-at="2014-09-14T19:21:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="182" started-at="2014-09-14T19:21:12Z" finished-at="2014-09-14T19:21:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="196" started-at="2014-09-14T19:21:12Z" finished-at="2014-09-14T19:21:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="145" started-at="2014-09-14T19:21:12Z" finished-at="2014-09-14T19:21:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="170" started-at="2014-09-14T19:21:12Z" finished-at="2014-09-14T19:21:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="275" started-at="2014-09-14T19:21:12Z" finished-at="2014-09-14T19:21:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="184" started-at="2014-09-14T19:21:12Z" finished-at="2014-09-14T19:21:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="179" started-at="2014-09-14T19:21:12Z" finished-at="2014-09-14T19:21:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="166" started-at="2014-09-14T19:21:12Z" finished-at="2014-09-14T19:21:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="194" started-at="2014-09-14T19:21:12Z" finished-at="2014-09-14T19:21:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="197" started-at="2014-09-14T19:21:12Z" finished-at="2014-09-14T19:21:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="160" started-at="2014-09-14T19:21:12Z" finished-at="2014-09-14T19:21:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="147" started-at="2014-09-14T19:21:12Z" finished-at="2014-09-14T19:21:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="227" started-at="2014-09-14T19:21:12Z" finished-at="2014-09-14T19:21:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="201" started-at="2014-09-14T19:21:12Z" finished-at="2014-09-14T19:21:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="213" started-at="2014-09-14T19:21:12Z" finished-at="2014-09-14T19:21:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="252" started-at="2014-09-14T19:21:13Z" finished-at="2014-09-14T19:21:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="171" started-at="2014-09-14T19:21:13Z" finished-at="2014-09-14T19:21:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="181" started-at="2014-09-14T19:21:13Z" finished-at="2014-09-14T19:21:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="139" started-at="2014-09-14T19:21:13Z" finished-at="2014-09-14T19:21:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="264" started-at="2014-09-14T19:21:13Z" finished-at="2014-09-14T19:21:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="152" started-at="2014-09-14T19:21:13Z" finished-at="2014-09-14T19:21:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="176" started-at="2014-09-14T19:21:13Z" finished-at="2014-09-14T19:21:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="206" started-at="2014-09-14T19:21:13Z" finished-at="2014-09-14T19:21:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="181" started-at="2014-09-14T19:21:13Z" finished-at="2014-09-14T19:21:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="250" started-at="2014-09-14T19:21:13Z" finished-at="2014-09-14T19:21:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="218" started-at="2014-09-14T19:21:13Z" finished-at="2014-09-14T19:21:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="169" started-at="2014-09-14T19:21:13Z" finished-at="2014-09-14T19:21:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="167" started-at="2014-09-14T19:21:13Z" finished-at="2014-09-14T19:21:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="144" started-at="2014-09-14T19:21:13Z" finished-at="2014-09-14T19:21:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="190" started-at="2014-09-14T19:21:13Z" finished-at="2014-09-14T19:21:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="183" started-at="2014-09-14T19:21:13Z" finished-at="2014-09-14T19:21:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="322" started-at="2014-09-14T19:21:13Z" finished-at="2014-09-14T19:21:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="170" started-at="2014-09-14T19:21:13Z" finished-at="2014-09-14T19:21:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="215" started-at="2014-09-14T19:21:13Z" finished-at="2014-09-14T19:21:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="323" started-at="2014-09-14T19:21:13Z" finished-at="2014-09-14T19:21:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="267" started-at="2014-09-14T19:21:13Z" finished-at="2014-09-14T19:21:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="162" started-at="2014-09-14T19:21:13Z" finished-at="2014-09-14T19:21:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="200" started-at="2014-09-14T19:21:13Z" finished-at="2014-09-14T19:21:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="210" started-at="2014-09-14T19:21:13Z" finished-at="2014-09-14T19:21:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="220" started-at="2014-09-14T19:21:13Z" finished-at="2014-09-14T19:21:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="204" started-at="2014-09-14T19:21:13Z" finished-at="2014-09-14T19:21:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="208" started-at="2014-09-14T19:21:13Z" finished-at="2014-09-14T19:21:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="277" started-at="2014-09-14T19:21:13Z" finished-at="2014-09-14T19:21:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="262" started-at="2014-09-14T19:21:13Z" finished-at="2014-09-14T19:21:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="108" started-at="2014-09-14T19:21:13Z" finished-at="2014-09-14T19:21:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="138" started-at="2014-09-14T19:21:13Z" finished-at="2014-09-14T19:21:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="150" started-at="2014-09-14T19:21:13Z" finished-at="2014-09-14T19:21:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="141" started-at="2014-09-14T19:21:13Z" finished-at="2014-09-14T19:21:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="293" started-at="2014-09-14T19:21:13Z" finished-at="2014-09-14T19:21:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="199" started-at="2014-09-14T19:21:13Z" finished-at="2014-09-14T19:21:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="503" started-at="2014-09-14T19:21:13Z" finished-at="2014-09-14T19:21:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="198" started-at="2014-09-14T19:21:13Z" finished-at="2014-09-14T19:21:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="122" started-at="2014-09-14T19:21:13Z" finished-at="2014-09-14T19:21:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="193" started-at="2014-09-14T19:21:13Z" finished-at="2014-09-14T19:21:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="209" started-at="2014-09-14T19:21:13Z" finished-at="2014-09-14T19:21:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="227" started-at="2014-09-14T19:21:13Z" finished-at="2014-09-14T19:21:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="238" started-at="2014-09-14T19:21:13Z" finished-at="2014-09-14T19:21:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="118" started-at="2014-09-14T19:21:13Z" finished-at="2014-09-14T19:21:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="150" started-at="2014-09-14T19:21:13Z" finished-at="2014-09-14T19:21:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="120" started-at="2014-09-14T19:21:13Z" finished-at="2014-09-14T19:21:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="278" started-at="2014-09-14T19:21:13Z" finished-at="2014-09-14T19:21:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="147" started-at="2014-09-14T19:21:13Z" finished-at="2014-09-14T19:21:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="324" started-at="2014-09-14T19:21:13Z" finished-at="2014-09-14T19:21:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="130" started-at="2014-09-14T19:21:13Z" finished-at="2014-09-14T19:21:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="147" started-at="2014-09-14T19:21:13Z" finished-at="2014-09-14T19:21:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="157" started-at="2014-09-14T19:21:13Z" finished-at="2014-09-14T19:21:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="142" started-at="2014-09-14T19:21:13Z" finished-at="2014-09-14T19:21:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="185" started-at="2014-09-14T19:21:14Z" finished-at="2014-09-14T19:21:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="206" started-at="2014-09-14T19:21:14Z" finished-at="2014-09-14T19:21:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="167" started-at="2014-09-14T19:21:14Z" finished-at="2014-09-14T19:21:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="284" started-at="2014-09-14T19:21:14Z" finished-at="2014-09-14T19:21:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="162" started-at="2014-09-14T19:21:14Z" finished-at="2014-09-14T19:21:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="170" started-at="2014-09-14T19:21:14Z" finished-at="2014-09-14T19:21:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="170" started-at="2014-09-14T19:21:14Z" finished-at="2014-09-14T19:21:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="158" started-at="2014-09-14T19:21:14Z" finished-at="2014-09-14T19:21:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="181" started-at="2014-09-14T19:21:14Z" finished-at="2014-09-14T19:21:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="210" started-at="2014-09-14T19:21:14Z" finished-at="2014-09-14T19:21:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="295" started-at="2014-09-14T19:21:14Z" finished-at="2014-09-14T19:21:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="167" started-at="2014-09-14T19:21:14Z" finished-at="2014-09-14T19:21:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="170" started-at="2014-09-14T19:21:14Z" finished-at="2014-09-14T19:21:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="193" started-at="2014-09-14T19:21:14Z" finished-at="2014-09-14T19:21:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="205" started-at="2014-09-14T19:21:14Z" finished-at="2014-09-14T19:21:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="191" started-at="2014-09-14T19:21:14Z" finished-at="2014-09-14T19:21:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="193" started-at="2014-09-14T19:21:14Z" finished-at="2014-09-14T19:21:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="284" started-at="2014-09-14T19:21:14Z" finished-at="2014-09-14T19:21:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="260" started-at="2014-09-14T19:21:14Z" finished-at="2014-09-14T19:21:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="223" started-at="2014-09-14T19:21:14Z" finished-at="2014-09-14T19:21:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="147" started-at="2014-09-14T19:21:14Z" finished-at="2014-09-14T19:21:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="184" started-at="2014-09-14T19:21:14Z" finished-at="2014-09-14T19:21:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="219" started-at="2014-09-14T19:21:14Z" finished-at="2014-09-14T19:21:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="197" started-at="2014-09-14T19:21:14Z" finished-at="2014-09-14T19:21:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="230" started-at="2014-09-14T19:21:14Z" finished-at="2014-09-14T19:21:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="218" started-at="2014-09-14T19:21:14Z" finished-at="2014-09-14T19:21:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="223" started-at="2014-09-14T19:21:14Z" finished-at="2014-09-14T19:21:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="134" started-at="2014-09-14T19:21:14Z" finished-at="2014-09-14T19:21:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="221" started-at="2014-09-14T19:21:14Z" finished-at="2014-09-14T19:21:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="161" started-at="2014-09-14T19:21:14Z" finished-at="2014-09-14T19:21:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="147" started-at="2014-09-14T19:21:14Z" finished-at="2014-09-14T19:21:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="254" started-at="2014-09-14T19:21:14Z" finished-at="2014-09-14T19:21:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="143" started-at="2014-09-14T19:21:14Z" finished-at="2014-09-14T19:21:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="287" started-at="2014-09-14T19:21:14Z" finished-at="2014-09-14T19:21:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="190" started-at="2014-09-14T19:21:14Z" finished-at="2014-09-14T19:21:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="203" started-at="2014-09-14T19:21:14Z" finished-at="2014-09-14T19:21:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="225" started-at="2014-09-14T19:21:14Z" finished-at="2014-09-14T19:21:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="217" started-at="2014-09-14T19:21:14Z" finished-at="2014-09-14T19:21:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="236" started-at="2014-09-14T19:21:14Z" finished-at="2014-09-14T19:21:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="153" started-at="2014-09-14T19:21:14Z" finished-at="2014-09-14T19:21:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="193" started-at="2014-09-14T19:21:14Z" finished-at="2014-09-14T19:21:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="137" started-at="2014-09-14T19:21:14Z" finished-at="2014-09-14T19:21:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="168" started-at="2014-09-14T19:21:14Z" finished-at="2014-09-14T19:21:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="197" started-at="2014-09-14T19:21:14Z" finished-at="2014-09-14T19:21:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="285" started-at="2014-09-14T19:21:14Z" finished-at="2014-09-14T19:21:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="186" started-at="2014-09-14T19:21:14Z" finished-at="2014-09-14T19:21:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="192" started-at="2014-09-14T19:21:14Z" finished-at="2014-09-14T19:21:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="261" started-at="2014-09-14T19:21:14Z" finished-at="2014-09-14T19:21:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="234" started-at="2014-09-14T19:21:14Z" finished-at="2014-09-14T19:21:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="233" started-at="2014-09-14T19:21:14Z" finished-at="2014-09-14T19:21:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="219" started-at="2014-09-14T19:21:15Z" finished-at="2014-09-14T19:21:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="153" started-at="2014-09-14T19:21:15Z" finished-at="2014-09-14T19:21:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="274" started-at="2014-09-14T19:21:15Z" finished-at="2014-09-14T19:21:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="248" started-at="2014-09-14T19:21:15Z" finished-at="2014-09-14T19:21:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="205" started-at="2014-09-14T19:21:15Z" finished-at="2014-09-14T19:21:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="342" started-at="2014-09-14T19:21:15Z" finished-at="2014-09-14T19:21:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="218" started-at="2014-09-14T19:21:15Z" finished-at="2014-09-14T19:21:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="213" started-at="2014-09-14T19:21:15Z" finished-at="2014-09-14T19:21:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="167" started-at="2014-09-14T19:21:15Z" finished-at="2014-09-14T19:21:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="189" started-at="2014-09-14T19:21:15Z" finished-at="2014-09-14T19:21:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="335" started-at="2014-09-14T19:21:15Z" finished-at="2014-09-14T19:21:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="237" started-at="2014-09-14T19:21:15Z" finished-at="2014-09-14T19:21:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="251" started-at="2014-09-14T19:21:15Z" finished-at="2014-09-14T19:21:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="201" started-at="2014-09-14T19:21:15Z" finished-at="2014-09-14T19:21:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="210" started-at="2014-09-14T19:21:15Z" finished-at="2014-09-14T19:21:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="254" started-at="2014-09-14T19:21:15Z" finished-at="2014-09-14T19:21:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="222" started-at="2014-09-14T19:21:15Z" finished-at="2014-09-14T19:21:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="379" started-at="2014-09-14T19:21:15Z" finished-at="2014-09-14T19:21:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="160" started-at="2014-09-14T19:21:15Z" finished-at="2014-09-14T19:21:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="484" started-at="2014-09-14T19:21:15Z" finished-at="2014-09-14T19:21:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="350" started-at="2014-09-14T19:21:15Z" finished-at="2014-09-14T19:21:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="235" started-at="2014-09-14T19:21:15Z" finished-at="2014-09-14T19:21:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="242" started-at="2014-09-14T19:21:15Z" finished-at="2014-09-14T19:21:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="297" started-at="2014-09-14T19:21:15Z" finished-at="2014-09-14T19:21:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="270" started-at="2014-09-14T19:21:15Z" finished-at="2014-09-14T19:21:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="292" started-at="2014-09-14T19:21:15Z" finished-at="2014-09-14T19:21:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="280" started-at="2014-09-14T19:21:15Z" finished-at="2014-09-14T19:21:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="342" started-at="2014-09-14T19:21:15Z" finished-at="2014-09-14T19:21:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="169" started-at="2014-09-14T19:21:15Z" finished-at="2014-09-14T19:21:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="191" started-at="2014-09-14T19:21:15Z" finished-at="2014-09-14T19:21:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="190" started-at="2014-09-14T19:21:15Z" finished-at="2014-09-14T19:21:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="176" started-at="2014-09-14T19:21:15Z" finished-at="2014-09-14T19:21:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="268" started-at="2014-09-14T19:21:15Z" finished-at="2014-09-14T19:21:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="286" started-at="2014-09-14T19:21:15Z" finished-at="2014-09-14T19:21:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="183" started-at="2014-09-14T19:21:15Z" finished-at="2014-09-14T19:21:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="152" started-at="2014-09-14T19:21:15Z" finished-at="2014-09-14T19:21:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="203" started-at="2014-09-14T19:21:15Z" finished-at="2014-09-14T19:21:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="154" started-at="2014-09-14T19:21:15Z" finished-at="2014-09-14T19:21:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="170" started-at="2014-09-14T19:21:15Z" finished-at="2014-09-14T19:21:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="178" started-at="2014-09-14T19:21:15Z" finished-at="2014-09-14T19:21:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="222" started-at="2014-09-14T19:21:16Z" finished-at="2014-09-14T19:21:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="223" started-at="2014-09-14T19:21:16Z" finished-at="2014-09-14T19:21:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="227" started-at="2014-09-14T19:21:16Z" finished-at="2014-09-14T19:21:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="173" started-at="2014-09-14T19:21:16Z" finished-at="2014-09-14T19:21:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="190" started-at="2014-09-14T19:21:16Z" finished-at="2014-09-14T19:21:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="174" started-at="2014-09-14T19:21:16Z" finished-at="2014-09-14T19:21:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="216" started-at="2014-09-14T19:21:16Z" finished-at="2014-09-14T19:21:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="140" started-at="2014-09-14T19:21:16Z" finished-at="2014-09-14T19:21:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="193" started-at="2014-09-14T19:21:16Z" finished-at="2014-09-14T19:21:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="251" started-at="2014-09-14T19:21:16Z" finished-at="2014-09-14T19:21:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="176" started-at="2014-09-14T19:21:16Z" finished-at="2014-09-14T19:21:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="483" started-at="2014-09-14T19:21:16Z" finished-at="2014-09-14T19:21:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="113" started-at="2014-09-14T19:21:16Z" finished-at="2014-09-14T19:21:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="114" started-at="2014-09-14T19:21:16Z" finished-at="2014-09-14T19:21:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="232" started-at="2014-09-14T19:21:16Z" finished-at="2014-09-14T19:21:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="176" started-at="2014-09-14T19:21:16Z" finished-at="2014-09-14T19:21:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="161" started-at="2014-09-14T19:21:16Z" finished-at="2014-09-14T19:21:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="170" started-at="2014-09-14T19:21:16Z" finished-at="2014-09-14T19:21:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="166" started-at="2014-09-14T19:21:16Z" finished-at="2014-09-14T19:21:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="185" started-at="2014-09-14T19:21:16Z" finished-at="2014-09-14T19:21:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="273" started-at="2014-09-14T19:21:16Z" finished-at="2014-09-14T19:21:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="257" started-at="2014-09-14T19:21:16Z" finished-at="2014-09-14T19:21:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="296" started-at="2014-09-14T19:21:16Z" finished-at="2014-09-14T19:21:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="203" started-at="2014-09-14T19:21:16Z" finished-at="2014-09-14T19:21:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="169" started-at="2014-09-14T19:21:16Z" finished-at="2014-09-14T19:21:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="204" started-at="2014-09-14T19:21:16Z" finished-at="2014-09-14T19:21:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="161" started-at="2014-09-14T19:21:16Z" finished-at="2014-09-14T19:21:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="183" started-at="2014-09-14T19:21:16Z" finished-at="2014-09-14T19:21:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="164" started-at="2014-09-14T19:21:16Z" finished-at="2014-09-14T19:21:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="194" started-at="2014-09-14T19:21:16Z" finished-at="2014-09-14T19:21:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="177" started-at="2014-09-14T19:21:16Z" finished-at="2014-09-14T19:21:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="279" started-at="2014-09-14T19:21:16Z" finished-at="2014-09-14T19:21:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="219" started-at="2014-09-14T19:21:16Z" finished-at="2014-09-14T19:21:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="194" started-at="2014-09-14T19:21:16Z" finished-at="2014-09-14T19:21:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="168" started-at="2014-09-14T19:21:16Z" finished-at="2014-09-14T19:21:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="228" started-at="2014-09-14T19:21:16Z" finished-at="2014-09-14T19:21:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="188" started-at="2014-09-14T19:21:16Z" finished-at="2014-09-14T19:21:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="186" started-at="2014-09-14T19:21:16Z" finished-at="2014-09-14T19:21:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="163" started-at="2014-09-14T19:21:16Z" finished-at="2014-09-14T19:21:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="182" started-at="2014-09-14T19:21:16Z" finished-at="2014-09-14T19:21:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="168" started-at="2014-09-14T19:21:16Z" finished-at="2014-09-14T19:21:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="182" started-at="2014-09-14T19:21:16Z" finished-at="2014-09-14T19:21:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="268" started-at="2014-09-14T19:21:16Z" finished-at="2014-09-14T19:21:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="237" started-at="2014-09-14T19:21:16Z" finished-at="2014-09-14T19:21:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="223" started-at="2014-09-14T19:21:16Z" finished-at="2014-09-14T19:21:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="184" started-at="2014-09-14T19:21:16Z" finished-at="2014-09-14T19:21:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="141" started-at="2014-09-14T19:21:16Z" finished-at="2014-09-14T19:21:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="196" started-at="2014-09-14T19:21:16Z" finished-at="2014-09-14T19:21:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="236" started-at="2014-09-14T19:21:16Z" finished-at="2014-09-14T19:21:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="288" started-at="2014-09-14T19:21:17Z" finished-at="2014-09-14T19:21:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="284" started-at="2014-09-14T19:21:17Z" finished-at="2014-09-14T19:21:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="164" started-at="2014-09-14T19:21:17Z" finished-at="2014-09-14T19:21:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="181" started-at="2014-09-14T19:21:17Z" finished-at="2014-09-14T19:21:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="142" started-at="2014-09-14T19:21:17Z" finished-at="2014-09-14T19:21:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="282" started-at="2014-09-14T19:21:17Z" finished-at="2014-09-14T19:21:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="242" started-at="2014-09-14T19:21:17Z" finished-at="2014-09-14T19:21:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="143" started-at="2014-09-14T19:21:17Z" finished-at="2014-09-14T19:21:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="152" started-at="2014-09-14T19:21:17Z" finished-at="2014-09-14T19:21:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="131" started-at="2014-09-14T19:21:17Z" finished-at="2014-09-14T19:21:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="210" started-at="2014-09-14T19:21:17Z" finished-at="2014-09-14T19:21:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="148" started-at="2014-09-14T19:21:17Z" finished-at="2014-09-14T19:21:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="156" started-at="2014-09-14T19:21:17Z" finished-at="2014-09-14T19:21:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="137" started-at="2014-09-14T19:21:17Z" finished-at="2014-09-14T19:21:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="272" started-at="2014-09-14T19:21:17Z" finished-at="2014-09-14T19:21:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="314" started-at="2014-09-14T19:21:17Z" finished-at="2014-09-14T19:21:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="341" started-at="2014-09-14T19:21:17Z" finished-at="2014-09-14T19:21:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="291" started-at="2014-09-14T19:21:17Z" finished-at="2014-09-14T19:21:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="158" started-at="2014-09-14T19:21:17Z" finished-at="2014-09-14T19:21:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="247" started-at="2014-09-14T19:21:17Z" finished-at="2014-09-14T19:21:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="140" started-at="2014-09-14T19:21:17Z" finished-at="2014-09-14T19:21:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="223" started-at="2014-09-14T19:21:17Z" finished-at="2014-09-14T19:21:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="159" started-at="2014-09-14T19:21:17Z" finished-at="2014-09-14T19:21:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="245" started-at="2014-09-14T19:21:17Z" finished-at="2014-09-14T19:21:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="154" started-at="2014-09-14T19:21:17Z" finished-at="2014-09-14T19:21:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="188" started-at="2014-09-14T19:21:17Z" finished-at="2014-09-14T19:21:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="149" started-at="2014-09-14T19:21:17Z" finished-at="2014-09-14T19:21:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="141" started-at="2014-09-14T19:21:17Z" finished-at="2014-09-14T19:21:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="191" started-at="2014-09-14T19:21:17Z" finished-at="2014-09-14T19:21:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="287" started-at="2014-09-14T19:21:17Z" finished-at="2014-09-14T19:21:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="230" started-at="2014-09-14T19:21:17Z" finished-at="2014-09-14T19:21:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="167" started-at="2014-09-14T19:21:17Z" finished-at="2014-09-14T19:21:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="151" started-at="2014-09-14T19:21:17Z" finished-at="2014-09-14T19:21:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="323" started-at="2014-09-14T19:21:17Z" finished-at="2014-09-14T19:21:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="201" started-at="2014-09-14T19:21:17Z" finished-at="2014-09-14T19:21:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="409" started-at="2014-09-14T19:21:17Z" finished-at="2014-09-14T19:21:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="193" started-at="2014-09-14T19:21:17Z" finished-at="2014-09-14T19:21:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="194" started-at="2014-09-14T19:21:17Z" finished-at="2014-09-14T19:21:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="185" started-at="2014-09-14T19:21:17Z" finished-at="2014-09-14T19:21:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="204" started-at="2014-09-14T19:21:17Z" finished-at="2014-09-14T19:21:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="147" started-at="2014-09-14T19:21:17Z" finished-at="2014-09-14T19:21:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="252" started-at="2014-09-14T19:21:17Z" finished-at="2014-09-14T19:21:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="138" started-at="2014-09-14T19:21:17Z" finished-at="2014-09-14T19:21:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="140" started-at="2014-09-14T19:21:17Z" finished-at="2014-09-14T19:21:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="284" started-at="2014-09-14T19:21:17Z" finished-at="2014-09-14T19:21:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="124" started-at="2014-09-14T19:21:17Z" finished-at="2014-09-14T19:21:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="206" started-at="2014-09-14T19:21:17Z" finished-at="2014-09-14T19:21:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="183" started-at="2014-09-14T19:21:17Z" finished-at="2014-09-14T19:21:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="210" started-at="2014-09-14T19:21:18Z" finished-at="2014-09-14T19:21:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="233" started-at="2014-09-14T19:21:18Z" finished-at="2014-09-14T19:21:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="210" started-at="2014-09-14T19:21:18Z" finished-at="2014-09-14T19:21:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="157" started-at="2014-09-14T19:21:18Z" finished-at="2014-09-14T19:21:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="139" started-at="2014-09-14T19:21:18Z" finished-at="2014-09-14T19:21:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="154" started-at="2014-09-14T19:21:18Z" finished-at="2014-09-14T19:21:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="200" started-at="2014-09-14T19:21:18Z" finished-at="2014-09-14T19:21:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="243" started-at="2014-09-14T19:21:18Z" finished-at="2014-09-14T19:21:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="198" started-at="2014-09-14T19:21:18Z" finished-at="2014-09-14T19:21:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="205" started-at="2014-09-14T19:21:18Z" finished-at="2014-09-14T19:21:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="211" started-at="2014-09-14T19:21:18Z" finished-at="2014-09-14T19:21:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="142" started-at="2014-09-14T19:21:18Z" finished-at="2014-09-14T19:21:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="236" started-at="2014-09-14T19:21:18Z" finished-at="2014-09-14T19:21:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="249" started-at="2014-09-14T19:21:18Z" finished-at="2014-09-14T19:21:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="196" started-at="2014-09-14T19:21:18Z" finished-at="2014-09-14T19:21:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="177" started-at="2014-09-14T19:21:18Z" finished-at="2014-09-14T19:21:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="250" started-at="2014-09-14T19:21:18Z" finished-at="2014-09-14T19:21:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="223" started-at="2014-09-14T19:21:18Z" finished-at="2014-09-14T19:21:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="213" started-at="2014-09-14T19:21:18Z" finished-at="2014-09-14T19:21:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="222" started-at="2014-09-14T19:21:18Z" finished-at="2014-09-14T19:21:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="183" started-at="2014-09-14T19:21:18Z" finished-at="2014-09-14T19:21:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="196" started-at="2014-09-14T19:21:18Z" finished-at="2014-09-14T19:21:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="138" started-at="2014-09-14T19:21:18Z" finished-at="2014-09-14T19:21:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="221" started-at="2014-09-14T19:21:18Z" finished-at="2014-09-14T19:21:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="146" started-at="2014-09-14T19:21:18Z" finished-at="2014-09-14T19:21:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="237" started-at="2014-09-14T19:21:18Z" finished-at="2014-09-14T19:21:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="212" started-at="2014-09-14T19:21:18Z" finished-at="2014-09-14T19:21:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="199" started-at="2014-09-14T19:21:18Z" finished-at="2014-09-14T19:21:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="163" started-at="2014-09-14T19:21:18Z" finished-at="2014-09-14T19:21:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="176" started-at="2014-09-14T19:21:18Z" finished-at="2014-09-14T19:21:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="137" started-at="2014-09-14T19:21:18Z" finished-at="2014-09-14T19:21:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="167" started-at="2014-09-14T19:21:18Z" finished-at="2014-09-14T19:21:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="185" started-at="2014-09-14T19:21:18Z" finished-at="2014-09-14T19:21:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="192" started-at="2014-09-14T19:21:18Z" finished-at="2014-09-14T19:21:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="232" started-at="2014-09-14T19:21:18Z" finished-at="2014-09-14T19:21:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="178" started-at="2014-09-14T19:21:18Z" finished-at="2014-09-14T19:21:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="265" started-at="2014-09-14T19:21:18Z" finished-at="2014-09-14T19:21:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="219" started-at="2014-09-14T19:21:18Z" finished-at="2014-09-14T19:21:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="193" started-at="2014-09-14T19:21:18Z" finished-at="2014-09-14T19:21:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="205" started-at="2014-09-14T19:21:18Z" finished-at="2014-09-14T19:21:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="229" started-at="2014-09-14T19:21:18Z" finished-at="2014-09-14T19:21:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="204" started-at="2014-09-14T19:21:18Z" finished-at="2014-09-14T19:21:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="142" started-at="2014-09-14T19:21:18Z" finished-at="2014-09-14T19:21:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="305" started-at="2014-09-14T19:21:18Z" finished-at="2014-09-14T19:21:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="128" started-at="2014-09-14T19:21:18Z" finished-at="2014-09-14T19:21:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="154" started-at="2014-09-14T19:21:18Z" finished-at="2014-09-14T19:21:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="284" started-at="2014-09-14T19:21:18Z" finished-at="2014-09-14T19:21:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="154" started-at="2014-09-14T19:21:18Z" finished-at="2014-09-14T19:21:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="190" started-at="2014-09-14T19:21:18Z" finished-at="2014-09-14T19:21:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="120" started-at="2014-09-14T19:21:18Z" finished-at="2014-09-14T19:21:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="171" started-at="2014-09-14T19:21:18Z" finished-at="2014-09-14T19:21:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="182" started-at="2014-09-14T19:21:19Z" finished-at="2014-09-14T19:21:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="242" started-at="2014-09-14T19:21:19Z" finished-at="2014-09-14T19:21:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="144" started-at="2014-09-14T19:21:19Z" finished-at="2014-09-14T19:21:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="173" started-at="2014-09-14T19:21:19Z" finished-at="2014-09-14T19:21:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="287" started-at="2014-09-14T19:21:19Z" finished-at="2014-09-14T19:21:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="170" started-at="2014-09-14T19:21:19Z" finished-at="2014-09-14T19:21:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="140" started-at="2014-09-14T19:21:19Z" finished-at="2014-09-14T19:21:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="194" started-at="2014-09-14T19:21:19Z" finished-at="2014-09-14T19:21:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="196" started-at="2014-09-14T19:21:19Z" finished-at="2014-09-14T19:21:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="179" started-at="2014-09-14T19:21:19Z" finished-at="2014-09-14T19:21:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="244" started-at="2014-09-14T19:21:19Z" finished-at="2014-09-14T19:21:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="154" started-at="2014-09-14T19:21:19Z" finished-at="2014-09-14T19:21:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="193" started-at="2014-09-14T19:21:19Z" finished-at="2014-09-14T19:21:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="201" started-at="2014-09-14T19:21:19Z" finished-at="2014-09-14T19:21:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="149" started-at="2014-09-14T19:21:19Z" finished-at="2014-09-14T19:21:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="172" started-at="2014-09-14T19:21:19Z" finished-at="2014-09-14T19:21:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="141" started-at="2014-09-14T19:21:19Z" finished-at="2014-09-14T19:21:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="163" started-at="2014-09-14T19:21:19Z" finished-at="2014-09-14T19:21:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="188" started-at="2014-09-14T19:21:19Z" finished-at="2014-09-14T19:21:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="271" started-at="2014-09-14T19:21:19Z" finished-at="2014-09-14T19:21:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="165" started-at="2014-09-14T19:21:19Z" finished-at="2014-09-14T19:21:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="253" started-at="2014-09-14T19:21:19Z" finished-at="2014-09-14T19:21:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="188" started-at="2014-09-14T19:21:19Z" finished-at="2014-09-14T19:21:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="143" started-at="2014-09-14T19:21:19Z" finished-at="2014-09-14T19:21:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="142" started-at="2014-09-14T19:21:19Z" finished-at="2014-09-14T19:21:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="244" started-at="2014-09-14T19:21:19Z" finished-at="2014-09-14T19:21:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="129" started-at="2014-09-14T19:21:19Z" finished-at="2014-09-14T19:21:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="240" started-at="2014-09-14T19:21:19Z" finished-at="2014-09-14T19:21:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="99" started-at="2014-09-14T19:21:19Z" finished-at="2014-09-14T19:21:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="163" started-at="2014-09-14T19:21:19Z" finished-at="2014-09-14T19:21:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="163" started-at="2014-09-14T19:21:19Z" finished-at="2014-09-14T19:21:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="193" started-at="2014-09-14T19:21:19Z" finished-at="2014-09-14T19:21:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="174" started-at="2014-09-14T19:21:19Z" finished-at="2014-09-14T19:21:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="259" started-at="2014-09-14T19:21:19Z" finished-at="2014-09-14T19:21:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="168" started-at="2014-09-14T19:21:19Z" finished-at="2014-09-14T19:21:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="205" started-at="2014-09-14T19:21:19Z" finished-at="2014-09-14T19:21:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="186" started-at="2014-09-14T19:21:19Z" finished-at="2014-09-14T19:21:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="217" started-at="2014-09-14T19:21:19Z" finished-at="2014-09-14T19:21:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="200" started-at="2014-09-14T19:21:19Z" finished-at="2014-09-14T19:21:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="257" started-at="2014-09-14T19:21:19Z" finished-at="2014-09-14T19:21:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="193" started-at="2014-09-14T19:21:19Z" finished-at="2014-09-14T19:21:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="191" started-at="2014-09-14T19:21:19Z" finished-at="2014-09-14T19:21:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="205" started-at="2014-09-14T19:21:19Z" finished-at="2014-09-14T19:21:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="246" started-at="2014-09-14T19:21:19Z" finished-at="2014-09-14T19:21:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="178" started-at="2014-09-14T19:21:19Z" finished-at="2014-09-14T19:21:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="100" started-at="2014-09-14T19:21:19Z" finished-at="2014-09-14T19:21:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="145" started-at="2014-09-14T19:21:19Z" finished-at="2014-09-14T19:21:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="238" started-at="2014-09-14T19:21:19Z" finished-at="2014-09-14T19:21:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="173" started-at="2014-09-14T19:21:19Z" finished-at="2014-09-14T19:21:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="233" started-at="2014-09-14T19:21:19Z" finished-at="2014-09-14T19:21:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="255" started-at="2014-09-14T19:21:19Z" finished-at="2014-09-14T19:21:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="146" started-at="2014-09-14T19:21:19Z" finished-at="2014-09-14T19:21:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="254" started-at="2014-09-14T19:21:20Z" finished-at="2014-09-14T19:21:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="112" started-at="2014-09-14T19:21:20Z" finished-at="2014-09-14T19:21:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="159" started-at="2014-09-14T19:21:20Z" finished-at="2014-09-14T19:21:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="248" started-at="2014-09-14T19:21:20Z" finished-at="2014-09-14T19:21:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="158" started-at="2014-09-14T19:21:20Z" finished-at="2014-09-14T19:21:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="192" started-at="2014-09-14T19:21:20Z" finished-at="2014-09-14T19:21:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="169" started-at="2014-09-14T19:21:20Z" finished-at="2014-09-14T19:21:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="184" started-at="2014-09-14T19:21:20Z" finished-at="2014-09-14T19:21:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="197" started-at="2014-09-14T19:21:20Z" finished-at="2014-09-14T19:21:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="225" started-at="2014-09-14T19:21:20Z" finished-at="2014-09-14T19:21:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="178" started-at="2014-09-14T19:21:20Z" finished-at="2014-09-14T19:21:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="173" started-at="2014-09-14T19:21:20Z" finished-at="2014-09-14T19:21:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="139" started-at="2014-09-14T19:21:20Z" finished-at="2014-09-14T19:21:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="342" started-at="2014-09-14T19:21:20Z" finished-at="2014-09-14T19:21:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="189" started-at="2014-09-14T19:21:20Z" finished-at="2014-09-14T19:21:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="128" started-at="2014-09-14T19:21:20Z" finished-at="2014-09-14T19:21:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="260" started-at="2014-09-14T19:21:20Z" finished-at="2014-09-14T19:21:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="181" started-at="2014-09-14T19:21:20Z" finished-at="2014-09-14T19:21:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="183" started-at="2014-09-14T19:21:20Z" finished-at="2014-09-14T19:21:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="212" started-at="2014-09-14T19:21:20Z" finished-at="2014-09-14T19:21:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="162" started-at="2014-09-14T19:21:20Z" finished-at="2014-09-14T19:21:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="175" started-at="2014-09-14T19:21:20Z" finished-at="2014-09-14T19:21:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="340" started-at="2014-09-14T19:21:20Z" finished-at="2014-09-14T19:21:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="233" started-at="2014-09-14T19:21:20Z" finished-at="2014-09-14T19:21:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="168" started-at="2014-09-14T19:21:20Z" finished-at="2014-09-14T19:21:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="187" started-at="2014-09-14T19:21:20Z" finished-at="2014-09-14T19:21:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="203" started-at="2014-09-14T19:21:20Z" finished-at="2014-09-14T19:21:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="222" started-at="2014-09-14T19:21:20Z" finished-at="2014-09-14T19:21:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="131" started-at="2014-09-14T19:21:20Z" finished-at="2014-09-14T19:21:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="242" started-at="2014-09-14T19:21:20Z" finished-at="2014-09-14T19:21:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="215" started-at="2014-09-14T19:21:20Z" finished-at="2014-09-14T19:21:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="137" started-at="2014-09-14T19:21:20Z" finished-at="2014-09-14T19:21:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="135" started-at="2014-09-14T19:21:20Z" finished-at="2014-09-14T19:21:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="293" started-at="2014-09-14T19:21:20Z" finished-at="2014-09-14T19:21:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="209" started-at="2014-09-14T19:21:20Z" finished-at="2014-09-14T19:21:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="200" started-at="2014-09-14T19:21:20Z" finished-at="2014-09-14T19:21:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="296" started-at="2014-09-14T19:21:20Z" finished-at="2014-09-14T19:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="223" started-at="2014-09-14T19:21:20Z" finished-at="2014-09-14T19:21:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="153" started-at="2014-09-14T19:21:20Z" finished-at="2014-09-14T19:21:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="213" started-at="2014-09-14T19:21:20Z" finished-at="2014-09-14T19:21:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="208" started-at="2014-09-14T19:21:20Z" finished-at="2014-09-14T19:21:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="153" started-at="2014-09-14T19:21:20Z" finished-at="2014-09-14T19:21:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="330" started-at="2014-09-14T19:21:20Z" finished-at="2014-09-14T19:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="116" started-at="2014-09-14T19:21:20Z" finished-at="2014-09-14T19:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="263" started-at="2014-09-14T19:21:20Z" finished-at="2014-09-14T19:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="126" started-at="2014-09-14T19:21:20Z" finished-at="2014-09-14T19:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="181" started-at="2014-09-14T19:21:20Z" finished-at="2014-09-14T19:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="197" started-at="2014-09-14T19:21:20Z" finished-at="2014-09-14T19:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="215" started-at="2014-09-14T19:21:20Z" finished-at="2014-09-14T19:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="142" started-at="2014-09-14T19:21:20Z" finished-at="2014-09-14T19:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="153" started-at="2014-09-14T19:21:20Z" finished-at="2014-09-14T19:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="145" started-at="2014-09-14T19:21:21Z" finished-at="2014-09-14T19:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="167" started-at="2014-09-14T19:21:21Z" finished-at="2014-09-14T19:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="233" started-at="2014-09-14T19:21:21Z" finished-at="2014-09-14T19:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="166" started-at="2014-09-14T19:21:21Z" finished-at="2014-09-14T19:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="180" started-at="2014-09-14T19:21:21Z" finished-at="2014-09-14T19:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="165" started-at="2014-09-14T19:21:21Z" finished-at="2014-09-14T19:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="115" started-at="2014-09-14T19:21:21Z" finished-at="2014-09-14T19:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="161" started-at="2014-09-14T19:21:21Z" finished-at="2014-09-14T19:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="251" started-at="2014-09-14T19:21:21Z" finished-at="2014-09-14T19:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="161" started-at="2014-09-14T19:21:21Z" finished-at="2014-09-14T19:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="177" started-at="2014-09-14T19:21:21Z" finished-at="2014-09-14T19:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="167" started-at="2014-09-14T19:21:21Z" finished-at="2014-09-14T19:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="195" started-at="2014-09-14T19:21:21Z" finished-at="2014-09-14T19:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="172" started-at="2014-09-14T19:21:21Z" finished-at="2014-09-14T19:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="176" started-at="2014-09-14T19:21:21Z" finished-at="2014-09-14T19:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="300" started-at="2014-09-14T19:21:21Z" finished-at="2014-09-14T19:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="217" started-at="2014-09-14T19:21:21Z" finished-at="2014-09-14T19:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="155" started-at="2014-09-14T19:21:21Z" finished-at="2014-09-14T19:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="127" started-at="2014-09-14T19:21:21Z" finished-at="2014-09-14T19:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="206" started-at="2014-09-14T19:21:21Z" finished-at="2014-09-14T19:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="182" started-at="2014-09-14T19:21:21Z" finished-at="2014-09-14T19:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="194" started-at="2014-09-14T19:21:21Z" finished-at="2014-09-14T19:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="183" started-at="2014-09-14T19:21:21Z" finished-at="2014-09-14T19:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="144" started-at="2014-09-14T19:21:21Z" finished-at="2014-09-14T19:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="201" started-at="2014-09-14T19:21:21Z" finished-at="2014-09-14T19:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="143" started-at="2014-09-14T19:21:21Z" finished-at="2014-09-14T19:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="188" started-at="2014-09-14T19:21:21Z" finished-at="2014-09-14T19:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="163" started-at="2014-09-14T19:21:21Z" finished-at="2014-09-14T19:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="191" started-at="2014-09-14T19:21:21Z" finished-at="2014-09-14T19:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="182" started-at="2014-09-14T19:21:21Z" finished-at="2014-09-14T19:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="263" started-at="2014-09-14T19:21:21Z" finished-at="2014-09-14T19:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="234" started-at="2014-09-14T19:21:21Z" finished-at="2014-09-14T19:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="257" started-at="2014-09-14T19:21:21Z" finished-at="2014-09-14T19:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="203" started-at="2014-09-14T19:21:21Z" finished-at="2014-09-14T19:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="226" started-at="2014-09-14T19:21:21Z" finished-at="2014-09-14T19:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="222" started-at="2014-09-14T19:21:21Z" finished-at="2014-09-14T19:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="190" started-at="2014-09-14T19:21:21Z" finished-at="2014-09-14T19:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="194" started-at="2014-09-14T19:21:21Z" finished-at="2014-09-14T19:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="174" started-at="2014-09-14T19:21:21Z" finished-at="2014-09-14T19:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="187" started-at="2014-09-14T19:21:21Z" finished-at="2014-09-14T19:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="149" started-at="2014-09-14T19:21:21Z" finished-at="2014-09-14T19:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="147" started-at="2014-09-14T19:21:21Z" finished-at="2014-09-14T19:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="162" started-at="2014-09-14T19:21:21Z" finished-at="2014-09-14T19:21:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="173" started-at="2014-09-14T19:21:21Z" finished-at="2014-09-14T19:21:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="181" started-at="2014-09-14T19:21:21Z" finished-at="2014-09-14T19:21:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="214" started-at="2014-09-14T19:21:21Z" finished-at="2014-09-14T19:21:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="193" started-at="2014-09-14T19:21:21Z" finished-at="2014-09-14T19:21:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="211" started-at="2014-09-14T19:21:21Z" finished-at="2014-09-14T19:21:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="210" started-at="2014-09-14T19:21:21Z" finished-at="2014-09-14T19:21:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="174" started-at="2014-09-14T19:21:21Z" finished-at="2014-09-14T19:21:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="185" started-at="2014-09-14T19:21:21Z" finished-at="2014-09-14T19:21:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="222" started-at="2014-09-14T19:21:21Z" finished-at="2014-09-14T19:21:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="243" started-at="2014-09-14T19:21:22Z" finished-at="2014-09-14T19:21:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="132" started-at="2014-09-14T19:21:22Z" finished-at="2014-09-14T19:21:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="135" started-at="2014-09-14T19:21:22Z" finished-at="2014-09-14T19:21:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="209" started-at="2014-09-14T19:21:22Z" finished-at="2014-09-14T19:21:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="332" started-at="2014-09-14T19:21:22Z" finished-at="2014-09-14T19:21:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="339" started-at="2014-09-14T19:21:22Z" finished-at="2014-09-14T19:21:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="125" started-at="2014-09-14T19:21:22Z" finished-at="2014-09-14T19:21:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="126" started-at="2014-09-14T19:21:22Z" finished-at="2014-09-14T19:21:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="140" started-at="2014-09-14T19:21:22Z" finished-at="2014-09-14T19:21:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="203" started-at="2014-09-14T19:21:22Z" finished-at="2014-09-14T19:21:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="126" started-at="2014-09-14T19:21:22Z" finished-at="2014-09-14T19:21:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="123" started-at="2014-09-14T19:21:22Z" finished-at="2014-09-14T19:21:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="259" started-at="2014-09-14T19:21:22Z" finished-at="2014-09-14T19:21:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="154" started-at="2014-09-14T19:21:22Z" finished-at="2014-09-14T19:21:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="196" started-at="2014-09-14T19:21:22Z" finished-at="2014-09-14T19:21:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="111" started-at="2014-09-14T19:21:22Z" finished-at="2014-09-14T19:21:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="138" started-at="2014-09-14T19:21:22Z" finished-at="2014-09-14T19:21:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="249" started-at="2014-09-14T19:21:22Z" finished-at="2014-09-14T19:21:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="148" started-at="2014-09-14T19:21:22Z" finished-at="2014-09-14T19:21:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="226" started-at="2014-09-14T19:21:22Z" finished-at="2014-09-14T19:21:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="198" started-at="2014-09-14T19:21:22Z" finished-at="2014-09-14T19:21:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="162" started-at="2014-09-14T19:21:22Z" finished-at="2014-09-14T19:21:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="192" started-at="2014-09-14T19:21:22Z" finished-at="2014-09-14T19:21:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="160" started-at="2014-09-14T19:21:22Z" finished-at="2014-09-14T19:21:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="156" started-at="2014-09-14T19:21:22Z" finished-at="2014-09-14T19:21:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="163" started-at="2014-09-14T19:21:22Z" finished-at="2014-09-14T19:21:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="192" started-at="2014-09-14T19:21:22Z" finished-at="2014-09-14T19:21:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="148" started-at="2014-09-14T19:21:22Z" finished-at="2014-09-14T19:21:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="154" started-at="2014-09-14T19:21:22Z" finished-at="2014-09-14T19:21:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="228" started-at="2014-09-14T19:21:22Z" finished-at="2014-09-14T19:21:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="286" started-at="2014-09-14T19:21:22Z" finished-at="2014-09-14T19:21:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="205" started-at="2014-09-14T19:21:22Z" finished-at="2014-09-14T19:21:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="186" started-at="2014-09-14T19:21:22Z" finished-at="2014-09-14T19:21:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="191" started-at="2014-09-14T19:21:22Z" finished-at="2014-09-14T19:21:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="287" started-at="2014-09-14T19:21:22Z" finished-at="2014-09-14T19:21:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="216" started-at="2014-09-14T19:21:22Z" finished-at="2014-09-14T19:21:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="271" started-at="2014-09-14T19:21:22Z" finished-at="2014-09-14T19:21:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="169" started-at="2014-09-14T19:21:22Z" finished-at="2014-09-14T19:21:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="252" started-at="2014-09-14T19:21:22Z" finished-at="2014-09-14T19:21:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="181" started-at="2014-09-14T19:21:22Z" finished-at="2014-09-14T19:21:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="199" started-at="2014-09-14T19:21:22Z" finished-at="2014-09-14T19:21:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="138" started-at="2014-09-14T19:21:22Z" finished-at="2014-09-14T19:21:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="197" started-at="2014-09-14T19:21:22Z" finished-at="2014-09-14T19:21:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="180" started-at="2014-09-14T19:21:22Z" finished-at="2014-09-14T19:21:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="124" started-at="2014-09-14T19:21:22Z" finished-at="2014-09-14T19:21:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="160" started-at="2014-09-14T19:21:22Z" finished-at="2014-09-14T19:21:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="149" started-at="2014-09-14T19:21:22Z" finished-at="2014-09-14T19:21:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="282" started-at="2014-09-14T19:21:22Z" finished-at="2014-09-14T19:21:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="186" started-at="2014-09-14T19:21:22Z" finished-at="2014-09-14T19:21:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="329" started-at="2014-09-14T19:21:22Z" finished-at="2014-09-14T19:21:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="302" started-at="2014-09-14T19:21:22Z" finished-at="2014-09-14T19:21:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="128" started-at="2014-09-14T19:21:22Z" finished-at="2014-09-14T19:21:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="157" started-at="2014-09-14T19:21:22Z" finished-at="2014-09-14T19:21:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="132" started-at="2014-09-14T19:21:23Z" finished-at="2014-09-14T19:21:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="235" started-at="2014-09-14T19:21:23Z" finished-at="2014-09-14T19:21:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="151" started-at="2014-09-14T19:21:23Z" finished-at="2014-09-14T19:21:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="191" started-at="2014-09-14T19:21:23Z" finished-at="2014-09-14T19:21:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="118" started-at="2014-09-14T19:21:23Z" finished-at="2014-09-14T19:21:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="126" started-at="2014-09-14T19:21:23Z" finished-at="2014-09-14T19:21:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="204" started-at="2014-09-14T19:21:23Z" finished-at="2014-09-14T19:21:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="155" started-at="2014-09-14T19:21:23Z" finished-at="2014-09-14T19:21:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="208" started-at="2014-09-14T19:21:23Z" finished-at="2014-09-14T19:21:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="168" started-at="2014-09-14T19:21:23Z" finished-at="2014-09-14T19:21:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="149" started-at="2014-09-14T19:21:23Z" finished-at="2014-09-14T19:21:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="294" started-at="2014-09-14T19:21:23Z" finished-at="2014-09-14T19:21:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="231" started-at="2014-09-14T19:21:23Z" finished-at="2014-09-14T19:21:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="130" started-at="2014-09-14T19:21:23Z" finished-at="2014-09-14T19:21:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="190" started-at="2014-09-14T19:21:23Z" finished-at="2014-09-14T19:21:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="244" started-at="2014-09-14T19:21:23Z" finished-at="2014-09-14T19:21:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="225" started-at="2014-09-14T19:21:23Z" finished-at="2014-09-14T19:21:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="132" started-at="2014-09-14T19:21:23Z" finished-at="2014-09-14T19:21:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="181" started-at="2014-09-14T19:21:23Z" finished-at="2014-09-14T19:21:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="139" started-at="2014-09-14T19:21:23Z" finished-at="2014-09-14T19:21:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="145" started-at="2014-09-14T19:21:23Z" finished-at="2014-09-14T19:21:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="132" started-at="2014-09-14T19:21:23Z" finished-at="2014-09-14T19:21:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="221" started-at="2014-09-14T19:21:23Z" finished-at="2014-09-14T19:21:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="223" started-at="2014-09-14T19:21:23Z" finished-at="2014-09-14T19:21:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="163" started-at="2014-09-14T19:21:23Z" finished-at="2014-09-14T19:21:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="183" started-at="2014-09-14T19:21:23Z" finished-at="2014-09-14T19:21:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="244" started-at="2014-09-14T19:21:23Z" finished-at="2014-09-14T19:21:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="135" started-at="2014-09-14T19:21:23Z" finished-at="2014-09-14T19:21:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="154" started-at="2014-09-14T19:21:23Z" finished-at="2014-09-14T19:21:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="125" started-at="2014-09-14T19:21:23Z" finished-at="2014-09-14T19:21:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="139" started-at="2014-09-14T19:21:23Z" finished-at="2014-09-14T19:21:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="166" started-at="2014-09-14T19:21:23Z" finished-at="2014-09-14T19:21:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="139" started-at="2014-09-14T19:21:23Z" finished-at="2014-09-14T19:21:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="289" started-at="2014-09-14T19:21:23Z" finished-at="2014-09-14T19:21:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="270" started-at="2014-09-14T19:21:23Z" finished-at="2014-09-14T19:21:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="218" started-at="2014-09-14T19:21:23Z" finished-at="2014-09-14T19:21:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="241" started-at="2014-09-14T19:21:23Z" finished-at="2014-09-14T19:21:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="205" started-at="2014-09-14T19:21:23Z" finished-at="2014-09-14T19:21:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="197" started-at="2014-09-14T19:21:23Z" finished-at="2014-09-14T19:21:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="309" started-at="2014-09-14T19:21:23Z" finished-at="2014-09-14T19:21:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="258" started-at="2014-09-14T19:21:23Z" finished-at="2014-09-14T19:21:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="145" started-at="2014-09-14T19:21:23Z" finished-at="2014-09-14T19:21:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="236" started-at="2014-09-14T19:21:23Z" finished-at="2014-09-14T19:21:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="271" started-at="2014-09-14T19:21:23Z" finished-at="2014-09-14T19:21:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="152" started-at="2014-09-14T19:21:23Z" finished-at="2014-09-14T19:21:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="170" started-at="2014-09-14T19:21:23Z" finished-at="2014-09-14T19:21:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="186" started-at="2014-09-14T19:21:23Z" finished-at="2014-09-14T19:21:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="158" started-at="2014-09-14T19:21:23Z" finished-at="2014-09-14T19:21:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="139" started-at="2014-09-14T19:21:23Z" finished-at="2014-09-14T19:21:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="179" started-at="2014-09-14T19:21:23Z" finished-at="2014-09-14T19:21:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="162" started-at="2014-09-14T19:21:23Z" finished-at="2014-09-14T19:21:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="142" started-at="2014-09-14T19:21:24Z" finished-at="2014-09-14T19:21:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="171" started-at="2014-09-14T19:21:24Z" finished-at="2014-09-14T19:21:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="234" started-at="2014-09-14T19:21:24Z" finished-at="2014-09-14T19:21:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="148" started-at="2014-09-14T19:21:24Z" finished-at="2014-09-14T19:21:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="232" started-at="2014-09-14T19:21:24Z" finished-at="2014-09-14T19:21:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="288" started-at="2014-09-14T19:21:24Z" finished-at="2014-09-14T19:21:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="273" started-at="2014-09-14T19:21:24Z" finished-at="2014-09-14T19:21:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="308" started-at="2014-09-14T19:21:24Z" finished-at="2014-09-14T19:21:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="122" started-at="2014-09-14T19:21:24Z" finished-at="2014-09-14T19:21:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="140" started-at="2014-09-14T19:21:24Z" finished-at="2014-09-14T19:21:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="241" started-at="2014-09-14T19:21:24Z" finished-at="2014-09-14T19:21:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="162" started-at="2014-09-14T19:21:24Z" finished-at="2014-09-14T19:21:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="118" started-at="2014-09-14T19:21:24Z" finished-at="2014-09-14T19:21:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="152" started-at="2014-09-14T19:21:24Z" finished-at="2014-09-14T19:21:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="245" started-at="2014-09-14T19:21:24Z" finished-at="2014-09-14T19:21:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="120" started-at="2014-09-14T19:21:24Z" finished-at="2014-09-14T19:21:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="109" started-at="2014-09-14T19:21:24Z" finished-at="2014-09-14T19:21:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="160" started-at="2014-09-14T19:21:24Z" finished-at="2014-09-14T19:21:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="155" started-at="2014-09-14T19:21:24Z" finished-at="2014-09-14T19:21:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="186" started-at="2014-09-14T19:21:24Z" finished-at="2014-09-14T19:21:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="189" started-at="2014-09-14T19:21:24Z" finished-at="2014-09-14T19:21:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="223" started-at="2014-09-14T19:21:24Z" finished-at="2014-09-14T19:21:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="192" started-at="2014-09-14T19:21:24Z" finished-at="2014-09-14T19:21:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="173" started-at="2014-09-14T19:21:24Z" finished-at="2014-09-14T19:21:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="379" started-at="2014-09-14T19:21:24Z" finished-at="2014-09-14T19:21:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="99" started-at="2014-09-14T19:21:24Z" finished-at="2014-09-14T19:21:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="175" started-at="2014-09-14T19:21:24Z" finished-at="2014-09-14T19:21:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="139" started-at="2014-09-14T19:21:24Z" finished-at="2014-09-14T19:21:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="293" started-at="2014-09-14T19:21:24Z" finished-at="2014-09-14T19:21:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="170" started-at="2014-09-14T19:21:24Z" finished-at="2014-09-14T19:21:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="123" started-at="2014-09-14T19:21:24Z" finished-at="2014-09-14T19:21:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="267" started-at="2014-09-14T19:21:24Z" finished-at="2014-09-14T19:21:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="188" started-at="2014-09-14T19:21:24Z" finished-at="2014-09-14T19:21:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="214" started-at="2014-09-14T19:21:24Z" finished-at="2014-09-14T19:21:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="234" started-at="2014-09-14T19:21:24Z" finished-at="2014-09-14T19:21:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="237" started-at="2014-09-14T19:21:24Z" finished-at="2014-09-14T19:21:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="169" started-at="2014-09-14T19:21:24Z" finished-at="2014-09-14T19:21:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="240" started-at="2014-09-14T19:21:24Z" finished-at="2014-09-14T19:21:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="180" started-at="2014-09-14T19:21:24Z" finished-at="2014-09-14T19:21:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="164" started-at="2014-09-14T19:21:24Z" finished-at="2014-09-14T19:21:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="166" started-at="2014-09-14T19:21:24Z" finished-at="2014-09-14T19:21:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="205" started-at="2014-09-14T19:21:24Z" finished-at="2014-09-14T19:21:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="343" started-at="2014-09-14T19:21:24Z" finished-at="2014-09-14T19:21:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="267" started-at="2014-09-14T19:21:24Z" finished-at="2014-09-14T19:21:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="165" started-at="2014-09-14T19:21:24Z" finished-at="2014-09-14T19:21:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="138" started-at="2014-09-14T19:21:24Z" finished-at="2014-09-14T19:21:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="143" started-at="2014-09-14T19:21:24Z" finished-at="2014-09-14T19:21:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="252" started-at="2014-09-14T19:21:24Z" finished-at="2014-09-14T19:21:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="127" started-at="2014-09-14T19:21:24Z" finished-at="2014-09-14T19:21:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="148" started-at="2014-09-14T19:21:24Z" finished-at="2014-09-14T19:21:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="145" started-at="2014-09-14T19:21:24Z" finished-at="2014-09-14T19:21:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="182" started-at="2014-09-14T19:21:25Z" finished-at="2014-09-14T19:21:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="151" started-at="2014-09-14T19:21:25Z" finished-at="2014-09-14T19:21:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="227" started-at="2014-09-14T19:21:25Z" finished-at="2014-09-14T19:21:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="255" started-at="2014-09-14T19:21:25Z" finished-at="2014-09-14T19:21:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="197" started-at="2014-09-14T19:21:25Z" finished-at="2014-09-14T19:21:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="150" started-at="2014-09-14T19:21:25Z" finished-at="2014-09-14T19:21:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="188" started-at="2014-09-14T19:21:25Z" finished-at="2014-09-14T19:21:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="160" started-at="2014-09-14T19:21:25Z" finished-at="2014-09-14T19:21:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="225" started-at="2014-09-14T19:21:25Z" finished-at="2014-09-14T19:21:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="112" started-at="2014-09-14T19:21:25Z" finished-at="2014-09-14T19:21:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="182" started-at="2014-09-14T19:21:25Z" finished-at="2014-09-14T19:21:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="165" started-at="2014-09-14T19:21:25Z" finished-at="2014-09-14T19:21:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="226" started-at="2014-09-14T19:21:25Z" finished-at="2014-09-14T19:21:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="266" started-at="2014-09-14T19:21:25Z" finished-at="2014-09-14T19:21:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="189" started-at="2014-09-14T19:21:25Z" finished-at="2014-09-14T19:21:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="173" started-at="2014-09-14T19:21:25Z" finished-at="2014-09-14T19:21:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="148" started-at="2014-09-14T19:21:25Z" finished-at="2014-09-14T19:21:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="126" started-at="2014-09-14T19:21:25Z" finished-at="2014-09-14T19:21:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="296" started-at="2014-09-14T19:21:25Z" finished-at="2014-09-14T19:21:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="209" started-at="2014-09-14T19:21:25Z" finished-at="2014-09-14T19:21:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="258" started-at="2014-09-14T19:21:25Z" finished-at="2014-09-14T19:21:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="135" started-at="2014-09-14T19:21:25Z" finished-at="2014-09-14T19:21:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="141" started-at="2014-09-14T19:21:25Z" finished-at="2014-09-14T19:21:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="120" started-at="2014-09-14T19:21:25Z" finished-at="2014-09-14T19:21:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="221" started-at="2014-09-14T19:21:25Z" finished-at="2014-09-14T19:21:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="177" started-at="2014-09-14T19:21:25Z" finished-at="2014-09-14T19:21:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="312" started-at="2014-09-14T19:21:25Z" finished-at="2014-09-14T19:21:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="265" started-at="2014-09-14T19:21:25Z" finished-at="2014-09-14T19:21:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="111" started-at="2014-09-14T19:21:25Z" finished-at="2014-09-14T19:21:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="137" started-at="2014-09-14T19:21:25Z" finished-at="2014-09-14T19:21:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="214" started-at="2014-09-14T19:21:25Z" finished-at="2014-09-14T19:21:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="212" started-at="2014-09-14T19:21:25Z" finished-at="2014-09-14T19:21:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="184" started-at="2014-09-14T19:21:25Z" finished-at="2014-09-14T19:21:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="244" started-at="2014-09-14T19:21:25Z" finished-at="2014-09-14T19:21:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="205" started-at="2014-09-14T19:21:25Z" finished-at="2014-09-14T19:21:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="176" started-at="2014-09-14T19:21:25Z" finished-at="2014-09-14T19:21:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="191" started-at="2014-09-14T19:21:25Z" finished-at="2014-09-14T19:21:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="181" started-at="2014-09-14T19:21:25Z" finished-at="2014-09-14T19:21:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="203" started-at="2014-09-14T19:21:25Z" finished-at="2014-09-14T19:21:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="157" started-at="2014-09-14T19:21:25Z" finished-at="2014-09-14T19:21:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="201" started-at="2014-09-14T19:21:25Z" finished-at="2014-09-14T19:21:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="260" started-at="2014-09-14T19:21:25Z" finished-at="2014-09-14T19:21:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="181" started-at="2014-09-14T19:21:25Z" finished-at="2014-09-14T19:21:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="175" started-at="2014-09-14T19:21:25Z" finished-at="2014-09-14T19:21:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="150" started-at="2014-09-14T19:21:25Z" finished-at="2014-09-14T19:21:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="216" started-at="2014-09-14T19:21:25Z" finished-at="2014-09-14T19:21:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="168" started-at="2014-09-14T19:21:25Z" finished-at="2014-09-14T19:21:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="134" started-at="2014-09-14T19:21:25Z" finished-at="2014-09-14T19:21:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="173" started-at="2014-09-14T19:21:25Z" finished-at="2014-09-14T19:21:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="138" started-at="2014-09-14T19:21:25Z" finished-at="2014-09-14T19:21:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="191" started-at="2014-09-14T19:21:25Z" finished-at="2014-09-14T19:21:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="226" started-at="2014-09-14T19:21:25Z" finished-at="2014-09-14T19:21:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="209" started-at="2014-09-14T19:21:25Z" finished-at="2014-09-14T19:21:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="153" started-at="2014-09-14T19:21:25Z" finished-at="2014-09-14T19:21:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="231" started-at="2014-09-14T19:21:25Z" finished-at="2014-09-14T19:21:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="188" started-at="2014-09-14T19:21:26Z" finished-at="2014-09-14T19:21:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="167" started-at="2014-09-14T19:21:26Z" finished-at="2014-09-14T19:21:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="204" started-at="2014-09-14T19:21:26Z" finished-at="2014-09-14T19:21:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="147" started-at="2014-09-14T19:21:26Z" finished-at="2014-09-14T19:21:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="202" started-at="2014-09-14T19:21:26Z" finished-at="2014-09-14T19:21:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="167" started-at="2014-09-14T19:21:26Z" finished-at="2014-09-14T19:21:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="220" started-at="2014-09-14T19:21:26Z" finished-at="2014-09-14T19:21:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="168" started-at="2014-09-14T19:21:26Z" finished-at="2014-09-14T19:21:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="135" started-at="2014-09-14T19:21:26Z" finished-at="2014-09-14T19:21:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="177" started-at="2014-09-14T19:21:26Z" finished-at="2014-09-14T19:21:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="147" started-at="2014-09-14T19:21:26Z" finished-at="2014-09-14T19:21:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="181" started-at="2014-09-14T19:21:26Z" finished-at="2014-09-14T19:21:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="207" started-at="2014-09-14T19:21:26Z" finished-at="2014-09-14T19:21:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="157" started-at="2014-09-14T19:21:26Z" finished-at="2014-09-14T19:21:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="257" started-at="2014-09-14T19:21:26Z" finished-at="2014-09-14T19:21:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="227" started-at="2014-09-14T19:21:26Z" finished-at="2014-09-14T19:21:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="144" started-at="2014-09-14T19:21:26Z" finished-at="2014-09-14T19:21:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="166" started-at="2014-09-14T19:21:26Z" finished-at="2014-09-14T19:21:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="164" started-at="2014-09-14T19:21:26Z" finished-at="2014-09-14T19:21:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="108" started-at="2014-09-14T19:21:26Z" finished-at="2014-09-14T19:21:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="151" started-at="2014-09-14T19:21:26Z" finished-at="2014-09-14T19:21:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="176" started-at="2014-09-14T19:21:26Z" finished-at="2014-09-14T19:21:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="220" started-at="2014-09-14T19:21:26Z" finished-at="2014-09-14T19:21:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="151" started-at="2014-09-14T19:21:26Z" finished-at="2014-09-14T19:21:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="298" started-at="2014-09-14T19:21:26Z" finished-at="2014-09-14T19:21:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="139" started-at="2014-09-14T19:21:26Z" finished-at="2014-09-14T19:21:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="317" started-at="2014-09-14T19:21:26Z" finished-at="2014-09-14T19:21:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="139" started-at="2014-09-14T19:21:26Z" finished-at="2014-09-14T19:21:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="183" started-at="2014-09-14T19:21:26Z" finished-at="2014-09-14T19:21:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="177" started-at="2014-09-14T19:21:26Z" finished-at="2014-09-14T19:21:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="232" started-at="2014-09-14T19:21:26Z" finished-at="2014-09-14T19:21:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="173" started-at="2014-09-14T19:21:26Z" finished-at="2014-09-14T19:21:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="216" started-at="2014-09-14T19:21:26Z" finished-at="2014-09-14T19:21:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="173" started-at="2014-09-14T19:21:26Z" finished-at="2014-09-14T19:21:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="199" started-at="2014-09-14T19:21:26Z" finished-at="2014-09-14T19:21:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="200" started-at="2014-09-14T19:21:26Z" finished-at="2014-09-14T19:21:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="184" started-at="2014-09-14T19:21:26Z" finished-at="2014-09-14T19:21:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="303" started-at="2014-09-14T19:21:26Z" finished-at="2014-09-14T19:21:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="229" started-at="2014-09-14T19:21:26Z" finished-at="2014-09-14T19:21:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="150" started-at="2014-09-14T19:21:26Z" finished-at="2014-09-14T19:21:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="152" started-at="2014-09-14T19:21:26Z" finished-at="2014-09-14T19:21:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="149" started-at="2014-09-14T19:21:26Z" finished-at="2014-09-14T19:21:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="213" started-at="2014-09-14T19:21:26Z" finished-at="2014-09-14T19:21:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="144" started-at="2014-09-14T19:21:26Z" finished-at="2014-09-14T19:21:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="270" started-at="2014-09-14T19:21:26Z" finished-at="2014-09-14T19:21:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="178" started-at="2014-09-14T19:21:26Z" finished-at="2014-09-14T19:21:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="228" started-at="2014-09-14T19:21:26Z" finished-at="2014-09-14T19:21:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="164" started-at="2014-09-14T19:21:26Z" finished-at="2014-09-14T19:21:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="173" started-at="2014-09-14T19:21:26Z" finished-at="2014-09-14T19:21:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="112" started-at="2014-09-14T19:21:26Z" finished-at="2014-09-14T19:21:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="195" started-at="2014-09-14T19:21:26Z" finished-at="2014-09-14T19:21:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="158" started-at="2014-09-14T19:21:26Z" finished-at="2014-09-14T19:21:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="833" started-at="2014-09-14T19:21:27Z" finished-at="2014-09-14T19:21:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="147" started-at="2014-09-14T19:21:27Z" finished-at="2014-09-14T19:21:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="168" started-at="2014-09-14T19:21:27Z" finished-at="2014-09-14T19:21:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="165" started-at="2014-09-14T19:21:27Z" finished-at="2014-09-14T19:21:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="140" started-at="2014-09-14T19:21:27Z" finished-at="2014-09-14T19:21:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="168" started-at="2014-09-14T19:21:27Z" finished-at="2014-09-14T19:21:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="146" started-at="2014-09-14T19:21:27Z" finished-at="2014-09-14T19:21:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="146" started-at="2014-09-14T19:21:27Z" finished-at="2014-09-14T19:21:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="156" started-at="2014-09-14T19:21:27Z" finished-at="2014-09-14T19:21:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="192" started-at="2014-09-14T19:21:27Z" finished-at="2014-09-14T19:21:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="254" started-at="2014-09-14T19:21:27Z" finished-at="2014-09-14T19:21:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="123" started-at="2014-09-14T19:21:27Z" finished-at="2014-09-14T19:21:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="149" started-at="2014-09-14T19:21:27Z" finished-at="2014-09-14T19:21:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="235" started-at="2014-09-14T19:21:27Z" finished-at="2014-09-14T19:21:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="291" started-at="2014-09-14T19:21:27Z" finished-at="2014-09-14T19:21:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="115" started-at="2014-09-14T19:21:27Z" finished-at="2014-09-14T19:21:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="128" started-at="2014-09-14T19:21:27Z" finished-at="2014-09-14T19:21:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="140" started-at="2014-09-14T19:21:27Z" finished-at="2014-09-14T19:21:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="124" started-at="2014-09-14T19:21:27Z" finished-at="2014-09-14T19:21:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="162" started-at="2014-09-14T19:21:27Z" finished-at="2014-09-14T19:21:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="133" started-at="2014-09-14T19:21:27Z" finished-at="2014-09-14T19:21:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="147" started-at="2014-09-14T19:21:27Z" finished-at="2014-09-14T19:21:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="154" started-at="2014-09-14T19:21:27Z" finished-at="2014-09-14T19:21:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="147" started-at="2014-09-14T19:21:27Z" finished-at="2014-09-14T19:21:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="352" started-at="2014-09-14T19:21:27Z" finished-at="2014-09-14T19:21:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="161" started-at="2014-09-14T19:21:27Z" finished-at="2014-09-14T19:21:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="331" started-at="2014-09-14T19:21:27Z" finished-at="2014-09-14T19:21:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="294" started-at="2014-09-14T19:21:27Z" finished-at="2014-09-14T19:21:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="267" started-at="2014-09-14T19:21:27Z" finished-at="2014-09-14T19:21:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="213" started-at="2014-09-14T19:21:27Z" finished-at="2014-09-14T19:21:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="212" started-at="2014-09-14T19:21:27Z" finished-at="2014-09-14T19:21:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="215" started-at="2014-09-14T19:21:27Z" finished-at="2014-09-14T19:21:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="270" started-at="2014-09-14T19:21:27Z" finished-at="2014-09-14T19:21:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="262" started-at="2014-09-14T19:21:27Z" finished-at="2014-09-14T19:21:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="137" started-at="2014-09-14T19:21:27Z" finished-at="2014-09-14T19:21:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="157" started-at="2014-09-14T19:21:27Z" finished-at="2014-09-14T19:21:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="147" started-at="2014-09-14T19:21:27Z" finished-at="2014-09-14T19:21:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="281" started-at="2014-09-14T19:21:27Z" finished-at="2014-09-14T19:21:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="141" started-at="2014-09-14T19:21:27Z" finished-at="2014-09-14T19:21:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="158" started-at="2014-09-14T19:21:27Z" finished-at="2014-09-14T19:21:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="160" started-at="2014-09-14T19:21:27Z" finished-at="2014-09-14T19:21:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="165" started-at="2014-09-14T19:21:27Z" finished-at="2014-09-14T19:21:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="188" started-at="2014-09-14T19:21:27Z" finished-at="2014-09-14T19:21:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="287" started-at="2014-09-14T19:21:27Z" finished-at="2014-09-14T19:21:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="205" started-at="2014-09-14T19:21:27Z" finished-at="2014-09-14T19:21:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="165" started-at="2014-09-14T19:21:27Z" finished-at="2014-09-14T19:21:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="203" started-at="2014-09-14T19:21:27Z" finished-at="2014-09-14T19:21:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="204" started-at="2014-09-14T19:21:27Z" finished-at="2014-09-14T19:21:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="285" started-at="2014-09-14T19:21:27Z" finished-at="2014-09-14T19:21:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="149" started-at="2014-09-14T19:21:27Z" finished-at="2014-09-14T19:21:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="200" started-at="2014-09-14T19:21:28Z" finished-at="2014-09-14T19:21:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="285" started-at="2014-09-14T19:21:28Z" finished-at="2014-09-14T19:21:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="128" started-at="2014-09-14T19:21:28Z" finished-at="2014-09-14T19:21:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="176" started-at="2014-09-14T19:21:28Z" finished-at="2014-09-14T19:21:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="270" started-at="2014-09-14T19:21:28Z" finished-at="2014-09-14T19:21:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="167" started-at="2014-09-14T19:21:28Z" finished-at="2014-09-14T19:21:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="114" started-at="2014-09-14T19:21:28Z" finished-at="2014-09-14T19:21:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="162" started-at="2014-09-14T19:21:28Z" finished-at="2014-09-14T19:21:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="144" started-at="2014-09-14T19:21:28Z" finished-at="2014-09-14T19:21:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="167" started-at="2014-09-14T19:21:28Z" finished-at="2014-09-14T19:21:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="130" started-at="2014-09-14T19:21:28Z" finished-at="2014-09-14T19:21:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="162" started-at="2014-09-14T19:21:28Z" finished-at="2014-09-14T19:21:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="245" started-at="2014-09-14T19:21:28Z" finished-at="2014-09-14T19:21:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="147" started-at="2014-09-14T19:21:28Z" finished-at="2014-09-14T19:21:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="245" started-at="2014-09-14T19:21:28Z" finished-at="2014-09-14T19:21:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="182" started-at="2014-09-14T19:21:28Z" finished-at="2014-09-14T19:21:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="237" started-at="2014-09-14T19:21:28Z" finished-at="2014-09-14T19:21:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="163" started-at="2014-09-14T19:21:28Z" finished-at="2014-09-14T19:21:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="166" started-at="2014-09-14T19:21:28Z" finished-at="2014-09-14T19:21:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="200" started-at="2014-09-14T19:21:28Z" finished-at="2014-09-14T19:21:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="222" started-at="2014-09-14T19:21:28Z" finished-at="2014-09-14T19:21:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="147" started-at="2014-09-14T19:21:28Z" finished-at="2014-09-14T19:21:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="292" started-at="2014-09-14T19:21:28Z" finished-at="2014-09-14T19:21:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="162" started-at="2014-09-14T19:21:28Z" finished-at="2014-09-14T19:21:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="201" started-at="2014-09-14T19:21:28Z" finished-at="2014-09-14T19:21:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="267" started-at="2014-09-14T19:21:28Z" finished-at="2014-09-14T19:21:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="193" started-at="2014-09-14T19:21:28Z" finished-at="2014-09-14T19:21:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="176" started-at="2014-09-14T19:21:28Z" finished-at="2014-09-14T19:21:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="220" started-at="2014-09-14T19:21:28Z" finished-at="2014-09-14T19:21:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="227" started-at="2014-09-14T19:21:28Z" finished-at="2014-09-14T19:21:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="196" started-at="2014-09-14T19:21:28Z" finished-at="2014-09-14T19:21:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="235" started-at="2014-09-14T19:21:28Z" finished-at="2014-09-14T19:21:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="181" started-at="2014-09-14T19:21:28Z" finished-at="2014-09-14T19:21:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="221" started-at="2014-09-14T19:21:28Z" finished-at="2014-09-14T19:21:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="300" started-at="2014-09-14T19:21:28Z" finished-at="2014-09-14T19:21:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="167" started-at="2014-09-14T19:21:28Z" finished-at="2014-09-14T19:21:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="208" started-at="2014-09-14T19:21:28Z" finished-at="2014-09-14T19:21:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="128" started-at="2014-09-14T19:21:28Z" finished-at="2014-09-14T19:21:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="294" started-at="2014-09-14T19:21:28Z" finished-at="2014-09-14T19:21:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="172" started-at="2014-09-14T19:21:28Z" finished-at="2014-09-14T19:21:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="165" started-at="2014-09-14T19:21:28Z" finished-at="2014-09-14T19:21:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="171" started-at="2014-09-14T19:21:28Z" finished-at="2014-09-14T19:21:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="132" started-at="2014-09-14T19:21:28Z" finished-at="2014-09-14T19:21:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="198" started-at="2014-09-14T19:21:28Z" finished-at="2014-09-14T19:21:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="208" started-at="2014-09-14T19:21:28Z" finished-at="2014-09-14T19:21:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="208" started-at="2014-09-14T19:21:28Z" finished-at="2014-09-14T19:21:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="155" started-at="2014-09-14T19:21:28Z" finished-at="2014-09-14T19:21:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="202" started-at="2014-09-14T19:21:28Z" finished-at="2014-09-14T19:21:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="154" started-at="2014-09-14T19:21:28Z" finished-at="2014-09-14T19:21:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="151" started-at="2014-09-14T19:21:28Z" finished-at="2014-09-14T19:21:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="225" started-at="2014-09-14T19:21:29Z" finished-at="2014-09-14T19:21:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="152" started-at="2014-09-14T19:21:29Z" finished-at="2014-09-14T19:21:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="161" started-at="2014-09-14T19:21:29Z" finished-at="2014-09-14T19:21:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="177" started-at="2014-09-14T19:21:29Z" finished-at="2014-09-14T19:21:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="146" started-at="2014-09-14T19:21:29Z" finished-at="2014-09-14T19:21:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="172" started-at="2014-09-14T19:21:29Z" finished-at="2014-09-14T19:21:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="197" started-at="2014-09-14T19:21:29Z" finished-at="2014-09-14T19:21:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="224" started-at="2014-09-14T19:21:29Z" finished-at="2014-09-14T19:21:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="191" started-at="2014-09-14T19:21:29Z" finished-at="2014-09-14T19:21:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="187" started-at="2014-09-14T19:21:29Z" finished-at="2014-09-14T19:21:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="193" started-at="2014-09-14T19:21:29Z" finished-at="2014-09-14T19:21:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="140" started-at="2014-09-14T19:21:29Z" finished-at="2014-09-14T19:21:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="160" started-at="2014-09-14T19:21:29Z" finished-at="2014-09-14T19:21:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="142" started-at="2014-09-14T19:21:29Z" finished-at="2014-09-14T19:21:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="177" started-at="2014-09-14T19:21:29Z" finished-at="2014-09-14T19:21:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="234" started-at="2014-09-14T19:21:29Z" finished-at="2014-09-14T19:21:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="332" started-at="2014-09-14T19:21:29Z" finished-at="2014-09-14T19:21:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="170" started-at="2014-09-14T19:21:29Z" finished-at="2014-09-14T19:21:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="196" started-at="2014-09-14T19:21:29Z" finished-at="2014-09-14T19:21:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="110" started-at="2014-09-14T19:21:29Z" finished-at="2014-09-14T19:21:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="205" started-at="2014-09-14T19:21:29Z" finished-at="2014-09-14T19:21:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="136" started-at="2014-09-14T19:21:29Z" finished-at="2014-09-14T19:21:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="262" started-at="2014-09-14T19:21:29Z" finished-at="2014-09-14T19:21:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="132" started-at="2014-09-14T19:21:29Z" finished-at="2014-09-14T19:21:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="140" started-at="2014-09-14T19:21:29Z" finished-at="2014-09-14T19:21:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="150" started-at="2014-09-14T19:21:29Z" finished-at="2014-09-14T19:21:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="156" started-at="2014-09-14T19:21:29Z" finished-at="2014-09-14T19:21:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="325" started-at="2014-09-14T19:21:29Z" finished-at="2014-09-14T19:21:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="278" started-at="2014-09-14T19:21:29Z" finished-at="2014-09-14T19:21:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="186" started-at="2014-09-14T19:21:29Z" finished-at="2014-09-14T19:21:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="122" started-at="2014-09-14T19:21:29Z" finished-at="2014-09-14T19:21:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="278" started-at="2014-09-14T19:21:29Z" finished-at="2014-09-14T19:21:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="158" started-at="2014-09-14T19:21:29Z" finished-at="2014-09-14T19:21:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="195" started-at="2014-09-14T19:21:29Z" finished-at="2014-09-14T19:21:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="156" started-at="2014-09-14T19:21:29Z" finished-at="2014-09-14T19:21:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="200" started-at="2014-09-14T19:21:29Z" finished-at="2014-09-14T19:21:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="224" started-at="2014-09-14T19:21:29Z" finished-at="2014-09-14T19:21:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="202" started-at="2014-09-14T19:21:29Z" finished-at="2014-09-14T19:21:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="321" started-at="2014-09-14T19:21:29Z" finished-at="2014-09-14T19:21:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="124" started-at="2014-09-14T19:21:29Z" finished-at="2014-09-14T19:21:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="164" started-at="2014-09-14T19:21:29Z" finished-at="2014-09-14T19:21:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="202" started-at="2014-09-14T19:21:29Z" finished-at="2014-09-14T19:21:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="143" started-at="2014-09-14T19:21:29Z" finished-at="2014-09-14T19:21:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="146" started-at="2014-09-14T19:21:29Z" finished-at="2014-09-14T19:21:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="251" started-at="2014-09-14T19:21:29Z" finished-at="2014-09-14T19:21:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="170" started-at="2014-09-14T19:21:29Z" finished-at="2014-09-14T19:21:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="164" started-at="2014-09-14T19:21:29Z" finished-at="2014-09-14T19:21:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="171" started-at="2014-09-14T19:21:29Z" finished-at="2014-09-14T19:21:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="164" started-at="2014-09-14T19:21:29Z" finished-at="2014-09-14T19:21:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="122" started-at="2014-09-14T19:21:29Z" finished-at="2014-09-14T19:21:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="135" started-at="2014-09-14T19:21:29Z" finished-at="2014-09-14T19:21:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="178" started-at="2014-09-14T19:21:29Z" finished-at="2014-09-14T19:21:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="192" started-at="2014-09-14T19:21:30Z" finished-at="2014-09-14T19:21:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="315" started-at="2014-09-14T19:21:30Z" finished-at="2014-09-14T19:21:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="180" started-at="2014-09-14T19:21:30Z" finished-at="2014-09-14T19:21:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="188" started-at="2014-09-14T19:21:30Z" finished-at="2014-09-14T19:21:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="230" started-at="2014-09-14T19:21:30Z" finished-at="2014-09-14T19:21:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="262" started-at="2014-09-14T19:21:30Z" finished-at="2014-09-14T19:21:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="209" started-at="2014-09-14T19:21:30Z" finished-at="2014-09-14T19:21:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="132" started-at="2014-09-14T19:21:30Z" finished-at="2014-09-14T19:21:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="155" started-at="2014-09-14T19:21:30Z" finished-at="2014-09-14T19:21:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="163" started-at="2014-09-14T19:21:30Z" finished-at="2014-09-14T19:21:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="159" started-at="2014-09-14T19:21:30Z" finished-at="2014-09-14T19:21:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="156" started-at="2014-09-14T19:21:30Z" finished-at="2014-09-14T19:21:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="158" started-at="2014-09-14T19:21:30Z" finished-at="2014-09-14T19:21:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="170" started-at="2014-09-14T19:21:30Z" finished-at="2014-09-14T19:21:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="149" started-at="2014-09-14T19:21:30Z" finished-at="2014-09-14T19:21:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="216" started-at="2014-09-14T19:21:30Z" finished-at="2014-09-14T19:21:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="191" started-at="2014-09-14T19:21:30Z" finished-at="2014-09-14T19:21:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="240" started-at="2014-09-14T19:21:30Z" finished-at="2014-09-14T19:21:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="250" started-at="2014-09-14T19:21:30Z" finished-at="2014-09-14T19:21:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="214" started-at="2014-09-14T19:21:30Z" finished-at="2014-09-14T19:21:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="166" started-at="2014-09-14T19:21:30Z" finished-at="2014-09-14T19:21:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="170" started-at="2014-09-14T19:21:30Z" finished-at="2014-09-14T19:21:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="163" started-at="2014-09-14T19:21:30Z" finished-at="2014-09-14T19:21:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="195" started-at="2014-09-14T19:21:30Z" finished-at="2014-09-14T19:21:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="124" started-at="2014-09-14T19:21:30Z" finished-at="2014-09-14T19:21:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="192" started-at="2014-09-14T19:21:30Z" finished-at="2014-09-14T19:21:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="172" started-at="2014-09-14T19:21:30Z" finished-at="2014-09-14T19:21:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="224" started-at="2014-09-14T19:21:30Z" finished-at="2014-09-14T19:21:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="196" started-at="2014-09-14T19:21:30Z" finished-at="2014-09-14T19:21:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="207" started-at="2014-09-14T19:21:30Z" finished-at="2014-09-14T19:21:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="227" started-at="2014-09-14T19:21:30Z" finished-at="2014-09-14T19:21:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="217" started-at="2014-09-14T19:21:30Z" finished-at="2014-09-14T19:21:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="194" started-at="2014-09-14T19:21:30Z" finished-at="2014-09-14T19:21:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="274" started-at="2014-09-14T19:21:30Z" finished-at="2014-09-14T19:21:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="230" started-at="2014-09-14T19:21:30Z" finished-at="2014-09-14T19:21:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="195" started-at="2014-09-14T19:21:30Z" finished-at="2014-09-14T19:21:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="134" started-at="2014-09-14T19:21:30Z" finished-at="2014-09-14T19:21:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="267" started-at="2014-09-14T19:21:30Z" finished-at="2014-09-14T19:21:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="155" started-at="2014-09-14T19:21:30Z" finished-at="2014-09-14T19:21:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="140" started-at="2014-09-14T19:21:30Z" finished-at="2014-09-14T19:21:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="295" started-at="2014-09-14T19:21:30Z" finished-at="2014-09-14T19:21:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="162" started-at="2014-09-14T19:21:30Z" finished-at="2014-09-14T19:21:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="194" started-at="2014-09-14T19:21:30Z" finished-at="2014-09-14T19:21:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="141" started-at="2014-09-14T19:21:30Z" finished-at="2014-09-14T19:21:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="156" started-at="2014-09-14T19:21:30Z" finished-at="2014-09-14T19:21:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="161" started-at="2014-09-14T19:21:30Z" finished-at="2014-09-14T19:21:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="279" started-at="2014-09-14T19:21:30Z" finished-at="2014-09-14T19:21:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="121" started-at="2014-09-14T19:21:30Z" finished-at="2014-09-14T19:21:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="207" started-at="2014-09-14T19:21:30Z" finished-at="2014-09-14T19:21:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="153" started-at="2014-09-14T19:21:30Z" finished-at="2014-09-14T19:21:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="137" started-at="2014-09-14T19:21:30Z" finished-at="2014-09-14T19:21:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="169" started-at="2014-09-14T19:21:30Z" finished-at="2014-09-14T19:21:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="242" started-at="2014-09-14T19:21:30Z" finished-at="2014-09-14T19:21:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="147" started-at="2014-09-14T19:21:30Z" finished-at="2014-09-14T19:21:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="171" started-at="2014-09-14T19:21:31Z" finished-at="2014-09-14T19:21:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="139" started-at="2014-09-14T19:21:31Z" finished-at="2014-09-14T19:21:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="170" started-at="2014-09-14T19:21:31Z" finished-at="2014-09-14T19:21:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="212" started-at="2014-09-14T19:21:31Z" finished-at="2014-09-14T19:21:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="175" started-at="2014-09-14T19:21:31Z" finished-at="2014-09-14T19:21:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="168" started-at="2014-09-14T19:21:31Z" finished-at="2014-09-14T19:21:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="236" started-at="2014-09-14T19:21:31Z" finished-at="2014-09-14T19:21:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="155" started-at="2014-09-14T19:21:31Z" finished-at="2014-09-14T19:21:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="250" started-at="2014-09-14T19:21:31Z" finished-at="2014-09-14T19:21:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="275" started-at="2014-09-14T19:21:31Z" finished-at="2014-09-14T19:21:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="165" started-at="2014-09-14T19:21:31Z" finished-at="2014-09-14T19:21:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="142" started-at="2014-09-14T19:21:31Z" finished-at="2014-09-14T19:21:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="229" started-at="2014-09-14T19:21:31Z" finished-at="2014-09-14T19:21:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="251" started-at="2014-09-14T19:21:31Z" finished-at="2014-09-14T19:21:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="236" started-at="2014-09-14T19:21:31Z" finished-at="2014-09-14T19:21:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="141" started-at="2014-09-14T19:21:31Z" finished-at="2014-09-14T19:21:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="109" started-at="2014-09-14T19:21:31Z" finished-at="2014-09-14T19:21:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="156" started-at="2014-09-14T19:21:31Z" finished-at="2014-09-14T19:21:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="170" started-at="2014-09-14T19:21:31Z" finished-at="2014-09-14T19:21:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="250" started-at="2014-09-14T19:21:31Z" finished-at="2014-09-14T19:21:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="145" started-at="2014-09-14T19:21:31Z" finished-at="2014-09-14T19:21:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="164" started-at="2014-09-14T19:21:31Z" finished-at="2014-09-14T19:21:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="152" started-at="2014-09-14T19:21:31Z" finished-at="2014-09-14T19:21:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="167" started-at="2014-09-14T19:21:31Z" finished-at="2014-09-14T19:21:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="231" started-at="2014-09-14T19:21:31Z" finished-at="2014-09-14T19:21:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="290" started-at="2014-09-14T19:21:31Z" finished-at="2014-09-14T19:21:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="318" started-at="2014-09-14T19:21:31Z" finished-at="2014-09-14T19:21:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="167" started-at="2014-09-14T19:21:31Z" finished-at="2014-09-14T19:21:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="198" started-at="2014-09-14T19:21:31Z" finished-at="2014-09-14T19:21:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="151" started-at="2014-09-14T19:21:31Z" finished-at="2014-09-14T19:21:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="173" started-at="2014-09-14T19:21:31Z" finished-at="2014-09-14T19:21:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="145" started-at="2014-09-14T19:21:31Z" finished-at="2014-09-14T19:21:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="185" started-at="2014-09-14T19:21:31Z" finished-at="2014-09-14T19:21:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="147" started-at="2014-09-14T19:21:31Z" finished-at="2014-09-14T19:21:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="150" started-at="2014-09-14T19:21:31Z" finished-at="2014-09-14T19:21:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="137" started-at="2014-09-14T19:21:31Z" finished-at="2014-09-14T19:21:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="236" started-at="2014-09-14T19:21:31Z" finished-at="2014-09-14T19:21:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="143" started-at="2014-09-14T19:21:31Z" finished-at="2014-09-14T19:21:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="185" started-at="2014-09-14T19:21:31Z" finished-at="2014-09-14T19:21:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="215" started-at="2014-09-14T19:21:31Z" finished-at="2014-09-14T19:21:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="277" started-at="2014-09-14T19:21:31Z" finished-at="2014-09-14T19:21:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="154" started-at="2014-09-14T19:21:31Z" finished-at="2014-09-14T19:21:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="237" started-at="2014-09-14T19:21:31Z" finished-at="2014-09-14T19:21:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="160" started-at="2014-09-14T19:21:31Z" finished-at="2014-09-14T19:21:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="271" started-at="2014-09-14T19:21:31Z" finished-at="2014-09-14T19:21:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="112" started-at="2014-09-14T19:21:31Z" finished-at="2014-09-14T19:21:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="136" started-at="2014-09-14T19:21:31Z" finished-at="2014-09-14T19:21:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="189" started-at="2014-09-14T19:21:31Z" finished-at="2014-09-14T19:21:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="203" started-at="2014-09-14T19:21:31Z" finished-at="2014-09-14T19:21:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="155" started-at="2014-09-14T19:21:31Z" finished-at="2014-09-14T19:21:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="163" started-at="2014-09-14T19:21:31Z" finished-at="2014-09-14T19:21:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="168" started-at="2014-09-14T19:21:31Z" finished-at="2014-09-14T19:21:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="189" started-at="2014-09-14T19:21:31Z" finished-at="2014-09-14T19:21:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="191" started-at="2014-09-14T19:21:32Z" finished-at="2014-09-14T19:21:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="183" started-at="2014-09-14T19:21:32Z" finished-at="2014-09-14T19:21:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="255" started-at="2014-09-14T19:21:32Z" finished-at="2014-09-14T19:21:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="143" started-at="2014-09-14T19:21:32Z" finished-at="2014-09-14T19:21:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="143" started-at="2014-09-14T19:21:32Z" finished-at="2014-09-14T19:21:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="261" started-at="2014-09-14T19:21:32Z" finished-at="2014-09-14T19:21:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="153" started-at="2014-09-14T19:21:32Z" finished-at="2014-09-14T19:21:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="156" started-at="2014-09-14T19:21:32Z" finished-at="2014-09-14T19:21:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="218" started-at="2014-09-14T19:21:32Z" finished-at="2014-09-14T19:21:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="160" started-at="2014-09-14T19:21:32Z" finished-at="2014-09-14T19:21:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="226" started-at="2014-09-14T19:21:32Z" finished-at="2014-09-14T19:21:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="202" started-at="2014-09-14T19:21:32Z" finished-at="2014-09-14T19:21:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="141" started-at="2014-09-14T19:21:32Z" finished-at="2014-09-14T19:21:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="176" started-at="2014-09-14T19:21:32Z" finished-at="2014-09-14T19:21:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="237" started-at="2014-09-14T19:21:32Z" finished-at="2014-09-14T19:21:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="232" started-at="2014-09-14T19:21:32Z" finished-at="2014-09-14T19:21:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="197" started-at="2014-09-14T19:21:32Z" finished-at="2014-09-14T19:21:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="212" started-at="2014-09-14T19:21:32Z" finished-at="2014-09-14T19:21:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="217" started-at="2014-09-14T19:21:32Z" finished-at="2014-09-14T19:21:32Z">
          <exception class="org.springframework.web.client.HttpServerErrorException">
            <message>
              <![CDATA[500 Internal Server Error]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.RestTemplate.handleResponseError(RestTemplate.java:576)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:532)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:44)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.HttpServerErrorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="204" started-at="2014-09-14T19:21:32Z" finished-at="2014-09-14T19:21:32Z">
          <exception class="org.springframework.web.client.HttpServerErrorException">
            <message>
              <![CDATA[500 Internal Server Error]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.RestTemplate.handleResponseError(RestTemplate.java:576)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:532)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:44)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.HttpServerErrorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="122" started-at="2014-09-14T19:21:32Z" finished-at="2014-09-14T19:21:32Z">
          <exception class="org.springframework.web.client.HttpServerErrorException">
            <message>
              <![CDATA[500 Internal Server Error]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.RestTemplate.handleResponseError(RestTemplate.java:576)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:532)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:39)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.HttpServerErrorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="120" started-at="2014-09-14T19:21:32Z" finished-at="2014-09-14T19:21:32Z">
          <exception class="org.springframework.web.client.HttpServerErrorException">
            <message>
              <![CDATA[500 Internal Server Error]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.RestTemplate.handleResponseError(RestTemplate.java:576)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:532)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:39)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.HttpServerErrorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="141" started-at="2014-09-14T19:21:32Z" finished-at="2014-09-14T19:21:32Z">
          <exception class="org.springframework.web.client.HttpServerErrorException">
            <message>
              <![CDATA[500 Internal Server Error]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.RestTemplate.handleResponseError(RestTemplate.java:576)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:532)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:39)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.HttpServerErrorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="125" started-at="2014-09-14T19:21:32Z" finished-at="2014-09-14T19:21:32Z">
          <exception class="org.springframework.web.client.HttpServerErrorException">
            <message>
              <![CDATA[500 Internal Server Error]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.RestTemplate.handleResponseError(RestTemplate.java:576)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:532)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:39)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.HttpServerErrorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="240" started-at="2014-09-14T19:21:32Z" finished-at="2014-09-14T19:21:32Z">
          <exception class="org.springframework.web.client.HttpServerErrorException">
            <message>
              <![CDATA[500 Internal Server Error]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.RestTemplate.handleResponseError(RestTemplate.java:576)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:532)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:44)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.HttpServerErrorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="242" started-at="2014-09-14T19:21:32Z" finished-at="2014-09-14T19:21:32Z">
          <exception class="org.springframework.web.client.HttpServerErrorException">
            <message>
              <![CDATA[500 Internal Server Error]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.RestTemplate.handleResponseError(RestTemplate.java:576)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:532)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:44)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.HttpServerErrorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="14" started-at="2014-09-14T19:21:32Z" finished-at="2014-09-14T19:21:32Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="178" started-at="2014-09-14T19:21:32Z" finished-at="2014-09-14T19:21:32Z">
          <exception class="org.springframework.web.client.HttpServerErrorException">
            <message>
              <![CDATA[500 Internal Server Error]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.RestTemplate.handleResponseError(RestTemplate.java:576)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:532)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:39)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.HttpServerErrorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="21" started-at="2014-09-14T19:21:32Z" finished-at="2014-09-14T19:21:32Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="148" started-at="2014-09-14T19:21:32Z" finished-at="2014-09-14T19:21:32Z">
          <exception class="org.springframework.web.client.HttpServerErrorException">
            <message>
              <![CDATA[500 Internal Server Error]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.RestTemplate.handleResponseError(RestTemplate.java:576)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:532)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:39)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.HttpServerErrorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="51" started-at="2014-09-14T19:21:32Z" finished-at="2014-09-14T19:21:32Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="28" started-at="2014-09-14T19:21:32Z" finished-at="2014-09-14T19:21:32Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="66" started-at="2014-09-14T19:21:32Z" finished-at="2014-09-14T19:21:32Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="58" started-at="2014-09-14T19:21:32Z" finished-at="2014-09-14T19:21:32Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="64" started-at="2014-09-14T19:21:32Z" finished-at="2014-09-14T19:21:32Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="51" started-at="2014-09-14T19:21:32Z" finished-at="2014-09-14T19:21:32Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="53" started-at="2014-09-14T19:21:32Z" finished-at="2014-09-14T19:21:32Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="35" started-at="2014-09-14T19:21:32Z" finished-at="2014-09-14T19:21:32Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="74" started-at="2014-09-14T19:21:32Z" finished-at="2014-09-14T19:21:32Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="65" started-at="2014-09-14T19:21:32Z" finished-at="2014-09-14T19:21:32Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="49" started-at="2014-09-14T19:21:32Z" finished-at="2014-09-14T19:21:32Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="40" started-at="2014-09-14T19:21:32Z" finished-at="2014-09-14T19:21:32Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="34" started-at="2014-09-14T19:21:32Z" finished-at="2014-09-14T19:21:32Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="22" started-at="2014-09-14T19:21:32Z" finished-at="2014-09-14T19:21:32Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="80" started-at="2014-09-14T19:21:32Z" finished-at="2014-09-14T19:21:32Z">
          <exception class="org.springframework.web.client.HttpServerErrorException">
            <message>
              <![CDATA[500 Internal Server Error]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.RestTemplate.handleResponseError(RestTemplate.java:576)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:532)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:44)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.HttpServerErrorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="86" started-at="2014-09-14T19:21:32Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.HttpServerErrorException">
            <message>
              <![CDATA[500 Internal Server Error]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.RestTemplate.handleResponseError(RestTemplate.java:576)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:532)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:39)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.HttpServerErrorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="106" started-at="2014-09-14T19:21:32Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="106" started-at="2014-09-14T19:21:32Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="17" started-at="2014-09-14T19:21:32Z" finished-at="2014-09-14T19:21:32Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="13" started-at="2014-09-14T19:21:32Z" finished-at="2014-09-14T19:21:32Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="20" started-at="2014-09-14T19:21:32Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="89" started-at="2014-09-14T19:21:32Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="14" started-at="2014-09-14T19:21:32Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="13" started-at="2014-09-14T19:21:32Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="26" started-at="2014-09-14T19:21:32Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="128" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="31" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="18" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="33" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="28" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="20" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="23" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="26" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="33" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="32" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="52" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="22" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="21" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="21" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="14" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="95" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="36" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="32" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="45" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="30" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="25" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="80" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="42" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="22" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="42" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="39" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="82" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="35" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="23" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="79" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="35" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="32" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="75" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="35" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="69" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="40" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="45" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="44" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="90" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="23" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="18" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="14" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="88" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="12" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="20" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="16" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="127" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="12" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="199" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="40" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="33" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="91" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="160" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="45" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="49" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="76" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="55" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="56" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="52" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="43" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="31" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="23" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="22" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="66" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="85" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="113" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="109" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="27" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="220" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="92" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="78" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="193" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="130" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="106" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="41" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="25" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="15" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="16" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="79" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="28" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="95" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="23" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="25" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="40" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="73" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="71" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="62" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="45" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="40" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="38" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="25" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="130" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="146" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="108" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="88" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="32" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="21" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="129" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="28" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="45" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="104" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="68" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="83" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="81" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="49" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="47" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="48" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="15" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="14" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="22" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="22" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:33Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="179" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="381" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="163" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="179" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="207" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="147" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="215" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="131" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="460" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="187" started-at="2014-09-14T19:21:33Z" finished-at="2014-09-14T19:21:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="158" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="181" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="135" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="191" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="137" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="138" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="618" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="150" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="143" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="122" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="144" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="288" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:34Z">
          <exception class="org.springframework.web.client.HttpServerErrorException">
            <message>
              <![CDATA[500 Internal Server Error]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.RestTemplate.handleResponseError(RestTemplate.java:576)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:532)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:44)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.HttpServerErrorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="184" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:34Z">
          <exception class="org.springframework.web.client.HttpServerErrorException">
            <message>
              <![CDATA[500 Internal Server Error]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.RestTemplate.handleResponseError(RestTemplate.java:576)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:532)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:44)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.HttpServerErrorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="272" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:34Z">
          <exception class="org.springframework.web.client.HttpServerErrorException">
            <message>
              <![CDATA[500 Internal Server Error]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.RestTemplate.handleResponseError(RestTemplate.java:576)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:532)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:44)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.HttpServerErrorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="193" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:34Z">
          <exception class="org.springframework.web.client.HttpServerErrorException">
            <message>
              <![CDATA[500 Internal Server Error]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.RestTemplate.handleResponseError(RestTemplate.java:576)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:532)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:44)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.HttpServerErrorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="219" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:34Z">
          <exception class="org.springframework.web.client.HttpServerErrorException">
            <message>
              <![CDATA[500 Internal Server Error]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.RestTemplate.handleResponseError(RestTemplate.java:576)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:532)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:44)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.HttpServerErrorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="216" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:34Z">
          <exception class="org.springframework.web.client.HttpServerErrorException">
            <message>
              <![CDATA[500 Internal Server Error]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.RestTemplate.handleResponseError(RestTemplate.java:576)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:532)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:39)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.HttpServerErrorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="192" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:34Z">
          <exception class="org.springframework.web.client.HttpServerErrorException">
            <message>
              <![CDATA[500 Internal Server Error]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.RestTemplate.handleResponseError(RestTemplate.java:576)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:532)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:39)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.HttpServerErrorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="24" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:34Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="22" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:34Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="56" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:34Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="24" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:34Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="27" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:34Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="23" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:34Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="31" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:34Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="26" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:34Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="25" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:34Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="23" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:34Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="24" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:34Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="37" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:34Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="34" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:34Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="30" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:34Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="211" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:34Z">
          <exception class="org.springframework.web.client.HttpServerErrorException">
            <message>
              <![CDATA[500 Internal Server Error]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.RestTemplate.handleResponseError(RestTemplate.java:576)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:532)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:39)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.HttpServerErrorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="222" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:34Z">
          <exception class="org.springframework.web.client.HttpServerErrorException">
            <message>
              <![CDATA[500 Internal Server Error]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.RestTemplate.handleResponseError(RestTemplate.java:576)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:532)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:39)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.HttpServerErrorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="202" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:34Z">
          <exception class="org.springframework.web.client.HttpServerErrorException">
            <message>
              <![CDATA[500 Internal Server Error]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.RestTemplate.handleResponseError(RestTemplate.java:576)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:532)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:39)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.HttpServerErrorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="193" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:34Z">
          <exception class="org.springframework.web.client.HttpServerErrorException">
            <message>
              <![CDATA[500 Internal Server Error]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.RestTemplate.handleResponseError(RestTemplate.java:576)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:532)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:39)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.HttpServerErrorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="67" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:34Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="13" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:34Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="193" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:34Z">
          <exception class="org.springframework.web.client.HttpServerErrorException">
            <message>
              <![CDATA[500 Internal Server Error]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.RestTemplate.handleResponseError(RestTemplate.java:576)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:532)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:39)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.HttpServerErrorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="27" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:34Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="47" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:34Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="32" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:34Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="60" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:34Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="42" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:34Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="34" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:34Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="27" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:34Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="24" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:34Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="30" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:34Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="57" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:34Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="77" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:34Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="56" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:34Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="46" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:34Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="132" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:34Z">
          <exception class="org.springframework.web.client.HttpServerErrorException">
            <message>
              <![CDATA[500 Internal Server Error]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.RestTemplate.handleResponseError(RestTemplate.java:576)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:532)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:44)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.HttpServerErrorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="356" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="86" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:34Z">
          <exception class="org.springframework.web.client.HttpServerErrorException">
            <message>
              <![CDATA[500 Internal Server Error]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.RestTemplate.handleResponseError(RestTemplate.java:576)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:532)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:39)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.HttpServerErrorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="167" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:34Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="85" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:34Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="77" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:34Z">
          <exception class="org.springframework.web.client.HttpServerErrorException">
            <message>
              <![CDATA[500 Internal Server Error]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.RestTemplate.handleResponseError(RestTemplate.java:576)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:532)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:39)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.HttpServerErrorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="16" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:34Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="12" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:34Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="37" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:34Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="13" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:34Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="112" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:34Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="22" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:34Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="229" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="208" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="23" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:34Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="222" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="17" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:34Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="23" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:34Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="21" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:34Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="201" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="185" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="215" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="186" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="128" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="148" started-at="2014-09-14T19:21:34Z" finished-at="2014-09-14T19:21:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="156" started-at="2014-09-14T19:21:35Z" finished-at="2014-09-14T19:21:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="281" started-at="2014-09-14T19:21:35Z" finished-at="2014-09-14T19:21:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="157" started-at="2014-09-14T19:21:35Z" finished-at="2014-09-14T19:21:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="142" started-at="2014-09-14T19:21:35Z" finished-at="2014-09-14T19:21:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="153" started-at="2014-09-14T19:21:35Z" finished-at="2014-09-14T19:21:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="192" started-at="2014-09-14T19:21:35Z" finished-at="2014-09-14T19:21:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="148" started-at="2014-09-14T19:21:35Z" finished-at="2014-09-14T19:21:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="150" started-at="2014-09-14T19:21:35Z" finished-at="2014-09-14T19:21:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="157" started-at="2014-09-14T19:21:35Z" finished-at="2014-09-14T19:21:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="155" started-at="2014-09-14T19:21:35Z" finished-at="2014-09-14T19:21:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="193" started-at="2014-09-14T19:21:35Z" finished-at="2014-09-14T19:21:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="137" started-at="2014-09-14T19:21:35Z" finished-at="2014-09-14T19:21:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="193" started-at="2014-09-14T19:21:35Z" finished-at="2014-09-14T19:21:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="173" started-at="2014-09-14T19:21:35Z" finished-at="2014-09-14T19:21:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="127" started-at="2014-09-14T19:21:35Z" finished-at="2014-09-14T19:21:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="114" started-at="2014-09-14T19:21:35Z" finished-at="2014-09-14T19:21:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="210" started-at="2014-09-14T19:21:35Z" finished-at="2014-09-14T19:21:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="218" started-at="2014-09-14T19:21:35Z" finished-at="2014-09-14T19:21:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="185" started-at="2014-09-14T19:21:35Z" finished-at="2014-09-14T19:21:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="216" started-at="2014-09-14T19:21:35Z" finished-at="2014-09-14T19:21:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="140" started-at="2014-09-14T19:21:35Z" finished-at="2014-09-14T19:21:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="110" started-at="2014-09-14T19:21:35Z" finished-at="2014-09-14T19:21:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="135" started-at="2014-09-14T19:21:35Z" finished-at="2014-09-14T19:21:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="273" started-at="2014-09-14T19:21:35Z" finished-at="2014-09-14T19:21:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="195" started-at="2014-09-14T19:21:35Z" finished-at="2014-09-14T19:21:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="117" started-at="2014-09-14T19:21:35Z" finished-at="2014-09-14T19:21:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="189" started-at="2014-09-14T19:21:35Z" finished-at="2014-09-14T19:21:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="208" started-at="2014-09-14T19:21:35Z" finished-at="2014-09-14T19:21:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="170" started-at="2014-09-14T19:21:35Z" finished-at="2014-09-14T19:21:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="193" started-at="2014-09-14T19:21:35Z" finished-at="2014-09-14T19:21:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="283" started-at="2014-09-14T19:21:35Z" finished-at="2014-09-14T19:21:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="145" started-at="2014-09-14T19:21:35Z" finished-at="2014-09-14T19:21:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="126" started-at="2014-09-14T19:21:35Z" finished-at="2014-09-14T19:21:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="405" started-at="2014-09-14T19:21:35Z" finished-at="2014-09-14T19:21:35Z">
          <exception class="org.springframework.web.client.HttpServerErrorException">
            <message>
              <![CDATA[500 Internal Server Error]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.RestTemplate.handleResponseError(RestTemplate.java:576)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:532)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:44)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.HttpServerErrorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="319" started-at="2014-09-14T19:21:35Z" finished-at="2014-09-14T19:21:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="305" started-at="2014-09-14T19:21:35Z" finished-at="2014-09-14T19:21:35Z">
          <exception class="org.springframework.web.client.HttpServerErrorException">
            <message>
              <![CDATA[500 Internal Server Error]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.RestTemplate.handleResponseError(RestTemplate.java:576)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:532)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:44)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.HttpServerErrorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="271" started-at="2014-09-14T19:21:35Z" finished-at="2014-09-14T19:21:35Z">
          <exception class="org.springframework.web.client.HttpServerErrorException">
            <message>
              <![CDATA[500 Internal Server Error]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.RestTemplate.handleResponseError(RestTemplate.java:576)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:532)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:44)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.HttpServerErrorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="292" started-at="2014-09-14T19:21:35Z" finished-at="2014-09-14T19:21:35Z">
          <exception class="org.springframework.web.client.HttpServerErrorException">
            <message>
              <![CDATA[500 Internal Server Error]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.RestTemplate.handleResponseError(RestTemplate.java:576)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:532)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:39)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.HttpServerErrorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="140" started-at="2014-09-14T19:21:35Z" finished-at="2014-09-14T19:21:35Z">
          <exception class="org.springframework.web.client.HttpServerErrorException">
            <message>
              <![CDATA[500 Internal Server Error]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.RestTemplate.handleResponseError(RestTemplate.java:576)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:532)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:39)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.HttpServerErrorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="64" started-at="2014-09-14T19:21:35Z" finished-at="2014-09-14T19:21:35Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/0/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/0/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:32)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="27" started-at="2014-09-14T19:21:35Z" finished-at="2014-09-14T19:21:35Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="42" started-at="2014-09-14T19:21:35Z" finished-at="2014-09-14T19:21:35Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="31" started-at="2014-09-14T19:21:35Z" finished-at="2014-09-14T19:21:35Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="13" started-at="2014-09-14T19:21:35Z" finished-at="2014-09-14T19:21:35Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="20" started-at="2014-09-14T19:21:35Z" finished-at="2014-09-14T19:21:35Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="40" started-at="2014-09-14T19:21:35Z" finished-at="2014-09-14T19:21:35Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="62" started-at="2014-09-14T19:21:35Z" finished-at="2014-09-14T19:21:35Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="37" started-at="2014-09-14T19:21:35Z" finished-at="2014-09-14T19:21:35Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="24" started-at="2014-09-14T19:21:35Z" finished-at="2014-09-14T19:21:35Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="13" started-at="2014-09-14T19:21:35Z" finished-at="2014-09-14T19:21:35Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="15" started-at="2014-09-14T19:21:35Z" finished-at="2014-09-14T19:21:35Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="14" started-at="2014-09-14T19:21:35Z" finished-at="2014-09-14T19:21:35Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="13" started-at="2014-09-14T19:21:35Z" finished-at="2014-09-14T19:21:35Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="367" started-at="2014-09-14T19:21:35Z" finished-at="2014-09-14T19:21:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="301" started-at="2014-09-14T19:21:35Z" finished-at="2014-09-14T19:21:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="136" started-at="2014-09-14T19:21:35Z" finished-at="2014-09-14T19:21:35Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="293" started-at="2014-09-14T19:21:35Z" finished-at="2014-09-14T19:21:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="208" started-at="2014-09-14T19:21:35Z" finished-at="2014-09-14T19:21:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="176" started-at="2014-09-14T19:21:35Z" finished-at="2014-09-14T19:21:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="219" started-at="2014-09-14T19:21:35Z" finished-at="2014-09-14T19:21:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="250" started-at="2014-09-14T19:21:35Z" finished-at="2014-09-14T19:21:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="236" started-at="2014-09-14T19:21:35Z" finished-at="2014-09-14T19:21:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="193" started-at="2014-09-14T19:21:35Z" finished-at="2014-09-14T19:21:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="207" started-at="2014-09-14T19:21:35Z" finished-at="2014-09-14T19:21:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="131" started-at="2014-09-14T19:21:36Z" finished-at="2014-09-14T19:21:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="171" started-at="2014-09-14T19:21:36Z" finished-at="2014-09-14T19:21:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="228" started-at="2014-09-14T19:21:36Z" finished-at="2014-09-14T19:21:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="144" started-at="2014-09-14T19:21:36Z" finished-at="2014-09-14T19:21:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="227" started-at="2014-09-14T19:21:36Z" finished-at="2014-09-14T19:21:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="206" started-at="2014-09-14T19:21:36Z" finished-at="2014-09-14T19:21:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="164" started-at="2014-09-14T19:21:36Z" finished-at="2014-09-14T19:21:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="133" started-at="2014-09-14T19:21:36Z" finished-at="2014-09-14T19:21:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="164" started-at="2014-09-14T19:21:36Z" finished-at="2014-09-14T19:21:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="135" started-at="2014-09-14T19:21:36Z" finished-at="2014-09-14T19:21:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="156" started-at="2014-09-14T19:21:36Z" finished-at="2014-09-14T19:21:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="233" started-at="2014-09-14T19:21:36Z" finished-at="2014-09-14T19:21:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="192" started-at="2014-09-14T19:21:36Z" finished-at="2014-09-14T19:21:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="158" started-at="2014-09-14T19:21:36Z" finished-at="2014-09-14T19:21:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="206" started-at="2014-09-14T19:21:36Z" finished-at="2014-09-14T19:21:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="124" started-at="2014-09-14T19:21:36Z" finished-at="2014-09-14T19:21:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="162" started-at="2014-09-14T19:21:36Z" finished-at="2014-09-14T19:21:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="129" started-at="2014-09-14T19:21:36Z" finished-at="2014-09-14T19:21:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="123" started-at="2014-09-14T19:21:36Z" finished-at="2014-09-14T19:21:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="162" started-at="2014-09-14T19:21:36Z" finished-at="2014-09-14T19:21:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="167" started-at="2014-09-14T19:21:36Z" finished-at="2014-09-14T19:21:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="249" started-at="2014-09-14T19:21:36Z" finished-at="2014-09-14T19:21:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="217" started-at="2014-09-14T19:21:36Z" finished-at="2014-09-14T19:21:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="226" started-at="2014-09-14T19:21:36Z" finished-at="2014-09-14T19:21:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="127" started-at="2014-09-14T19:21:36Z" finished-at="2014-09-14T19:21:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="225" started-at="2014-09-14T19:21:36Z" finished-at="2014-09-14T19:21:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="168" started-at="2014-09-14T19:21:36Z" finished-at="2014-09-14T19:21:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="132" started-at="2014-09-14T19:21:36Z" finished-at="2014-09-14T19:21:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="116" started-at="2014-09-14T19:21:36Z" finished-at="2014-09-14T19:21:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="195" started-at="2014-09-14T19:21:36Z" finished-at="2014-09-14T19:21:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="292" started-at="2014-09-14T19:21:36Z" finished-at="2014-09-14T19:21:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="179" started-at="2014-09-14T19:21:36Z" finished-at="2014-09-14T19:21:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="125" started-at="2014-09-14T19:21:36Z" finished-at="2014-09-14T19:21:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="186" started-at="2014-09-14T19:21:36Z" finished-at="2014-09-14T19:21:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="213" started-at="2014-09-14T19:21:36Z" finished-at="2014-09-14T19:21:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="176" started-at="2014-09-14T19:21:36Z" finished-at="2014-09-14T19:21:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="217" started-at="2014-09-14T19:21:36Z" finished-at="2014-09-14T19:21:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="154" started-at="2014-09-14T19:21:36Z" finished-at="2014-09-14T19:21:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="199" started-at="2014-09-14T19:21:36Z" finished-at="2014-09-14T19:21:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="234" started-at="2014-09-14T19:21:36Z" finished-at="2014-09-14T19:21:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="146" started-at="2014-09-14T19:21:36Z" finished-at="2014-09-14T19:21:36Z">
          <exception class="org.springframework.web.client.HttpServerErrorException">
            <message>
              <![CDATA[500 Internal Server Error]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.RestTemplate.handleResponseError(RestTemplate.java:576)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:532)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:44)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.HttpServerErrorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="147" started-at="2014-09-14T19:21:36Z" finished-at="2014-09-14T19:21:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="278" started-at="2014-09-14T19:21:36Z" finished-at="2014-09-14T19:21:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="191" started-at="2014-09-14T19:21:36Z" finished-at="2014-09-14T19:21:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="15" started-at="2014-09-14T19:21:36Z" finished-at="2014-09-14T19:21:36Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="11" started-at="2014-09-14T19:21:36Z" finished-at="2014-09-14T19:21:36Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="11" started-at="2014-09-14T19:21:36Z" finished-at="2014-09-14T19:21:36Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="258" started-at="2014-09-14T19:21:36Z" finished-at="2014-09-14T19:21:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="162" started-at="2014-09-14T19:21:36Z" finished-at="2014-09-14T19:21:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="176" started-at="2014-09-14T19:21:36Z" finished-at="2014-09-14T19:21:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="160" started-at="2014-09-14T19:21:36Z" finished-at="2014-09-14T19:21:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="141" started-at="2014-09-14T19:21:36Z" finished-at="2014-09-14T19:21:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="108" started-at="2014-09-14T19:21:36Z" finished-at="2014-09-14T19:21:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="117" started-at="2014-09-14T19:21:36Z" finished-at="2014-09-14T19:21:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="164" started-at="2014-09-14T19:21:36Z" finished-at="2014-09-14T19:21:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="178" started-at="2014-09-14T19:21:37Z" finished-at="2014-09-14T19:21:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="134" started-at="2014-09-14T19:21:37Z" finished-at="2014-09-14T19:21:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="178" started-at="2014-09-14T19:21:37Z" finished-at="2014-09-14T19:21:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="235" started-at="2014-09-14T19:21:37Z" finished-at="2014-09-14T19:21:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="222" started-at="2014-09-14T19:21:37Z" finished-at="2014-09-14T19:21:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="218" started-at="2014-09-14T19:21:37Z" finished-at="2014-09-14T19:21:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="133" started-at="2014-09-14T19:21:37Z" finished-at="2014-09-14T19:21:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="157" started-at="2014-09-14T19:21:37Z" finished-at="2014-09-14T19:21:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="139" started-at="2014-09-14T19:21:37Z" finished-at="2014-09-14T19:21:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="179" started-at="2014-09-14T19:21:37Z" finished-at="2014-09-14T19:21:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="200" started-at="2014-09-14T19:21:37Z" finished-at="2014-09-14T19:21:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="206" started-at="2014-09-14T19:21:37Z" finished-at="2014-09-14T19:21:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="180" started-at="2014-09-14T19:21:37Z" finished-at="2014-09-14T19:21:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="123" started-at="2014-09-14T19:21:37Z" finished-at="2014-09-14T19:21:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="143" started-at="2014-09-14T19:21:37Z" finished-at="2014-09-14T19:21:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="145" started-at="2014-09-14T19:21:37Z" finished-at="2014-09-14T19:21:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="179" started-at="2014-09-14T19:21:37Z" finished-at="2014-09-14T19:21:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="173" started-at="2014-09-14T19:21:37Z" finished-at="2014-09-14T19:21:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="149" started-at="2014-09-14T19:21:37Z" finished-at="2014-09-14T19:21:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="188" started-at="2014-09-14T19:21:37Z" finished-at="2014-09-14T19:21:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="118" started-at="2014-09-14T19:21:37Z" finished-at="2014-09-14T19:21:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="255" started-at="2014-09-14T19:21:37Z" finished-at="2014-09-14T19:21:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="214" started-at="2014-09-14T19:21:37Z" finished-at="2014-09-14T19:21:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="229" started-at="2014-09-14T19:21:37Z" finished-at="2014-09-14T19:21:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="256" started-at="2014-09-14T19:21:37Z" finished-at="2014-09-14T19:21:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="231" started-at="2014-09-14T19:21:37Z" finished-at="2014-09-14T19:21:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="169" started-at="2014-09-14T19:21:37Z" finished-at="2014-09-14T19:21:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="197" started-at="2014-09-14T19:21:37Z" finished-at="2014-09-14T19:21:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="177" started-at="2014-09-14T19:21:37Z" finished-at="2014-09-14T19:21:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="169" started-at="2014-09-14T19:21:37Z" finished-at="2014-09-14T19:21:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="202" started-at="2014-09-14T19:21:37Z" finished-at="2014-09-14T19:21:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="130" started-at="2014-09-14T19:21:37Z" finished-at="2014-09-14T19:21:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="126" started-at="2014-09-14T19:21:37Z" finished-at="2014-09-14T19:21:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="141" started-at="2014-09-14T19:21:37Z" finished-at="2014-09-14T19:21:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="185" started-at="2014-09-14T19:21:37Z" finished-at="2014-09-14T19:21:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="264" started-at="2014-09-14T19:21:37Z" finished-at="2014-09-14T19:21:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="315" started-at="2014-09-14T19:21:37Z" finished-at="2014-09-14T19:21:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="179" started-at="2014-09-14T19:21:37Z" finished-at="2014-09-14T19:21:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="171" started-at="2014-09-14T19:21:37Z" finished-at="2014-09-14T19:21:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="189" started-at="2014-09-14T19:21:37Z" finished-at="2014-09-14T19:21:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="177" started-at="2014-09-14T19:21:37Z" finished-at="2014-09-14T19:21:37Z">
          <exception class="org.springframework.web.client.HttpServerErrorException">
            <message>
              <![CDATA[500 Internal Server Error]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.RestTemplate.handleResponseError(RestTemplate.java:576)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:532)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:44)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.HttpServerErrorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="267" started-at="2014-09-14T19:21:37Z" finished-at="2014-09-14T19:21:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="193" started-at="2014-09-14T19:21:37Z" finished-at="2014-09-14T19:21:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="129" started-at="2014-09-14T19:21:37Z" finished-at="2014-09-14T19:21:37Z">
          <exception class="org.springframework.web.client.HttpServerErrorException">
            <message>
              <![CDATA[500 Internal Server Error]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.RestTemplate.handleResponseError(RestTemplate.java:576)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:532)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:39)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.HttpServerErrorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="83" started-at="2014-09-14T19:21:37Z" finished-at="2014-09-14T19:21:37Z">
          <exception class="org.springframework.web.client.HttpServerErrorException">
            <message>
              <![CDATA[500 Internal Server Error]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.RestTemplate.handleResponseError(RestTemplate.java:576)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:532)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:39)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.HttpServerErrorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="38" started-at="2014-09-14T19:21:37Z" finished-at="2014-09-14T19:21:37Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="27" started-at="2014-09-14T19:21:37Z" finished-at="2014-09-14T19:21:37Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="21" started-at="2014-09-14T19:21:37Z" finished-at="2014-09-14T19:21:37Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="35" started-at="2014-09-14T19:21:37Z" finished-at="2014-09-14T19:21:37Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="28" started-at="2014-09-14T19:21:37Z" finished-at="2014-09-14T19:21:37Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="174" started-at="2014-09-14T19:21:37Z" finished-at="2014-09-14T19:21:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="129" started-at="2014-09-14T19:21:37Z" finished-at="2014-09-14T19:21:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="202" started-at="2014-09-14T19:21:37Z" finished-at="2014-09-14T19:21:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="138" started-at="2014-09-14T19:21:37Z" finished-at="2014-09-14T19:21:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="139" started-at="2014-09-14T19:21:37Z" finished-at="2014-09-14T19:21:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="343" started-at="2014-09-14T19:21:37Z" finished-at="2014-09-14T19:21:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="176" started-at="2014-09-14T19:21:37Z" finished-at="2014-09-14T19:21:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="128" started-at="2014-09-14T19:21:37Z" finished-at="2014-09-14T19:21:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="280" started-at="2014-09-14T19:21:37Z" finished-at="2014-09-14T19:21:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="217" started-at="2014-09-14T19:21:38Z" finished-at="2014-09-14T19:21:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="129" started-at="2014-09-14T19:21:38Z" finished-at="2014-09-14T19:21:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="166" started-at="2014-09-14T19:21:38Z" finished-at="2014-09-14T19:21:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="176" started-at="2014-09-14T19:21:38Z" finished-at="2014-09-14T19:21:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="110" started-at="2014-09-14T19:21:38Z" finished-at="2014-09-14T19:21:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="126" started-at="2014-09-14T19:21:38Z" finished-at="2014-09-14T19:21:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="179" started-at="2014-09-14T19:21:38Z" finished-at="2014-09-14T19:21:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="113" started-at="2014-09-14T19:21:38Z" finished-at="2014-09-14T19:21:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="254" started-at="2014-09-14T19:21:38Z" finished-at="2014-09-14T19:21:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="181" started-at="2014-09-14T19:21:38Z" finished-at="2014-09-14T19:21:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="138" started-at="2014-09-14T19:21:38Z" finished-at="2014-09-14T19:21:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="177" started-at="2014-09-14T19:21:38Z" finished-at="2014-09-14T19:21:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="172" started-at="2014-09-14T19:21:38Z" finished-at="2014-09-14T19:21:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="297" started-at="2014-09-14T19:21:38Z" finished-at="2014-09-14T19:21:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="219" started-at="2014-09-14T19:21:38Z" finished-at="2014-09-14T19:21:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="114" started-at="2014-09-14T19:21:38Z" finished-at="2014-09-14T19:21:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="261" started-at="2014-09-14T19:21:38Z" finished-at="2014-09-14T19:21:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="116" started-at="2014-09-14T19:21:38Z" finished-at="2014-09-14T19:21:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="292" started-at="2014-09-14T19:21:38Z" finished-at="2014-09-14T19:21:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="162" started-at="2014-09-14T19:21:38Z" finished-at="2014-09-14T19:21:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="171" started-at="2014-09-14T19:21:38Z" finished-at="2014-09-14T19:21:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="178" started-at="2014-09-14T19:21:38Z" finished-at="2014-09-14T19:21:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="154" started-at="2014-09-14T19:21:38Z" finished-at="2014-09-14T19:21:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="190" started-at="2014-09-14T19:21:38Z" finished-at="2014-09-14T19:21:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="207" started-at="2014-09-14T19:21:38Z" finished-at="2014-09-14T19:21:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="164" started-at="2014-09-14T19:21:38Z" finished-at="2014-09-14T19:21:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="200" started-at="2014-09-14T19:21:38Z" finished-at="2014-09-14T19:21:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="244" started-at="2014-09-14T19:21:38Z" finished-at="2014-09-14T19:21:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="269" started-at="2014-09-14T19:21:38Z" finished-at="2014-09-14T19:21:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="257" started-at="2014-09-14T19:21:38Z" finished-at="2014-09-14T19:21:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="130" started-at="2014-09-14T19:21:38Z" finished-at="2014-09-14T19:21:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="154" started-at="2014-09-14T19:21:38Z" finished-at="2014-09-14T19:21:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="156" started-at="2014-09-14T19:21:38Z" finished-at="2014-09-14T19:21:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="371" started-at="2014-09-14T19:21:38Z" finished-at="2014-09-14T19:21:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="136" started-at="2014-09-14T19:21:38Z" finished-at="2014-09-14T19:21:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="123" started-at="2014-09-14T19:21:38Z" finished-at="2014-09-14T19:21:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="136" started-at="2014-09-14T19:21:38Z" finished-at="2014-09-14T19:21:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="247" started-at="2014-09-14T19:21:38Z" finished-at="2014-09-14T19:21:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="147" started-at="2014-09-14T19:21:38Z" finished-at="2014-09-14T19:21:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="162" started-at="2014-09-14T19:21:38Z" finished-at="2014-09-14T19:21:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="121" started-at="2014-09-14T19:21:38Z" finished-at="2014-09-14T19:21:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="112" started-at="2014-09-14T19:21:38Z" finished-at="2014-09-14T19:21:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="192" started-at="2014-09-14T19:21:38Z" finished-at="2014-09-14T19:21:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="150" started-at="2014-09-14T19:21:38Z" finished-at="2014-09-14T19:21:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="144" started-at="2014-09-14T19:21:38Z" finished-at="2014-09-14T19:21:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="211" started-at="2014-09-14T19:21:38Z" finished-at="2014-09-14T19:21:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="18" started-at="2014-09-14T19:21:38Z" finished-at="2014-09-14T19:21:38Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="26" started-at="2014-09-14T19:21:38Z" finished-at="2014-09-14T19:21:38Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="22" started-at="2014-09-14T19:21:38Z" finished-at="2014-09-14T19:21:38Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="209" started-at="2014-09-14T19:21:38Z" finished-at="2014-09-14T19:21:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="184" started-at="2014-09-14T19:21:38Z" finished-at="2014-09-14T19:21:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="163" started-at="2014-09-14T19:21:38Z" finished-at="2014-09-14T19:21:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="212" started-at="2014-09-14T19:21:38Z" finished-at="2014-09-14T19:21:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="172" started-at="2014-09-14T19:21:38Z" finished-at="2014-09-14T19:21:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="212" started-at="2014-09-14T19:21:38Z" finished-at="2014-09-14T19:21:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="156" started-at="2014-09-14T19:21:38Z" finished-at="2014-09-14T19:21:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="242" started-at="2014-09-14T19:21:38Z" finished-at="2014-09-14T19:21:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="145" started-at="2014-09-14T19:21:38Z" finished-at="2014-09-14T19:21:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="121" started-at="2014-09-14T19:21:39Z" finished-at="2014-09-14T19:21:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="396" started-at="2014-09-14T19:21:39Z" finished-at="2014-09-14T19:21:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="199" started-at="2014-09-14T19:21:39Z" finished-at="2014-09-14T19:21:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="149" started-at="2014-09-14T19:21:39Z" finished-at="2014-09-14T19:21:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="124" started-at="2014-09-14T19:21:39Z" finished-at="2014-09-14T19:21:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="142" started-at="2014-09-14T19:21:39Z" finished-at="2014-09-14T19:21:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="150" started-at="2014-09-14T19:21:39Z" finished-at="2014-09-14T19:21:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="295" started-at="2014-09-14T19:21:39Z" finished-at="2014-09-14T19:21:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="158" started-at="2014-09-14T19:21:39Z" finished-at="2014-09-14T19:21:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="167" started-at="2014-09-14T19:21:39Z" finished-at="2014-09-14T19:21:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="119" started-at="2014-09-14T19:21:39Z" finished-at="2014-09-14T19:21:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="177" started-at="2014-09-14T19:21:39Z" finished-at="2014-09-14T19:21:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="164" started-at="2014-09-14T19:21:39Z" finished-at="2014-09-14T19:21:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="200" started-at="2014-09-14T19:21:39Z" finished-at="2014-09-14T19:21:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="189" started-at="2014-09-14T19:21:39Z" finished-at="2014-09-14T19:21:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="111" started-at="2014-09-14T19:21:39Z" finished-at="2014-09-14T19:21:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="169" started-at="2014-09-14T19:21:39Z" finished-at="2014-09-14T19:21:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="204" started-at="2014-09-14T19:21:39Z" finished-at="2014-09-14T19:21:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="152" started-at="2014-09-14T19:21:39Z" finished-at="2014-09-14T19:21:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="298" started-at="2014-09-14T19:21:39Z" finished-at="2014-09-14T19:21:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="194" started-at="2014-09-14T19:21:39Z" finished-at="2014-09-14T19:21:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="230" started-at="2014-09-14T19:21:39Z" finished-at="2014-09-14T19:21:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="167" started-at="2014-09-14T19:21:39Z" finished-at="2014-09-14T19:21:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="213" started-at="2014-09-14T19:21:39Z" finished-at="2014-09-14T19:21:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="162" started-at="2014-09-14T19:21:39Z" finished-at="2014-09-14T19:21:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="175" started-at="2014-09-14T19:21:39Z" finished-at="2014-09-14T19:21:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="122" started-at="2014-09-14T19:21:39Z" finished-at="2014-09-14T19:21:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="171" started-at="2014-09-14T19:21:39Z" finished-at="2014-09-14T19:21:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="213" started-at="2014-09-14T19:21:39Z" finished-at="2014-09-14T19:21:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="330" started-at="2014-09-14T19:21:39Z" finished-at="2014-09-14T19:21:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="144" started-at="2014-09-14T19:21:39Z" finished-at="2014-09-14T19:21:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="101" started-at="2014-09-14T19:21:39Z" finished-at="2014-09-14T19:21:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="215" started-at="2014-09-14T19:21:39Z" finished-at="2014-09-14T19:21:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="128" started-at="2014-09-14T19:21:39Z" finished-at="2014-09-14T19:21:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="311" started-at="2014-09-14T19:21:39Z" finished-at="2014-09-14T19:21:39Z">
          <exception class="org.springframework.web.client.HttpServerErrorException">
            <message>
              <![CDATA[500 Internal Server Error]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.RestTemplate.handleResponseError(RestTemplate.java:576)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:532)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:44)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.HttpServerErrorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="159" started-at="2014-09-14T19:21:39Z" finished-at="2014-09-14T19:21:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="227" started-at="2014-09-14T19:21:39Z" finished-at="2014-09-14T19:21:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="157" started-at="2014-09-14T19:21:39Z" finished-at="2014-09-14T19:21:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="112" started-at="2014-09-14T19:21:39Z" finished-at="2014-09-14T19:21:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="164" started-at="2014-09-14T19:21:39Z" finished-at="2014-09-14T19:21:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="94" started-at="2014-09-14T19:21:39Z" finished-at="2014-09-14T19:21:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="182" started-at="2014-09-14T19:21:39Z" finished-at="2014-09-14T19:21:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="110" started-at="2014-09-14T19:21:39Z" finished-at="2014-09-14T19:21:39Z">
          <exception class="org.springframework.web.client.HttpServerErrorException">
            <message>
              <![CDATA[500 Internal Server Error]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.RestTemplate.handleResponseError(RestTemplate.java:576)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:532)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:39)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.HttpServerErrorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="178" started-at="2014-09-14T19:21:39Z" finished-at="2014-09-14T19:21:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="182" started-at="2014-09-14T19:21:39Z" finished-at="2014-09-14T19:21:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="140" started-at="2014-09-14T19:21:39Z" finished-at="2014-09-14T19:21:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="12" started-at="2014-09-14T19:21:39Z" finished-at="2014-09-14T19:21:39Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="24" started-at="2014-09-14T19:21:39Z" finished-at="2014-09-14T19:21:39Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="159" started-at="2014-09-14T19:21:39Z" finished-at="2014-09-14T19:21:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="247" started-at="2014-09-14T19:21:39Z" finished-at="2014-09-14T19:21:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="280" started-at="2014-09-14T19:21:39Z" finished-at="2014-09-14T19:21:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="237" started-at="2014-09-14T19:21:39Z" finished-at="2014-09-14T19:21:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="138" started-at="2014-09-14T19:21:39Z" finished-at="2014-09-14T19:21:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="181" started-at="2014-09-14T19:21:39Z" finished-at="2014-09-14T19:21:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="153" started-at="2014-09-14T19:21:39Z" finished-at="2014-09-14T19:21:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="168" started-at="2014-09-14T19:21:39Z" finished-at="2014-09-14T19:21:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="205" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="147" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="230" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="115" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="169" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="170" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="108" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="183" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="159" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="251" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="196" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="143" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="200" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="176" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="162" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="162" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="268" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="194" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="232" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="271" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="133" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="130" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="146" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="112" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="278" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="193" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="105" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="153" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="178" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="243" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:40Z">
          <exception class="org.springframework.web.client.HttpServerErrorException">
            <message>
              <![CDATA[500 Internal Server Error]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.RestTemplate.handleResponseError(RestTemplate.java:576)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:532)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:39)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.HttpServerErrorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="164" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="155" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:40Z">
          <exception class="org.springframework.web.client.HttpServerErrorException">
            <message>
              <![CDATA[500 Internal Server Error]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.RestTemplate.handleResponseError(RestTemplate.java:576)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:532)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:44)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.HttpServerErrorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="161" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:40Z">
          <exception class="org.springframework.web.client.HttpServerErrorException">
            <message>
              <![CDATA[500 Internal Server Error]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.RestTemplate.handleResponseError(RestTemplate.java:576)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:532)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:39)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.HttpServerErrorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="193" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="111" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:40Z">
          <exception class="org.springframework.web.client.HttpServerErrorException">
            <message>
              <![CDATA[500 Internal Server Error]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.RestTemplate.handleResponseError(RestTemplate.java:576)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:532)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:39)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.HttpServerErrorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="43" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:40Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="23" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:40Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="56" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:40Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="20" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:40Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="106" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:40Z">
          <exception class="org.springframework.web.client.HttpServerErrorException">
            <message>
              <![CDATA[500 Internal Server Error]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.RestTemplate.handleResponseError(RestTemplate.java:576)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:532)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:39)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.HttpServerErrorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="25" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:40Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="106" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:40Z">
          <exception class="org.springframework.web.client.HttpServerErrorException">
            <message>
              <![CDATA[500 Internal Server Error]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.RestTemplate.handleResponseError(RestTemplate.java:576)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:532)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:39)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.HttpServerErrorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="28" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:40Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="31" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:40Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="48" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:40Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="33" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:40Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="43" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:40Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="33" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:40Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="27" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:40Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="18" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:40Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="44" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:40Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="33" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:40Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="24" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:40Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="41" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:40Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/110/EUR111/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/110/EUR111/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:39)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="83" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:40Z">
          <exception class="org.springframework.web.client.HttpServerErrorException">
            <message>
              <![CDATA[500 Internal Server Error]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.RestTemplate.handleResponseError(RestTemplate.java:576)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:532)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:39)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.HttpServerErrorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="69" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:40Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="16" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:40Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="289" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="66" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:40Z">
          <exception class="org.springframework.web.client.HttpServerErrorException">
            <message>
              <![CDATA[500 Internal Server Error]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.RestTemplate.handleResponseError(RestTemplate.java:576)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:532)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:39)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.HttpServerErrorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="310" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="16" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:40Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="13" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:40Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="18" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:40Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="243" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="262" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="112" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="211" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="173" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="145" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="157" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="163" started-at="2014-09-14T19:21:40Z" finished-at="2014-09-14T19:21:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="165" started-at="2014-09-14T19:21:41Z" finished-at="2014-09-14T19:21:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="167" started-at="2014-09-14T19:21:41Z" finished-at="2014-09-14T19:21:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="114" started-at="2014-09-14T19:21:41Z" finished-at="2014-09-14T19:21:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="161" started-at="2014-09-14T19:21:41Z" finished-at="2014-09-14T19:21:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="106" started-at="2014-09-14T19:21:41Z" finished-at="2014-09-14T19:21:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="148" started-at="2014-09-14T19:21:41Z" finished-at="2014-09-14T19:21:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="148" started-at="2014-09-14T19:21:41Z" finished-at="2014-09-14T19:21:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="243" started-at="2014-09-14T19:21:41Z" finished-at="2014-09-14T19:21:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="170" started-at="2014-09-14T19:21:41Z" finished-at="2014-09-14T19:21:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="224" started-at="2014-09-14T19:21:41Z" finished-at="2014-09-14T19:21:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="182" started-at="2014-09-14T19:21:41Z" finished-at="2014-09-14T19:21:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="148" started-at="2014-09-14T19:21:41Z" finished-at="2014-09-14T19:21:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="178" started-at="2014-09-14T19:21:41Z" finished-at="2014-09-14T19:21:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="167" started-at="2014-09-14T19:21:41Z" finished-at="2014-09-14T19:21:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="201" started-at="2014-09-14T19:21:41Z" finished-at="2014-09-14T19:21:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="195" started-at="2014-09-14T19:21:41Z" finished-at="2014-09-14T19:21:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="187" started-at="2014-09-14T19:21:41Z" finished-at="2014-09-14T19:21:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="159" started-at="2014-09-14T19:21:41Z" finished-at="2014-09-14T19:21:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="126" started-at="2014-09-14T19:21:41Z" finished-at="2014-09-14T19:21:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="202" started-at="2014-09-14T19:21:41Z" finished-at="2014-09-14T19:21:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="288" started-at="2014-09-14T19:21:41Z" finished-at="2014-09-14T19:21:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="139" started-at="2014-09-14T19:21:41Z" finished-at="2014-09-14T19:21:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="217" started-at="2014-09-14T19:21:41Z" finished-at="2014-09-14T19:21:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="154" started-at="2014-09-14T19:21:41Z" finished-at="2014-09-14T19:21:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="159" started-at="2014-09-14T19:21:41Z" finished-at="2014-09-14T19:21:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="134" started-at="2014-09-14T19:21:41Z" finished-at="2014-09-14T19:21:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="206" started-at="2014-09-14T19:21:41Z" finished-at="2014-09-14T19:21:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="145" started-at="2014-09-14T19:21:41Z" finished-at="2014-09-14T19:21:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="158" started-at="2014-09-14T19:21:41Z" finished-at="2014-09-14T19:21:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="186" started-at="2014-09-14T19:21:41Z" finished-at="2014-09-14T19:21:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="130" started-at="2014-09-14T19:21:41Z" finished-at="2014-09-14T19:21:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="197" started-at="2014-09-14T19:21:41Z" finished-at="2014-09-14T19:21:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="213" started-at="2014-09-14T19:21:41Z" finished-at="2014-09-14T19:21:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="199" started-at="2014-09-14T19:21:41Z" finished-at="2014-09-14T19:21:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="177" started-at="2014-09-14T19:21:41Z" finished-at="2014-09-14T19:21:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="91" started-at="2014-09-14T19:21:41Z" finished-at="2014-09-14T19:21:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="133" started-at="2014-09-14T19:21:41Z" finished-at="2014-09-14T19:21:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="317" started-at="2014-09-14T19:21:41Z" finished-at="2014-09-14T19:21:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="196" started-at="2014-09-14T19:21:41Z" finished-at="2014-09-14T19:21:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="184" started-at="2014-09-14T19:21:41Z" finished-at="2014-09-14T19:21:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="201" started-at="2014-09-14T19:21:41Z" finished-at="2014-09-14T19:21:41Z">
          <exception class="org.springframework.web.client.HttpServerErrorException">
            <message>
              <![CDATA[500 Internal Server Error]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.RestTemplate.handleResponseError(RestTemplate.java:576)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:532)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:44)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.HttpServerErrorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="159" started-at="2014-09-14T19:21:41Z" finished-at="2014-09-14T19:21:41Z">
          <exception class="org.springframework.web.client.HttpServerErrorException">
            <message>
              <![CDATA[500 Internal Server Error]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.RestTemplate.handleResponseError(RestTemplate.java:576)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:532)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:44)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.HttpServerErrorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="153" started-at="2014-09-14T19:21:41Z" finished-at="2014-09-14T19:21:41Z">
          <exception class="org.springframework.web.client.HttpServerErrorException">
            <message>
              <![CDATA[500 Internal Server Error]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.RestTemplate.handleResponseError(RestTemplate.java:576)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:532)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:39)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.HttpServerErrorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="153" started-at="2014-09-14T19:21:41Z" finished-at="2014-09-14T19:21:41Z">
          <exception class="org.springframework.web.client.HttpServerErrorException">
            <message>
              <![CDATA[500 Internal Server Error]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.RestTemplate.handleResponseError(RestTemplate.java:576)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:532)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:39)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.HttpServerErrorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="302" started-at="2014-09-14T19:21:41Z" finished-at="2014-09-14T19:21:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="20" started-at="2014-09-14T19:21:41Z" finished-at="2014-09-14T19:21:41Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="19" started-at="2014-09-14T19:21:41Z" finished-at="2014-09-14T19:21:41Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="32" started-at="2014-09-14T19:21:41Z" finished-at="2014-09-14T19:21:41Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="38" started-at="2014-09-14T19:21:41Z" finished-at="2014-09-14T19:21:41Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="21" started-at="2014-09-14T19:21:41Z" finished-at="2014-09-14T19:21:41Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="221" started-at="2014-09-14T19:21:41Z" finished-at="2014-09-14T19:21:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="199" started-at="2014-09-14T19:21:41Z" finished-at="2014-09-14T19:21:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="35" started-at="2014-09-14T19:21:41Z" finished-at="2014-09-14T19:21:41Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="32" started-at="2014-09-14T19:21:41Z" finished-at="2014-09-14T19:21:41Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="37" started-at="2014-09-14T19:21:41Z" finished-at="2014-09-14T19:21:41Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="143" started-at="2014-09-14T19:21:41Z" finished-at="2014-09-14T19:21:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="142" started-at="2014-09-14T19:21:41Z" finished-at="2014-09-14T19:21:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="199" started-at="2014-09-14T19:21:41Z" finished-at="2014-09-14T19:21:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="111" started-at="2014-09-14T19:21:41Z" finished-at="2014-09-14T19:21:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="189" started-at="2014-09-14T19:21:41Z" finished-at="2014-09-14T19:21:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="357" started-at="2014-09-14T19:21:41Z" finished-at="2014-09-14T19:21:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="125" started-at="2014-09-14T19:21:42Z" finished-at="2014-09-14T19:21:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="205" started-at="2014-09-14T19:21:42Z" finished-at="2014-09-14T19:21:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="198" started-at="2014-09-14T19:21:42Z" finished-at="2014-09-14T19:21:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="173" started-at="2014-09-14T19:21:42Z" finished-at="2014-09-14T19:21:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="232" started-at="2014-09-14T19:21:42Z" finished-at="2014-09-14T19:21:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="228" started-at="2014-09-14T19:21:42Z" finished-at="2014-09-14T19:21:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="161" started-at="2014-09-14T19:21:42Z" finished-at="2014-09-14T19:21:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="192" started-at="2014-09-14T19:21:42Z" finished-at="2014-09-14T19:21:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="161" started-at="2014-09-14T19:21:42Z" finished-at="2014-09-14T19:21:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="239" started-at="2014-09-14T19:21:42Z" finished-at="2014-09-14T19:21:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="130" started-at="2014-09-14T19:21:42Z" finished-at="2014-09-14T19:21:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="143" started-at="2014-09-14T19:21:42Z" finished-at="2014-09-14T19:21:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="141" started-at="2014-09-14T19:21:42Z" finished-at="2014-09-14T19:21:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="205" started-at="2014-09-14T19:21:42Z" finished-at="2014-09-14T19:21:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="193" started-at="2014-09-14T19:21:42Z" finished-at="2014-09-14T19:21:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="122" started-at="2014-09-14T19:21:42Z" finished-at="2014-09-14T19:21:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="190" started-at="2014-09-14T19:21:42Z" finished-at="2014-09-14T19:21:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="140" started-at="2014-09-14T19:21:42Z" finished-at="2014-09-14T19:21:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="125" started-at="2014-09-14T19:21:42Z" finished-at="2014-09-14T19:21:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="183" started-at="2014-09-14T19:21:42Z" finished-at="2014-09-14T19:21:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="214" started-at="2014-09-14T19:21:42Z" finished-at="2014-09-14T19:21:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="184" started-at="2014-09-14T19:21:42Z" finished-at="2014-09-14T19:21:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="198" started-at="2014-09-14T19:21:42Z" finished-at="2014-09-14T19:21:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="209" started-at="2014-09-14T19:21:42Z" finished-at="2014-09-14T19:21:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="166" started-at="2014-09-14T19:21:42Z" finished-at="2014-09-14T19:21:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="204" started-at="2014-09-14T19:21:42Z" finished-at="2014-09-14T19:21:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="135" started-at="2014-09-14T19:21:42Z" finished-at="2014-09-14T19:21:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="173" started-at="2014-09-14T19:21:42Z" finished-at="2014-09-14T19:21:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="171" started-at="2014-09-14T19:21:42Z" finished-at="2014-09-14T19:21:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="129" started-at="2014-09-14T19:21:42Z" finished-at="2014-09-14T19:21:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="171" started-at="2014-09-14T19:21:42Z" finished-at="2014-09-14T19:21:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="143" started-at="2014-09-14T19:21:42Z" finished-at="2014-09-14T19:21:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="246" started-at="2014-09-14T19:21:42Z" finished-at="2014-09-14T19:21:42Z">
          <exception class="org.springframework.web.client.HttpServerErrorException">
            <message>
              <![CDATA[500 Internal Server Error]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.RestTemplate.handleResponseError(RestTemplate.java:576)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:532)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:44)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.HttpServerErrorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="197" started-at="2014-09-14T19:21:42Z" finished-at="2014-09-14T19:21:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="242" started-at="2014-09-14T19:21:42Z" finished-at="2014-09-14T19:21:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="296" started-at="2014-09-14T19:21:42Z" finished-at="2014-09-14T19:21:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="261" started-at="2014-09-14T19:21:42Z" finished-at="2014-09-14T19:21:42Z">
          <exception class="org.springframework.web.client.HttpServerErrorException">
            <message>
              <![CDATA[500 Internal Server Error]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.RestTemplate.handleResponseError(RestTemplate.java:576)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:532)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:44)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.HttpServerErrorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="190" started-at="2014-09-14T19:21:42Z" finished-at="2014-09-14T19:21:42Z">
          <exception class="org.springframework.web.client.HttpServerErrorException">
            <message>
              <![CDATA[500 Internal Server Error]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.RestTemplate.handleResponseError(RestTemplate.java:576)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:532)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:44)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.HttpServerErrorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="292" started-at="2014-09-14T19:21:42Z" finished-at="2014-09-14T19:21:42Z">
          <exception class="org.springframework.web.client.HttpServerErrorException">
            <message>
              <![CDATA[500 Internal Server Error]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.RestTemplate.handleResponseError(RestTemplate.java:576)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:532)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:44)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.HttpServerErrorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="228" started-at="2014-09-14T19:21:42Z" finished-at="2014-09-14T19:21:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="125" started-at="2014-09-14T19:21:42Z" finished-at="2014-09-14T19:21:42Z">
          <exception class="org.springframework.web.client.HttpServerErrorException">
            <message>
              <![CDATA[500 Internal Server Error]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.RestTemplate.handleResponseError(RestTemplate.java:576)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:532)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:39)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.HttpServerErrorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="13" started-at="2014-09-14T19:21:42Z" finished-at="2014-09-14T19:21:42Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="12" started-at="2014-09-14T19:21:42Z" finished-at="2014-09-14T19:21:42Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="20" started-at="2014-09-14T19:21:42Z" finished-at="2014-09-14T19:21:42Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="21" started-at="2014-09-14T19:21:42Z" finished-at="2014-09-14T19:21:42Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="28" started-at="2014-09-14T19:21:42Z" finished-at="2014-09-14T19:21:42Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="38" started-at="2014-09-14T19:21:42Z" finished-at="2014-09-14T19:21:42Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="263" started-at="2014-09-14T19:21:42Z" finished-at="2014-09-14T19:21:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="273" started-at="2014-09-14T19:21:42Z" finished-at="2014-09-14T19:21:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="22" started-at="2014-09-14T19:21:42Z" finished-at="2014-09-14T19:21:42Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="40" started-at="2014-09-14T19:21:42Z" finished-at="2014-09-14T19:21:42Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="56" started-at="2014-09-14T19:21:42Z" finished-at="2014-09-14T19:21:42Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="61" started-at="2014-09-14T19:21:42Z" finished-at="2014-09-14T19:21:42Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="35" started-at="2014-09-14T19:21:42Z" finished-at="2014-09-14T19:21:42Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="15" started-at="2014-09-14T19:21:42Z" finished-at="2014-09-14T19:21:42Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="205" started-at="2014-09-14T19:21:42Z" finished-at="2014-09-14T19:21:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="216" started-at="2014-09-14T19:21:42Z" finished-at="2014-09-14T19:21:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="117" started-at="2014-09-14T19:21:42Z" finished-at="2014-09-14T19:21:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="161" started-at="2014-09-14T19:21:42Z" finished-at="2014-09-14T19:21:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="245" started-at="2014-09-14T19:21:42Z" finished-at="2014-09-14T19:21:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="164" started-at="2014-09-14T19:21:42Z" finished-at="2014-09-14T19:21:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="161" started-at="2014-09-14T19:21:42Z" finished-at="2014-09-14T19:21:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="94" started-at="2014-09-14T19:21:42Z" finished-at="2014-09-14T19:21:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="231" started-at="2014-09-14T19:21:43Z" finished-at="2014-09-14T19:21:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="185" started-at="2014-09-14T19:21:43Z" finished-at="2014-09-14T19:21:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="142" started-at="2014-09-14T19:21:43Z" finished-at="2014-09-14T19:21:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="152" started-at="2014-09-14T19:21:43Z" finished-at="2014-09-14T19:21:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="242" started-at="2014-09-14T19:21:43Z" finished-at="2014-09-14T19:21:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="194" started-at="2014-09-14T19:21:43Z" finished-at="2014-09-14T19:21:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="193" started-at="2014-09-14T19:21:43Z" finished-at="2014-09-14T19:21:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="136" started-at="2014-09-14T19:21:43Z" finished-at="2014-09-14T19:21:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="215" started-at="2014-09-14T19:21:43Z" finished-at="2014-09-14T19:21:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="326" started-at="2014-09-14T19:21:43Z" finished-at="2014-09-14T19:21:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="111" started-at="2014-09-14T19:21:43Z" finished-at="2014-09-14T19:21:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="250" started-at="2014-09-14T19:21:43Z" finished-at="2014-09-14T19:21:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="174" started-at="2014-09-14T19:21:43Z" finished-at="2014-09-14T19:21:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="189" started-at="2014-09-14T19:21:43Z" finished-at="2014-09-14T19:21:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="170" started-at="2014-09-14T19:21:43Z" finished-at="2014-09-14T19:21:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="197" started-at="2014-09-14T19:21:43Z" finished-at="2014-09-14T19:21:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="211" started-at="2014-09-14T19:21:43Z" finished-at="2014-09-14T19:21:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="142" started-at="2014-09-14T19:21:43Z" finished-at="2014-09-14T19:21:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="134" started-at="2014-09-14T19:21:43Z" finished-at="2014-09-14T19:21:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="165" started-at="2014-09-14T19:21:43Z" finished-at="2014-09-14T19:21:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="139" started-at="2014-09-14T19:21:43Z" finished-at="2014-09-14T19:21:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="237" started-at="2014-09-14T19:21:43Z" finished-at="2014-09-14T19:21:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="132" started-at="2014-09-14T19:21:43Z" finished-at="2014-09-14T19:21:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="136" started-at="2014-09-14T19:21:43Z" finished-at="2014-09-14T19:21:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="156" started-at="2014-09-14T19:21:43Z" finished-at="2014-09-14T19:21:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="154" started-at="2014-09-14T19:21:43Z" finished-at="2014-09-14T19:21:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="158" started-at="2014-09-14T19:21:43Z" finished-at="2014-09-14T19:21:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="173" started-at="2014-09-14T19:21:43Z" finished-at="2014-09-14T19:21:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="167" started-at="2014-09-14T19:21:43Z" finished-at="2014-09-14T19:21:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="133" started-at="2014-09-14T19:21:43Z" finished-at="2014-09-14T19:21:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="261" started-at="2014-09-14T19:21:43Z" finished-at="2014-09-14T19:21:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="216" started-at="2014-09-14T19:21:43Z" finished-at="2014-09-14T19:21:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="394" started-at="2014-09-14T19:21:43Z" finished-at="2014-09-14T19:21:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="306" started-at="2014-09-14T19:21:43Z" finished-at="2014-09-14T19:21:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="125" started-at="2014-09-14T19:21:43Z" finished-at="2014-09-14T19:21:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="140" started-at="2014-09-14T19:21:43Z" finished-at="2014-09-14T19:21:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="148" started-at="2014-09-14T19:21:43Z" finished-at="2014-09-14T19:21:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="142" started-at="2014-09-14T19:21:43Z" finished-at="2014-09-14T19:21:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="168" started-at="2014-09-14T19:21:43Z" finished-at="2014-09-14T19:21:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="89" started-at="2014-09-14T19:21:43Z" finished-at="2014-09-14T19:21:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="178" started-at="2014-09-14T19:21:43Z" finished-at="2014-09-14T19:21:43Z">
          <exception class="org.springframework.web.client.HttpServerErrorException">
            <message>
              <![CDATA[500 Internal Server Error]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.RestTemplate.handleResponseError(RestTemplate.java:576)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:532)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:44)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.HttpServerErrorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="182" started-at="2014-09-14T19:21:43Z" finished-at="2014-09-14T19:21:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="204" started-at="2014-09-14T19:21:43Z" finished-at="2014-09-14T19:21:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="160" started-at="2014-09-14T19:21:43Z" finished-at="2014-09-14T19:21:43Z">
          <exception class="org.springframework.web.client.HttpServerErrorException">
            <message>
              <![CDATA[500 Internal Server Error]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.RestTemplate.handleResponseError(RestTemplate.java:576)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:532)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:39)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.HttpServerErrorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="111" started-at="2014-09-14T19:21:43Z" finished-at="2014-09-14T19:21:43Z">
          <exception class="org.springframework.web.client.HttpServerErrorException">
            <message>
              <![CDATA[500 Internal Server Error]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.RestTemplate.handleResponseError(RestTemplate.java:576)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:532)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:39)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.HttpServerErrorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="204" started-at="2014-09-14T19:21:43Z" finished-at="2014-09-14T19:21:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="11" started-at="2014-09-14T19:21:43Z" finished-at="2014-09-14T19:21:43Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="11" started-at="2014-09-14T19:21:43Z" finished-at="2014-09-14T19:21:43Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="22" started-at="2014-09-14T19:21:43Z" finished-at="2014-09-14T19:21:43Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="46" started-at="2014-09-14T19:21:43Z" finished-at="2014-09-14T19:21:43Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="47" started-at="2014-09-14T19:21:43Z" finished-at="2014-09-14T19:21:43Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="145" started-at="2014-09-14T19:21:43Z" finished-at="2014-09-14T19:21:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="185" started-at="2014-09-14T19:21:43Z" finished-at="2014-09-14T19:21:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="132" started-at="2014-09-14T19:21:43Z" finished-at="2014-09-14T19:21:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="260" started-at="2014-09-14T19:21:43Z" finished-at="2014-09-14T19:21:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="280" started-at="2014-09-14T19:21:43Z" finished-at="2014-09-14T19:21:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="174" started-at="2014-09-14T19:21:43Z" finished-at="2014-09-14T19:21:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="205" started-at="2014-09-14T19:21:43Z" finished-at="2014-09-14T19:21:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="172" started-at="2014-09-14T19:21:44Z" finished-at="2014-09-14T19:21:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="282" started-at="2014-09-14T19:21:44Z" finished-at="2014-09-14T19:21:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="132" started-at="2014-09-14T19:21:44Z" finished-at="2014-09-14T19:21:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="249" started-at="2014-09-14T19:21:44Z" finished-at="2014-09-14T19:21:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="191" started-at="2014-09-14T19:21:44Z" finished-at="2014-09-14T19:21:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="148" started-at="2014-09-14T19:21:44Z" finished-at="2014-09-14T19:21:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="194" started-at="2014-09-14T19:21:44Z" finished-at="2014-09-14T19:21:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="146" started-at="2014-09-14T19:21:44Z" finished-at="2014-09-14T19:21:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="108" started-at="2014-09-14T19:21:44Z" finished-at="2014-09-14T19:21:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="229" started-at="2014-09-14T19:21:44Z" finished-at="2014-09-14T19:21:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="131" started-at="2014-09-14T19:21:44Z" finished-at="2014-09-14T19:21:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="208" started-at="2014-09-14T19:21:44Z" finished-at="2014-09-14T19:21:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="180" started-at="2014-09-14T19:21:44Z" finished-at="2014-09-14T19:21:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="156" started-at="2014-09-14T19:21:44Z" finished-at="2014-09-14T19:21:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="103" started-at="2014-09-14T19:21:44Z" finished-at="2014-09-14T19:21:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="113" started-at="2014-09-14T19:21:44Z" finished-at="2014-09-14T19:21:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="193" started-at="2014-09-14T19:21:44Z" finished-at="2014-09-14T19:21:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="134" started-at="2014-09-14T19:21:44Z" finished-at="2014-09-14T19:21:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="258" started-at="2014-09-14T19:21:44Z" finished-at="2014-09-14T19:21:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="153" started-at="2014-09-14T19:21:44Z" finished-at="2014-09-14T19:21:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="253" started-at="2014-09-14T19:21:44Z" finished-at="2014-09-14T19:21:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="133" started-at="2014-09-14T19:21:44Z" finished-at="2014-09-14T19:21:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="169" started-at="2014-09-14T19:21:44Z" finished-at="2014-09-14T19:21:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="131" started-at="2014-09-14T19:21:44Z" finished-at="2014-09-14T19:21:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="226" started-at="2014-09-14T19:21:44Z" finished-at="2014-09-14T19:21:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="132" started-at="2014-09-14T19:21:44Z" finished-at="2014-09-14T19:21:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="118" started-at="2014-09-14T19:21:44Z" finished-at="2014-09-14T19:21:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="121" started-at="2014-09-14T19:21:44Z" finished-at="2014-09-14T19:21:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="146" started-at="2014-09-14T19:21:44Z" finished-at="2014-09-14T19:21:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="197" started-at="2014-09-14T19:21:44Z" finished-at="2014-09-14T19:21:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="188" started-at="2014-09-14T19:21:44Z" finished-at="2014-09-14T19:21:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="206" started-at="2014-09-14T19:21:44Z" finished-at="2014-09-14T19:21:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="138" started-at="2014-09-14T19:21:44Z" finished-at="2014-09-14T19:21:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="115" started-at="2014-09-14T19:21:44Z" finished-at="2014-09-14T19:21:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="183" started-at="2014-09-14T19:21:44Z" finished-at="2014-09-14T19:21:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="226" started-at="2014-09-14T19:21:44Z" finished-at="2014-09-14T19:21:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="164" started-at="2014-09-14T19:21:44Z" finished-at="2014-09-14T19:21:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="96" started-at="2014-09-14T19:21:44Z" finished-at="2014-09-14T19:21:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="224" started-at="2014-09-14T19:21:44Z" finished-at="2014-09-14T19:21:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="271" started-at="2014-09-14T19:21:44Z" finished-at="2014-09-14T19:21:44Z">
          <exception class="org.springframework.web.client.HttpServerErrorException">
            <message>
              <![CDATA[500 Internal Server Error]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.RestTemplate.handleResponseError(RestTemplate.java:576)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:532)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:44)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.HttpServerErrorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="229" started-at="2014-09-14T19:21:44Z" finished-at="2014-09-14T19:21:44Z">
          <exception class="org.springframework.web.client.HttpServerErrorException">
            <message>
              <![CDATA[500 Internal Server Error]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.RestTemplate.handleResponseError(RestTemplate.java:576)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:532)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:44)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.HttpServerErrorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="134" started-at="2014-09-14T19:21:44Z" finished-at="2014-09-14T19:21:44Z">
          <exception class="org.springframework.web.client.HttpServerErrorException">
            <message>
              <![CDATA[500 Internal Server Error]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.RestTemplate.handleResponseError(RestTemplate.java:576)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:532)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:44)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.HttpServerErrorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="137" started-at="2014-09-14T19:21:44Z" finished-at="2014-09-14T19:21:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="260" started-at="2014-09-14T19:21:44Z" finished-at="2014-09-14T19:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="155" started-at="2014-09-14T19:21:44Z" finished-at="2014-09-14T19:21:44Z">
          <exception class="org.springframework.web.client.HttpServerErrorException">
            <message>
              <![CDATA[500 Internal Server Error]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.RestTemplate.handleResponseError(RestTemplate.java:576)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:532)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:39)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.HttpServerErrorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="236" started-at="2014-09-14T19:21:44Z" finished-at="2014-09-14T19:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="194" started-at="2014-09-14T19:21:44Z" finished-at="2014-09-14T19:21:44Z">
          <exception class="org.springframework.web.client.HttpServerErrorException">
            <message>
              <![CDATA[500 Internal Server Error]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:94)
	at org.springframework.web.client.RestTemplate.handleResponseError(RestTemplate.java:576)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:532)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:39)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.HttpServerErrorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="32" started-at="2014-09-14T19:21:44Z" finished-at="2014-09-14T19:21:44Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="26" started-at="2014-09-14T19:21:44Z" finished-at="2014-09-14T19:21:44Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="36" started-at="2014-09-14T19:21:44Z" finished-at="2014-09-14T19:21:44Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="37" started-at="2014-09-14T19:21:44Z" finished-at="2014-09-14T19:21:44Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="FAIL" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="35" started-at="2014-09-14T19:21:44Z" finished-at="2014-09-14T19:21:44Z">
          <exception class="org.springframework.web.client.ResourceAccessException">
            <message>
              <![CDATA[I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/spr-mvc-hib/convertation/-110/EUR/USD":No buffer space available (maximum connections reached?): connect; nested exception is java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:543)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:489)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:250)
	at com.sprhib.TestService.thatOrdersCanBeAddedAndQueried(TestService.java:26)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketException: No buffer space available (maximum connections reached?): connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:78)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:46)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:52)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:527)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.web.client.ResourceAccessException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="205" started-at="2014-09-14T19:21:44Z" finished-at="2014-09-14T19:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="236" started-at="2014-09-14T19:21:44Z" finished-at="2014-09-14T19:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="180" started-at="2014-09-14T19:21:44Z" finished-at="2014-09-14T19:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="178" started-at="2014-09-14T19:21:44Z" finished-at="2014-09-14T19:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="212" started-at="2014-09-14T19:21:44Z" finished-at="2014-09-14T19:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="140" started-at="2014-09-14T19:21:44Z" finished-at="2014-09-14T19:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="170" started-at="2014-09-14T19:21:44Z" finished-at="2014-09-14T19:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="226" started-at="2014-09-14T19:21:45Z" finished-at="2014-09-14T19:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="152" started-at="2014-09-14T19:21:45Z" finished-at="2014-09-14T19:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="189" started-at="2014-09-14T19:21:45Z" finished-at="2014-09-14T19:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="194" started-at="2014-09-14T19:21:45Z" finished-at="2014-09-14T19:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="102" started-at="2014-09-14T19:21:45Z" finished-at="2014-09-14T19:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="279" started-at="2014-09-14T19:21:45Z" finished-at="2014-09-14T19:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="138" started-at="2014-09-14T19:21:45Z" finished-at="2014-09-14T19:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="118" started-at="2014-09-14T19:21:45Z" finished-at="2014-09-14T19:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="236" started-at="2014-09-14T19:21:45Z" finished-at="2014-09-14T19:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="151" started-at="2014-09-14T19:21:45Z" finished-at="2014-09-14T19:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="136" started-at="2014-09-14T19:21:45Z" finished-at="2014-09-14T19:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="192" started-at="2014-09-14T19:21:45Z" finished-at="2014-09-14T19:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="128" started-at="2014-09-14T19:21:45Z" finished-at="2014-09-14T19:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="126" started-at="2014-09-14T19:21:45Z" finished-at="2014-09-14T19:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="131" started-at="2014-09-14T19:21:45Z" finished-at="2014-09-14T19:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="221" started-at="2014-09-14T19:21:45Z" finished-at="2014-09-14T19:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="146" started-at="2014-09-14T19:21:45Z" finished-at="2014-09-14T19:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="232" started-at="2014-09-14T19:21:45Z" finished-at="2014-09-14T19:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="161" started-at="2014-09-14T19:21:45Z" finished-at="2014-09-14T19:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="198" started-at="2014-09-14T19:21:45Z" finished-at="2014-09-14T19:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="110" started-at="2014-09-14T19:21:45Z" finished-at="2014-09-14T19:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="179" started-at="2014-09-14T19:21:45Z" finished-at="2014-09-14T19:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="185" started-at="2014-09-14T19:21:45Z" finished-at="2014-09-14T19:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="203" started-at="2014-09-14T19:21:45Z" finished-at="2014-09-14T19:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="155" started-at="2014-09-14T19:21:45Z" finished-at="2014-09-14T19:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="174" started-at="2014-09-14T19:21:45Z" finished-at="2014-09-14T19:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="170" started-at="2014-09-14T19:21:45Z" finished-at="2014-09-14T19:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="135" started-at="2014-09-14T19:21:45Z" finished-at="2014-09-14T19:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="187" started-at="2014-09-14T19:21:45Z" finished-at="2014-09-14T19:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="164" started-at="2014-09-14T19:21:45Z" finished-at="2014-09-14T19:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="228" started-at="2014-09-14T19:21:45Z" finished-at="2014-09-14T19:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="162" started-at="2014-09-14T19:21:45Z" finished-at="2014-09-14T19:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="206" started-at="2014-09-14T19:21:45Z" finished-at="2014-09-14T19:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="168" started-at="2014-09-14T19:21:45Z" finished-at="2014-09-14T19:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="168" started-at="2014-09-14T19:21:45Z" finished-at="2014-09-14T19:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="145" started-at="2014-09-14T19:21:45Z" finished-at="2014-09-14T19:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="172" started-at="2014-09-14T19:21:45Z" finished-at="2014-09-14T19:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="173" started-at="2014-09-14T19:21:45Z" finished-at="2014-09-14T19:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="409" started-at="2014-09-14T19:21:45Z" finished-at="2014-09-14T19:21:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="402" started-at="2014-09-14T19:21:45Z" finished-at="2014-09-14T19:21:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="448" started-at="2014-09-14T19:21:45Z" finished-at="2014-09-14T19:21:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="391" started-at="2014-09-14T19:21:45Z" finished-at="2014-09-14T19:21:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="377" started-at="2014-09-14T19:21:45Z" finished-at="2014-09-14T19:21:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="399" started-at="2014-09-14T19:21:45Z" finished-at="2014-09-14T19:21:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="404" started-at="2014-09-14T19:21:45Z" finished-at="2014-09-14T19:21:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="381" started-at="2014-09-14T19:21:45Z" finished-at="2014-09-14T19:21:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="353" started-at="2014-09-14T19:21:45Z" finished-at="2014-09-14T19:21:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="437" started-at="2014-09-14T19:21:45Z" finished-at="2014-09-14T19:21:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="171" started-at="2014-09-14T19:21:46Z" finished-at="2014-09-14T19:21:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="232" started-at="2014-09-14T19:21:46Z" finished-at="2014-09-14T19:21:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="196" started-at="2014-09-14T19:21:46Z" finished-at="2014-09-14T19:21:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="151" started-at="2014-09-14T19:21:46Z" finished-at="2014-09-14T19:21:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="136" started-at="2014-09-14T19:21:46Z" finished-at="2014-09-14T19:21:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="152" started-at="2014-09-14T19:21:46Z" finished-at="2014-09-14T19:21:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="151" started-at="2014-09-14T19:21:46Z" finished-at="2014-09-14T19:21:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="131" started-at="2014-09-14T19:21:46Z" finished-at="2014-09-14T19:21:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="155" started-at="2014-09-14T19:21:46Z" finished-at="2014-09-14T19:21:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="160" started-at="2014-09-14T19:21:46Z" finished-at="2014-09-14T19:21:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="138" started-at="2014-09-14T19:21:46Z" finished-at="2014-09-14T19:21:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="146" started-at="2014-09-14T19:21:46Z" finished-at="2014-09-14T19:21:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="145" started-at="2014-09-14T19:21:46Z" finished-at="2014-09-14T19:21:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="172" started-at="2014-09-14T19:21:46Z" finished-at="2014-09-14T19:21:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="181" started-at="2014-09-14T19:21:46Z" finished-at="2014-09-14T19:21:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="204" started-at="2014-09-14T19:21:46Z" finished-at="2014-09-14T19:21:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="209" started-at="2014-09-14T19:21:46Z" finished-at="2014-09-14T19:21:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="124" started-at="2014-09-14T19:21:46Z" finished-at="2014-09-14T19:21:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="242" started-at="2014-09-14T19:21:46Z" finished-at="2014-09-14T19:21:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="289" started-at="2014-09-14T19:21:46Z" finished-at="2014-09-14T19:21:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="142" started-at="2014-09-14T19:21:46Z" finished-at="2014-09-14T19:21:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="179" started-at="2014-09-14T19:21:46Z" finished-at="2014-09-14T19:21:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="128" started-at="2014-09-14T19:21:46Z" finished-at="2014-09-14T19:21:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="185" started-at="2014-09-14T19:21:46Z" finished-at="2014-09-14T19:21:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="182" started-at="2014-09-14T19:21:46Z" finished-at="2014-09-14T19:21:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="136" started-at="2014-09-14T19:21:46Z" finished-at="2014-09-14T19:21:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="255" started-at="2014-09-14T19:21:46Z" finished-at="2014-09-14T19:21:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="124" started-at="2014-09-14T19:21:46Z" finished-at="2014-09-14T19:21:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="124" started-at="2014-09-14T19:21:46Z" finished-at="2014-09-14T19:21:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="134" started-at="2014-09-14T19:21:46Z" finished-at="2014-09-14T19:21:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="160" started-at="2014-09-14T19:21:46Z" finished-at="2014-09-14T19:21:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="168" started-at="2014-09-14T19:21:46Z" finished-at="2014-09-14T19:21:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="152" started-at="2014-09-14T19:21:46Z" finished-at="2014-09-14T19:21:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="213" started-at="2014-09-14T19:21:46Z" finished-at="2014-09-14T19:21:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="191" started-at="2014-09-14T19:21:46Z" finished-at="2014-09-14T19:21:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="194" started-at="2014-09-14T19:21:46Z" finished-at="2014-09-14T19:21:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="118" started-at="2014-09-14T19:21:46Z" finished-at="2014-09-14T19:21:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="147" started-at="2014-09-14T19:21:46Z" finished-at="2014-09-14T19:21:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="161" started-at="2014-09-14T19:21:46Z" finished-at="2014-09-14T19:21:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="175" started-at="2014-09-14T19:21:46Z" finished-at="2014-09-14T19:21:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="206" started-at="2014-09-14T19:21:46Z" finished-at="2014-09-14T19:21:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="190" started-at="2014-09-14T19:21:46Z" finished-at="2014-09-14T19:21:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="231" started-at="2014-09-14T19:21:46Z" finished-at="2014-09-14T19:21:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="166" started-at="2014-09-14T19:21:46Z" finished-at="2014-09-14T19:21:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="198" started-at="2014-09-14T19:21:46Z" finished-at="2014-09-14T19:21:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="154" started-at="2014-09-14T19:21:46Z" finished-at="2014-09-14T19:21:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="141" started-at="2014-09-14T19:21:46Z" finished-at="2014-09-14T19:21:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="142" started-at="2014-09-14T19:21:46Z" finished-at="2014-09-14T19:21:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
        <test-method status="PASS" signature="thatOrdersCanBeAddedAndQueried()[pri:0, instance:com.sprhib.TestService@191a42]" name="thatOrdersCanBeAddedAndQueried" duration-ms="141" started-at="2014-09-14T19:21:46Z" finished-at="2014-09-14T19:21:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thatOrdersCanBeAddedAndQueried -->
      </class> <!-- com.sprhib.TestService -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
